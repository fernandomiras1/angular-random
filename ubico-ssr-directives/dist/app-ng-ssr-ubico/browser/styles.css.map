{"version":3,"sources":["./node_modules/@angular/material/prebuilt-themes/pink-bluegrey.css","./styles.scss","./node_modules/bulma/sass/utilities/_all.sass","./node_modules/bulma/sass/utilities/extends.sass","./node_modules/bulma/sass/utilities/mixins.sass","./node_modules/bulma/sass/base/_all.sass","./node_modules/bulma/sass/base/minireset.sass","./node_modules/bulma/sass/base/generic.sass","./node_modules/bulma/sass/utilities/initial-variables.sass","./node_modules/bulma/sass/utilities/derived-variables.sass","./node_modules/bulma/sass/base/animations.sass","./node_modules/bulma/sass/layout/section.sass","./node_modules/bulma/sass/elements/container.sass","./node_modules/bulma/sass/elements/image.sass","./node_modules/bulma/sass/grid/_all.sass","./node_modules/bulma/sass/grid/columns.sass","./node_modules/bulma/sass/grid/tiles.sass","./node_modules/bulma/sass/helpers/flexbox.sass","./node_modules/bulma/sass/helpers/float.sass","./node_modules/bulma/sass/helpers/position.sass","./node_modules/bulma/sass/helpers/other.sass","./node_modules/bulma/sass/helpers/spacing.sass","./node_modules/bulma/sass/helpers/visibility.sass","./node_modules/@angular/material/_theming.scss","./scss/ubico/_theme.scss","./scss/ubico/_base.scss","./scss/ubico/_variables.scss","./scss/ubico/_mixins.scss"],"names":[],"mappings":"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ED8Db,cA1De;EA2Df,gBC7Bc;ED8Bd,gBA1DiB;ANkJnB;AMpFA;EACE,cCtDa;EDuDb;EACA;ANuFF;AMtFE;EACE;ANwFJ;AMvFE;EACE,cC5EW;APqKf;AMvFA;EACE,4BCxEa;EDyEb,cEnBK;EFoBL,kBArEU;EAsEV,mBAvEY;EAwEZ,4BAzEa;ANmKf;AMxFA;EACE,4BC/Ea;EDgFb;EACA;EACA,WAxEU;EAyEV,gBAxEU;ANmKZ;AMzFA;EACE;EACA;AN4FF;AM1FA;;EAEE;AN6FF;AM3FA;EACE,kBAvFgB;ANqLlB;AM5FA;EACE;EACA;AN+FF;AM7FA;EACE,cC5Ga;ED6Gb,gBCvEY;APuKd;AM5FA;EACE;AN+FF;AM7FA;EH5DE;EG8DA,4BC/Ga;EDgHb,cCtHa;EDuHb,kBAjGc;EAkGd;EACA,uBAlGY;EAmGZ;EACA;ANgGF;AM/FE;EACE;EACA;EACA,cAvGiB;EAwGjB;ANiGJ;AM9FE;;EAEE;ANiGJ;AMhGI;;EACE;ANmGN;AMlGE;EACE,cC1IW;AP8Of;ASpPA;EACE;IACE;ETuPF;EStPA;IACE;ETwPF;AACF;AUvPA;EACE,oBALgB;AV8PlB;AG/JE;EOtFE;IACE,oBATmB;EViQvB;EUvPE;IACE,qBAVkB;EVmQtB;AACF;AWnQA;EACE;EACA;EACA;EACA;AXsQF;AWrQE;EACE;EACA,kBJyCE;EIxCF,mBJwCE;EIvCF;AXuQJ;AGpLE;EQ5FF;IAWI;EXyQF;AACF;AG/KI;EQzFA;IACE;EX2QJ;AACF;AGrKI;EQrGA;IACE;EX6QJ;AACF;AGpLI;EQxFA;IACE;EX+QJ;AACF;AG1KI;EQpGA;IACE;EXiRJ;AACF;AY1SA;EACE;EACA;AZ6SF;AY5SE;EACE;EACA;EACA;AZ8SJ;AY7SI;EACE,uBL2DW;APoPjB;AY9SE;EACE;AZgTJ;AY9RI;;;;;;;;;;;;;;;;;EAGE;EACA;AZ8SN;AY7SE;EAEE;AZ8SJ;AY7SE;EACE;AZ+SJ;AY9SE;EACE;AZgTJ;AY/SE;EACE;AZiTJ;AYhTE;EACE;AZkTJ;AYjTE;EACE;AZmTJ;AYlTE;EACE;AZoTJ;AYnTE;EACE;AZqTJ;AYpTE;EACE;AZsTJ;AYrTE;EACE;AZuTJ;AYtTE;EACE;AZwTJ;AYvTE;EACE;AZyTJ;AYxTE;EACE;AZ0TJ;AYzTE;EACE;AZ2TJ;AY1TE;EACE;AZ4TJ;AYzTI;EACE;EACA;AZ2TN;AY7TI;EACE;EACA;AZ+TN;AYjUI;EACE;EACA;AZmUN;AYrUI;EACE;EACA;AZuUN;AYzUI;EACE;EACA;AZ2UN;AY7UI;EACE;EACA;AZ+UN;AYjVI;EACE;EACA;AZmVN;Aa3ZA;ACIA;EACE;EACA;EACA;EACA;EACA,gBAPW;Adkab;Ac1ZE;EACE;EACA;Ad4ZJ;Ac3ZE;EACE;EACA;Ad6ZJ;Ac5ZE;EACE;EACA;Ad8ZJ;Ac7ZE;EACE;EACA;Ad+ZJ;Ac9ZE;EACE;EACA;AdgaJ;Ac/ZE;EACE;EACA;AdiaJ;AchaE;EACE;EACA;AdkaJ;AcjaE;EACE;EACA;AdmaJ;AclaE;EACE;EACA;AdoaJ;AcnaE;EACE;EACA;AdqaJ;AcpaE;EACE;EACA;AdsaJ;AcraE;EXqGE,gBWpGwB;Adua5B;ActaE;EXmGE,qBWlGwB;Adwa5B;AcvaE;EXiGE,gBWhGwB;Adya5B;AcxaE;EX+FE,qBW9FwB;Ad0a5B;AczaE;EX6FE,gBW5FwB;Ad2a5B;Ac1aE;EX2FE,gBW1FwB;Ad4a5B;Ac3aE;EXyFE,gBWxFwB;Ad6a5B;Ac5aE;EXuFE,gBWtFwB;Ad8a5B;Ac7aE;EXqFE,gBWpFwB;Ad+a5B;Ac7aI;EACE;EACA;Ad+aN;Ac9aI;EX+EA,eW9E0B;Adgb9B;AcpbI;EACE;EACA;AdsbN;AcrbI;EX+EA,0BW9E0B;Adub9B;Ac3bI;EACE;EACA;Ad6bN;Ac5bI;EX+EA,2BW9E0B;Ad8b9B;AclcI;EACE;EACA;AdocN;AcncI;EX+EA,gBW9E0B;Adqc9B;AczcI;EACE;EACA;Ad2cN;Ac1cI;EX+EA,2BW9E0B;Ad4c9B;AchdI;EACE;EACA;AdkdN;AcjdI;EX+EA,2BW9E0B;Admd9B;AcvdI;EACE;EACA;AdydN;AcxdI;EX+EA,gBW9E0B;Ad0d9B;Ac9dI;EACE;EACA;AdgeN;Ac/dI;EX+EA,2BW9E0B;Adie9B;AcreI;EACE;EACA;AdueN;ActeI;EX+EA,2BW9E0B;Adwe9B;Ac5eI;EACE;EACA;Ad8eN;Ac7eI;EX+EA,gBW9E0B;Ad+e9B;AcnfI;EACE;EACA;AdqfN;AcpfI;EX+EA,2BW9E0B;Adsf9B;Ac1fI;EACE;EACA;Ad4fN;Ac3fI;EX+EA,2BW9E0B;Ad6f9B;AcjgBI;EACE;EACA;AdmgBN;AclgBI;EX+EA,iBW9E0B;AdogB9B;AGrfE;EWbE;IACE;IACA;EdqgBJ;EcpgBE;IACE;IACA;EdsgBJ;EcrgBE;IACE;IACA;EdugBJ;EctgBE;IACE;IACA;EdwgBJ;EcvgBE;IACE;IACA;EdygBJ;EcxgBE;IACE;IACA;Ed0gBJ;EczgBE;IACE;IACA;Ed2gBJ;Ec1gBE;IACE;IACA;Ed4gBJ;Ec3gBE;IACE;IACA;Ed6gBJ;Ec5gBE;IACE;IACA;Ed8gBJ;Ec7gBE;IACE;IACA;Ed+gBJ;Ec9gBE;IX2CA,gBW1C0B;EdghB5B;Ec/gBE;IXyCA,qBWxC0B;EdihB5B;EchhBE;IXuCA,gBWtC0B;EdkhB5B;EcjhBE;IXqCA,qBWpC0B;EdmhB5B;EclhBE;IXmCA,gBWlC0B;EdohB5B;EcnhBE;IXiCA,gBWhC0B;EdqhB5B;EcphBE;IX+BA,gBW9B0B;EdshB5B;EcrhBE;IX6BA,gBW5B0B;EduhB5B;EcthBE;IX2BA,gBW1B0B;EdwhB5B;EcthBI;IACE;IACA;EdwhBN;EcvhBI;IXqBF,eWpB4B;EdyhB9B;Ec7hBI;IACE;IACA;Ed+hBN;Ec9hBI;IXqBF,0BWpB4B;EdgiB9B;EcpiBI;IACE;IACA;EdsiBN;EcriBI;IXqBF,2BWpB4B;EduiB9B;Ec3iBI;IACE;IACA;Ed6iBN;Ec5iBI;IXqBF,gBWpB4B;Ed8iB9B;EcljBI;IACE;IACA;EdojBN;EcnjBI;IXqBF,2BWpB4B;EdqjB9B;EczjBI;IACE;IACA;Ed2jBN;Ec1jBI;IXqBF,2BWpB4B;Ed4jB9B;EchkBI;IACE;IACA;EdkkBN;EcjkBI;IXqBF,gBWpB4B;EdmkB9B;EcvkBI;IACE;IACA;EdykBN;EcxkBI;IXqBF,2BWpB4B;Ed0kB9B;Ec9kBI;IACE;IACA;EdglBN;Ec/kBI;IXqBF,2BWpB4B;EdilB9B;EcrlBI;IACE;IACA;EdulBN;EctlBI;IXqBF,gBWpB4B;EdwlB9B;Ec5lBI;IACE;IACA;Ed8lBN;Ec7lBI;IXqBF,2BWpB4B;Ed+lB9B;EcnmBI;IACE;IACA;EdqmBN;EcpmBI;IXqBF,2BWpB4B;EdsmB9B;Ec1mBI;IACE;IACA;Ed4mBN;Ec3mBI;IXqBF,iBWpB4B;Ed6mB9B;AACF;AGrpBE;EWyCE;IAEE;IACA;Ed8mBJ;Ec7mBE;IAEE;IACA;Ed8mBJ;Ec7mBE;IAEE;IACA;Ed8mBJ;Ec7mBE;IAEE;IACA;Ed8mBJ;Ec7mBE;IAEE;IACA;Ed8mBJ;Ec7mBE;IAEE;IACA;Ed8mBJ;Ec7mBE;IAEE;IACA;Ed8mBJ;Ec7mBE;IAEE;IACA;Ed8mBJ;Ec7mBE;IAEE;IACA;Ed8mBJ;Ec7mBE;IAEE;IACA;Ed8mBJ;Ec7mBE;IAEE;IACA;Ed8mBJ;Ec7mBE;IX1BA,gBW4B0B;Ed8mB5B;Ec7mBE;IX7BA,qBW+B0B;Ed8mB5B;Ec7mBE;IXhCA,gBWkC0B;Ed8mB5B;Ec7mBE;IXnCA,qBWqC0B;Ed8mB5B;Ec7mBE;IXtCA,gBWwC0B;Ed8mB5B;Ec7mBE;IXzCA,gBW2C0B;Ed8mB5B;Ec7mBE;IX5CA,gBW8C0B;Ed8mB5B;Ec7mBE;IX/CA,gBWiD0B;Ed8mB5B;Ec7mBE;IXlDA,gBWoD0B;Ed8mB5B;Ec5mBI;IAEE;IACA;Ed6mBN;Ec5mBI;IX1DF,eW4D4B;Ed6mB9B;EcnnBI;IAEE;IACA;EdonBN;EcnnBI;IX1DF,0BW4D4B;EdonB9B;Ec1nBI;IAEE;IACA;Ed2nBN;Ec1nBI;IX1DF,2BW4D4B;Ed2nB9B;EcjoBI;IAEE;IACA;EdkoBN;EcjoBI;IX1DF,gBW4D4B;EdkoB9B;EcxoBI;IAEE;IACA;EdyoBN;EcxoBI;IX1DF,2BW4D4B;EdyoB9B;Ec/oBI;IAEE;IACA;EdgpBN;Ec/oBI;IX1DF,2BW4D4B;EdgpB9B;EctpBI;IAEE;IACA;EdupBN;EctpBI;IX1DF,gBW4D4B;EdupB9B;Ec7pBI;IAEE;IACA;Ed8pBN;Ec7pBI;IX1DF,2BW4D4B;Ed8pB9B;EcpqBI;IAEE;IACA;EdqqBN;EcpqBI;IX1DF,2BW4D4B;EdqqB9B;Ec3qBI;IAEE;IACA;Ed4qBN;Ec3qBI;IX1DF,gBW4D4B;Ed4qB9B;EclrBI;IAEE;IACA;EdmrBN;EclrBI;IX1DF,2BW4D4B;EdmrB9B;EczrBI;IAEE;IACA;Ed0rBN;EczrBI;IX1DF,2BW4D4B;Ed0rB9B;EchsBI;IAEE;IACA;EdisBN;EchsBI;IX1DF,iBW4D4B;EdisB9B;AACF;AGjzBE;EWiHE;IACE;IACA;EdmsBJ;EclsBE;IACE;IACA;EdosBJ;EcnsBE;IACE;IACA;EdqsBJ;EcpsBE;IACE;IACA;EdssBJ;EcrsBE;IACE;IACA;EdusBJ;EctsBE;IACE;IACA;EdwsBJ;EcvsBE;IACE;IACA;EdysBJ;EcxsBE;IACE;IACA;Ed0sBJ;EczsBE;IACE;IACA;Ed2sBJ;Ec1sBE;IACE;IACA;Ed4sBJ;Ec3sBE;IACE;IACA;Ed6sBJ;Ec5sBE;IX/FA,gBWgG0B;Ed8sB5B;Ec7sBE;IXjGA,qBWkG0B;Ed+sB5B;Ec9sBE;IXnGA,gBWoG0B;EdgtB5B;Ec/sBE;IXrGA,qBWsG0B;EditB5B;EchtBE;IXvGA,gBWwG0B;EdktB5B;EcjtBE;IXzGA,gBW0G0B;EdmtB5B;EcltBE;IX3GA,gBW4G0B;EdotB5B;EcntBE;IX7GA,gBW8G0B;EdqtB5B;EcptBE;IX/GA,gBWgH0B;EdstB5B;EcptBI;IACE;IACA;EdstBN;EcrtBI;IXrHF,eWsH4B;EdutB9B;Ec3tBI;IACE;IACA;Ed6tBN;Ec5tBI;IXrHF,0BWsH4B;Ed8tB9B;EcluBI;IACE;IACA;EdouBN;EcnuBI;IXrHF,2BWsH4B;EdquB9B;EczuBI;IACE;IACA;Ed2uBN;Ec1uBI;IXrHF,gBWsH4B;Ed4uB9B;EchvBI;IACE;IACA;EdkvBN;EcjvBI;IXrHF,2BWsH4B;EdmvB9B;EcvvBI;IACE;IACA;EdyvBN;EcxvBI;IXrHF,2BWsH4B;Ed0vB9B;Ec9vBI;IACE;IACA;EdgwBN;Ec/vBI;IXrHF,gBWsH4B;EdiwB9B;EcrwBI;IACE;IACA;EduwBN;EctwBI;IXrHF,2BWsH4B;EdwwB9B;Ec5wBI;IACE;IACA;Ed8wBN;Ec7wBI;IXrHF,2BWsH4B;Ed+wB9B;EcnxBI;IACE;IACA;EdqxBN;EcpxBI;IXrHF,gBWsH4B;EdsxB9B;Ec1xBI;IACE;IACA;Ed4xBN;Ec3xBI;IXrHF,2BWsH4B;Ed6xB9B;EcjyBI;IACE;IACA;EdmyBN;EclyBI;IXrHF,2BWsH4B;EdoyB9B;EcxyBI;IACE;IACA;Ed0yBN;EczyBI;IXrHF,iBWsH4B;Ed2yB9B;AACF;AGj9BE;EWuKE;IACE;IACA;Ed6yBJ;Ec5yBE;IACE;IACA;Ed8yBJ;Ec7yBE;IACE;IACA;Ed+yBJ;Ec9yBE;IACE;IACA;EdgzBJ;Ec/yBE;IACE;IACA;EdizBJ;EchzBE;IACE;IACA;EdkzBJ;EcjzBE;IACE;IACA;EdmzBJ;EclzBE;IACE;IACA;EdozBJ;EcnzBE;IACE;IACA;EdqzBJ;EcpzBE;IACE;IACA;EdszBJ;EcrzBE;IACE;IACA;EduzBJ;EctzBE;IXzJA,gBW0J0B;EdwzB5B;EcvzBE;IX3JA,qBW4J0B;EdyzB5B;EcxzBE;IX7JA,gBW8J0B;Ed0zB5B;EczzBE;IX/JA,qBWgK0B;Ed2zB5B;Ec1zBE;IXjKA,gBWkK0B;Ed4zB5B;Ec3zBE;IXnKA,gBWoK0B;Ed6zB5B;Ec5zBE;IXrKA,gBWsK0B;Ed8zB5B;Ec7zBE;IXvKA,gBWwK0B;Ed+zB5B;Ec9zBE;IXzKA,gBW0K0B;Edg0B5B;Ec9zBI;IACE;IACA;Edg0BN;Ec/zBI;IX/KF,eWgL4B;Edi0B9B;Ecr0BI;IACE;IACA;Edu0BN;Ect0BI;IX/KF,0BWgL4B;Edw0B9B;Ec50BI;IACE;IACA;Ed80BN;Ec70BI;IX/KF,2BWgL4B;Ed+0B9B;Ecn1BI;IACE;IACA;Edq1BN;Ecp1BI;IX/KF,gBWgL4B;Eds1B9B;Ec11BI;IACE;IACA;Ed41BN;Ec31BI;IX/KF,2BWgL4B;Ed61B9B;Ecj2BI;IACE;IACA;Edm2BN;Ecl2BI;IX/KF,2BWgL4B;Edo2B9B;Ecx2BI;IACE;IACA;Ed02BN;Ecz2BI;IX/KF,gBWgL4B;Ed22B9B;Ec/2BI;IACE;IACA;Edi3BN;Ech3BI;IX/KF,2BWgL4B;Edk3B9B;Ect3BI;IACE;IACA;Edw3BN;Ecv3BI;IX/KF,2BWgL4B;Edy3B9B;Ec73BI;IACE;IACA;Ed+3BN;Ec93BI;IX/KF,gBWgL4B;Edg4B9B;Ecp4BI;IACE;IACA;Eds4BN;Ecr4BI;IX/KF,2BWgL4B;Edu4B9B;Ec34BI;IACE;IACA;Ed64BN;Ec54BI;IX/KF,2BWgL4B;Ed84B9B;Ecl5BI;IACE;IACA;Edo5BN;Ecn5BI;IX/KF,iBWgL4B;Edq5B9B;AACF;AGtmCI;EWkNA;IACE;IACA;Edu5BJ;Ect5BE;IACE;IACA;Edw5BJ;Ecv5BE;IACE;IACA;Edy5BJ;Ecx5BE;IACE;IACA;Ed05BJ;Ecz5BE;IACE;IACA;Ed25BJ;Ec15BE;IACE;IACA;Ed45BJ;Ec35BE;IACE;IACA;Ed65BJ;Ec55BE;IACE;IACA;Ed85BJ;Ec75BE;IACE;IACA;Ed+5BJ;Ec95BE;IACE;IACA;Edg6BJ;Ec/5BE;IACE;IACA;Edi6BJ;Ech6BE;IXnNA,gBWoN0B;Edk6B5B;Ecj6BE;IXrNA,qBWsN0B;Edm6B5B;Ecl6BE;IXvNA,gBWwN0B;Edo6B5B;Ecn6BE;IXzNA,qBW0N0B;Edq6B5B;Ecp6BE;IX3NA,gBW4N0B;Eds6B5B;Ecr6BE;IX7NA,gBW8N0B;Edu6B5B;Ect6BE;IX/NA,gBWgO0B;Edw6B5B;Ecv6BE;IXjOA,gBWkO0B;Edy6B5B;Ecx6BE;IXnOA,gBWoO0B;Ed06B5B;Ecx6BI;IACE;IACA;Ed06BN;Ecz6BI;IXzOF,eW0O4B;Ed26B9B;Ec/6BI;IACE;IACA;Edi7BN;Ech7BI;IXzOF,0BW0O4B;Edk7B9B;Ect7BI;IACE;IACA;Edw7BN;Ecv7BI;IXzOF,2BW0O4B;Edy7B9B;Ec77BI;IACE;IACA;Ed+7BN;Ec97BI;IXzOF,gBW0O4B;Edg8B9B;Ecp8BI;IACE;IACA;Eds8BN;Ecr8BI;IXzOF,2BW0O4B;Edu8B9B;Ec38BI;IACE;IACA;Ed68BN;Ec58BI;IXzOF,2BW0O4B;Ed88B9B;Ecl9BI;IACE;IACA;Edo9BN;Ecn9BI;IXzOF,gBW0O4B;Edq9B9B;Ecz9BI;IACE;IACA;Ed29BN;Ec19BI;IXzOF,2BW0O4B;Ed49B9B;Ech+BI;IACE;IACA;Edk+BN;Ecj+BI;IXzOF,2BW0O4B;Edm+B9B;Ecv+BI;IACE;IACA;Edy+BN;Ecx+BI;IXzOF,gBW0O4B;Ed0+B9B;Ec9+BI;IACE;IACA;Edg/BN;Ec/+BI;IXzOF,2BW0O4B;Edi/B9B;Ecr/BI;IACE;IACA;Edu/BN;Ect/BI;IXzOF,2BW0O4B;Edw/B9B;Ec5/BI;IACE;IACA;Ed8/BN;Ec7/BI;IXzOF,iBW0O4B;Ed+/B9B;AACF;AG3vCI;EW6PA;IACE;IACA;EdigCJ;EchgCE;IACE;IACA;EdkgCJ;EcjgCE;IACE;IACA;EdmgCJ;EclgCE;IACE;IACA;EdogCJ;EcngCE;IACE;IACA;EdqgCJ;EcpgCE;IACE;IACA;EdsgCJ;EcrgCE;IACE;IACA;EdugCJ;EctgCE;IACE;IACA;EdwgCJ;EcvgCE;IACE;IACA;EdygCJ;EcxgCE;IACE;IACA;Ed0gCJ;EczgCE;IACE;IACA;Ed2gCJ;Ec1gCE;IX7QA,gBW8Q0B;Ed4gC5B;Ec3gCE;IX/QA,qBWgR0B;Ed6gC5B;Ec5gCE;IXjRA,gBWkR0B;Ed8gC5B;Ec7gCE;IXnRA,qBWoR0B;Ed+gC5B;Ec9gCE;IXrRA,gBWsR0B;EdghC5B;Ec/gCE;IXvRA,gBWwR0B;EdihC5B;EchhCE;IXzRA,gBW0R0B;EdkhC5B;EcjhCE;IX3RA,gBW4R0B;EdmhC5B;EclhCE;IX7RA,gBW8R0B;EdohC5B;EclhCI;IACE;IACA;EdohCN;EcnhCI;IXnSF,eWoS4B;EdqhC9B;EczhCI;IACE;IACA;Ed2hCN;Ec1hCI;IXnSF,0BWoS4B;Ed4hC9B;EchiCI;IACE;IACA;EdkiCN;EcjiCI;IXnSF,2BWoS4B;EdmiC9B;EcviCI;IACE;IACA;EdyiCN;EcxiCI;IXnSF,gBWoS4B;Ed0iC9B;Ec9iCI;IACE;IACA;EdgjCN;Ec/iCI;IXnSF,2BWoS4B;EdijC9B;EcrjCI;IACE;IACA;EdujCN;EctjCI;IXnSF,2BWoS4B;EdwjC9B;Ec5jCI;IACE;IACA;Ed8jCN;Ec7jCI;IXnSF,gBWoS4B;Ed+jC9B;EcnkCI;IACE;IACA;EdqkCN;EcpkCI;IXnSF,2BWoS4B;EdskC9B;Ec1kCI;IACE;IACA;Ed4kCN;Ec3kCI;IXnSF,2BWoS4B;Ed6kC9B;EcjlCI;IACE;IACA;EdmlCN;EcllCI;IXnSF,gBWoS4B;EdolC9B;EcxlCI;IACE;IACA;Ed0lCN;EczlCI;IXnSF,2BWoS4B;Ed2lC9B;Ec/lCI;IACE;IACA;EdimCN;EchmCI;IXnSF,2BWoS4B;EdkmC9B;EctmCI;IACE;IACA;EdwmCN;EcvmCI;IXnSF,iBWoS4B;EdymC9B;AACF;AcxmCA;EXtSI,qBWuSsB;EXvStB,sBWwSsB;EACxB;Ad2mCF;Ac1mCE;EACE;Ad4mCJ;Ac3mCE;EACE;Ad6mCJ;Ac3mCE;EACE;Ad6mCJ;Ac5mCE;EXjTE,cWkTwB;EXlTxB,eWmTwB;EACxB;Ad8mCJ;Ac7mCI;EACE;EACA;Ad+mCN;Ac9mCI;EACE;AdgnCN;Ac/mCI;EACE;AdinCN;AchnCE;EACE;AdknCJ;AcjnCE;EACE;AdmnCJ;AclnCE;EACE;AdonCJ;AGh/CE;EW+XE;IACE;EdonCJ;AACF;AGz+CE;EWuXE;IACE;EdqnCJ;AACF;AcnnCE;EACE;EX7UA,wCW8UwB;EX9UxB,yCW+UwB;AdsnC5B;AcrnCI;EACE;EACA;AdunCN;AcrnCM;EACE;AdunCR;AG3gDE;EWsZM;IACE;EdwnCR;AACF;AG5gDE;EWqZM;IACE;Ed0nCR;AACF;AG7gDE;EWoZM;IACE;Ed4nCR;AACF;AG9gDE;EWmZM;IACE;Ed8nCR;AACF;AG/gDE;EWkZM;IACE;EdgoCR;AACF;AG/gDI;EWgZI;IACE;EdkoCR;AACF;AG1gDI;EWyYI;IACE;EdooCR;AACF;AG1gDI;EWuYI;IACE;EdsoCR;AACF;AGrgDI;EWgYI;IACE;EdwoCR;AACF;AcrqCM;EACE;AduqCR;AG3jDE;EWsZM;IACE;EdwqCR;AACF;AG5jDE;EWqZM;IACE;Ed0qCR;AACF;AG7jDE;EWoZM;IACE;Ed4qCR;AACF;AG9jDE;EWmZM;IACE;Ed8qCR;AACF;AG/jDE;EWkZM;IACE;EdgrCR;AACF;AG/jDI;EWgZI;IACE;EdkrCR;AACF;AG1jDI;EWyYI;IACE;EdorCR;AACF;AG1jDI;EWuYI;IACE;EdsrCR;AACF;AGrjDI;EWgYI;IACE;EdwrCR;AACF;AcrtCM;EACE;AdutCR;AG3mDE;EWsZM;IACE;EdwtCR;AACF;AG5mDE;EWqZM;IACE;Ed0tCR;AACF;AG7mDE;EWoZM;IACE;Ed4tCR;AACF;AG9mDE;EWmZM;IACE;Ed8tCR;AACF;AG/mDE;EWkZM;IACE;EdguCR;AACF;AG/mDI;EWgZI;IACE;EdkuCR;AACF;AG1mDI;EWyYI;IACE;EdouCR;AACF;AG1mDI;EWuYI;IACE;EdsuCR;AACF;AGrmDI;EWgYI;IACE;EdwuCR;AACF;AcrwCM;EACE;AduwCR;AG3pDE;EWsZM;IACE;EdwwCR;AACF;AG5pDE;EWqZM;IACE;Ed0wCR;AACF;AG7pDE;EWoZM;IACE;Ed4wCR;AACF;AG9pDE;EWmZM;IACE;Ed8wCR;AACF;AG/pDE;EWkZM;IACE;EdgxCR;AACF;AG/pDI;EWgZI;IACE;EdkxCR;AACF;AG1pDI;EWyYI;IACE;EdoxCR;AACF;AG1pDI;EWuYI;IACE;EdsxCR;AACF;AGrpDI;EWgYI;IACE;EdwxCR;AACF;AcrzCM;EACE;AduzCR;AG3sDE;EWsZM;IACE;EdwzCR;AACF;AG5sDE;EWqZM;IACE;Ed0zCR;AACF;AG7sDE;EWoZM;IACE;Ed4zCR;AACF;AG9sDE;EWmZM;IACE;Ed8zCR;AACF;AG/sDE;EWkZM;IACE;Edg0CR;AACF;AG/sDI;EWgZI;IACE;Edk0CR;AACF;AG1sDI;EWyYI;IACE;Edo0CR;AACF;AG1sDI;EWuYI;IACE;Eds0CR;AACF;AGrsDI;EWgYI;IACE;Edw0CR;AACF;Acr2CM;EACE;Adu2CR;AG3vDE;EWsZM;IACE;Edw2CR;AACF;AG5vDE;EWqZM;IACE;Ed02CR;AACF;AG7vDE;EWoZM;IACE;Ed42CR;AACF;AG9vDE;EWmZM;IACE;Ed82CR;AACF;AG/vDE;EWkZM;IACE;Edg3CR;AACF;AG/vDI;EWgZI;IACE;Edk3CR;AACF;AG1vDI;EWyYI;IACE;Edo3CR;AACF;AG1vDI;EWuYI;IACE;Eds3CR;AACF;AGrvDI;EWgYI;IACE;Edw3CR;AACF;Acr5CM;EACE;Adu5CR;AG3yDE;EWsZM;IACE;Edw5CR;AACF;AG5yDE;EWqZM;IACE;Ed05CR;AACF;AG7yDE;EWoZM;IACE;Ed45CR;AACF;AG9yDE;EWmZM;IACE;Ed85CR;AACF;AG/yDE;EWkZM;IACE;Edg6CR;AACF;AG/yDI;EWgZI;IACE;Edk6CR;AACF;AG1yDI;EWyYI;IACE;Edo6CR;AACF;AG1yDI;EWuYI;IACE;Eds6CR;AACF;AGryDI;EWgYI;IACE;Edw6CR;AACF;Acr8CM;EACE;Adu8CR;AG31DE;EWsZM;IACE;Edw8CR;AACF;AG51DE;EWqZM;IACE;Ed08CR;AACF;AG71DE;EWoZM;IACE;Ed48CR;AACF;AG91DE;EWmZM;IACE;Ed88CR;AACF;AG/1DE;EWkZM;IACE;Edg9CR;AACF;AG/1DI;EWgZI;IACE;Edk9CR;AACF;AG11DI;EWyYI;IACE;Edo9CR;AACF;AG11DI;EWuYI;IACE;Eds9CR;AACF;AGr1DI;EWgYI;IACE;Edw9CR;AACF;Acr/CM;EACE;Adu/CR;AG34DE;EWsZM;IACE;Edw/CR;AACF;AG54DE;EWqZM;IACE;Ed0/CR;AACF;AG74DE;EWoZM;IACE;Ed4/CR;AACF;AG94DE;EWmZM;IACE;Ed8/CR;AACF;AG/4DE;EWkZM;IACE;EdggDR;AACF;AG/4DI;EWgZI;IACE;EdkgDR;AACF;AG14DI;EWyYI;IACE;EdogDR;AACF;AG14DI;EWuYI;IACE;EdsgDR;AACF;AGr4DI;EWgYI;IACE;EdwgDR;AACF;AergEA;EACE;EACA;EACA;EACA;EACA;EACA;EAAA;AfwgEF;AetgEE;EACE;EACA;EACA;AfwgEJ;AevgEI;EACE;AfygEN;AexgEI;EACE,sBAjBS;Af2hEf;AezgEE;EACE;Af2gEJ;Ae1gEE;EACE,gBArBW;AfiiEf;Ae3gEE;EACE;Af6gEJ;Ae5gEI;EACE;Af8gEN;AGp9DE;EYvDE;IACE;Ef8gEJ;Ee5gEI;IACE;IACA;Ef8gEN;EehhEI;IACE;IACA;EfkhEN;EephEI;IACE;IACA;EfshEN;EexhEI;IACE;IACA;Ef0hEN;Ee5hEI;IACE;IACA;Ef8hEN;EehiEI;IACE;IACA;EfkiEN;EepiEI;IACE;IACA;EfsiEN;EexiEI;IACE;IACA;Ef0iEN;Ee5iEI;IACE;IACA;Ef8iEN;EehjEI;IACE;IACA;EfkjEN;EepjEI;IACE;IACA;EfsjEN;EexjEI;IACE;IACA;Ef0jEN;AACF;AgB5lEE;EACE;AhB+lEJ;AgBhmEE;EACE;AhBmmEJ;AgBpmEE;EACE;AhBumEJ;AgBxmEE;EACE;AhB2mEJ;AgBvmEE;EACE;AhB0mEJ;AgB3mEE;EACE;AhB8mEJ;AgB/mEE;EACE;AhBknEJ;AgB9mEE;EACE;AhBinEJ;AgBlnEE;EACE;AhBqnEJ;AgBtnEE;EACE;AhBynEJ;AgB1nEE;EACE;AhB6nEJ;AgB9nEE;EACE;AhBioEJ;AgBloEE;EACE;AhBqoEJ;AgBtoEE;EACE;AhByoEJ;AgB1oEE;EACE;AhB6oEJ;AgB9oEE;EACE;AhBipEJ;AgBlpEE;EACE;AhBqpEJ;AgBjpEE;EACE;AhBopEJ;AgBrpEE;EACE;AhBwpEJ;AgBzpEE;EACE;AhB4pEJ;AgB7pEE;EACE;AhBgqEJ;AgBjqEE;EACE;AhBoqEJ;AgBrqEE;EACE;AhBwqEJ;AgBzqEE;EACE;AhB4qEJ;AgB7qEE;EACE;AhBgrEJ;AgBjrEE;EACE;AhBorEJ;AgBrrEE;EACE;AhBwrEJ;AgBprEE;EACE;AhBurEJ;AgBxrEE;EACE;AhB2rEJ;AgB5rEE;EACE;AhB+rEJ;AgBhsEE;EACE;AhBmsEJ;AgBpsEE;EACE;AhBusEJ;AgBxsEE;EACE;AhB2sEJ;AgB5sEE;EACE;AhB+sEJ;AgBhtEE;EACE;AhBmtEJ;AgBptEE;EACE;AhButEJ;AgBntEE;EACE;AhBstEJ;AgBvtEE;EACE;AhB0tEJ;AgB3tEE;EACE;AhB8tEJ;AgB/tEE;EACE;AhBkuEJ;AgBnuEE;EACE;AhBsuEJ;AgBvuEE;EACE;AhB0uEJ;AgBruEI;EACE;AhBwuEN;AgBzuEI;EACE;AhB4uEN;AgB7uEI;EACE;AhBgvEN;AgBjvEI;EACE;AhBovEN;AgBrvEI;EACE;AhBwvEN;AgBzvEI;EACE;AhB4vEN;AgB7vEI;EACE;AhBgwEN;AgBjwEI;EACE;AhBowEN;AgBrwEI;EACE;AhBwwEN;AgBzwEI;EACE;AhB4wEN;AgB7wEI;EACE;AhBgxEN;AgBjxEI;EACE;AhBoxEN;AGnzEE;EACE;EACA;EACA;AHszEJ;AiBvzEA;EACE;AjB0zEF;AiBxzEA;EACE;AjB2zEF;AkB/zEA;EACE;AlBk0EF;AmBt0EA;EACE;AnBy0EF;AmBv0EA;EACE;AnB00EF;AmBx0EA;EACE;EACA;AnB20EF;AoBr1EA;EACE;ApBw1EF;AoBt1EA;EACE;ApBy1EF;AoB90EI;EACE;ApBi1EN;AoB90EM;EACE;ApBi1ER;AoBl1EM;EACE;ApBq1ER;AoBt1EM;EACE;ApBy1ER;AoB11EM;EACE;ApB61ER;AoB11EM;EACE;EACA;ApB61ER;AoB11EM;EACE;EACA;ApB61ER;AoB52EI;EACE;ApB+2EN;AoB52EM;EACE;ApB+2ER;AoBh3EM;EACE;ApBm3ER;AoBp3EM;EACE;ApBu3ER;AoBx3EM;EACE;ApB23ER;AoBx3EM;EACE;EACA;ApB23ER;AoBx3EM;EACE;EACA;ApB23ER;AoB14EI;EACE;ApB64EN;AoB14EM;EACE;ApB64ER;AoB94EM;EACE;ApBi5ER;AoBl5EM;EACE;ApBq5ER;AoBt5EM;EACE;ApBy5ER;AoBt5EM;EACE;EACA;ApBy5ER;AoBt5EM;EACE;EACA;ApBy5ER;AoBx6EI;EACE;ApB26EN;AoBx6EM;EACE;ApB26ER;AoB56EM;EACE;ApB+6ER;AoBh7EM;EACE;ApBm7ER;AoBp7EM;EACE;ApBu7ER;AoBp7EM;EACE;EACA;ApBu7ER;AoBp7EM;EACE;EACA;ApBu7ER;AoBt8EI;EACE;ApBy8EN;AoBt8EM;EACE;ApBy8ER;AoB18EM;EACE;ApB68ER;AoB98EM;EACE;ApBi9ER;AoBl9EM;EACE;ApBq9ER;AoBl9EM;EACE;EACA;ApBq9ER;AoBl9EM;EACE;EACA;ApBq9ER;AoBp+EI;EACE;ApBu+EN;AoBp+EM;EACE;ApBu+ER;AoBx+EM;EACE;ApB2+ER;AoB5+EM;EACE;ApB++ER;AoBh/EM;EACE;ApBm/ER;AoBh/EM;EACE;EACA;ApBm/ER;AoBh/EM;EACE;EACA;ApBm/ER;AoBlgFI;EACE;ApBqgFN;AoBlgFM;EACE;ApBqgFR;AoBtgFM;EACE;ApBygFR;AoB1gFM;EACE;ApB6gFR;AoB9gFM;EACE;ApBihFR;AoB9gFM;EACE;EACA;ApBihFR;AoB9gFM;EACE;EACA;ApBihFR;AoBhiFI;EACE;ApBmiFN;AoBhiFM;EACE;ApBmiFR;AoBpiFM;EACE;ApBuiFR;AoBxiFM;EACE;ApB2iFR;AoB5iFM;EACE;ApB+iFR;AoB5iFM;EACE;EACA;ApB+iFR;AoB5iFM;EACE;EACA;ApB+iFR;AoB9jFI;EACE;ApBikFN;AoB9jFM;EACE;ApBikFR;AoBlkFM;EACE;ApBqkFR;AoBtkFM;EACE;ApBykFR;AoB1kFM;EACE;ApB6kFR;AoB1kFM;EACE;EACA;ApB6kFR;AoB1kFM;EACE;EACA;ApB6kFR;AoB5lFI;EACE;ApB+lFN;AoB5lFM;EACE;ApB+lFR;AoBhmFM;EACE;ApBmmFR;AoBpmFM;EACE;ApBumFR;AoBxmFM;EACE;ApB2mFR;AoBxmFM;EACE;EACA;ApB2mFR;AoBxmFM;EACE;EACA;ApB2mFR;AoB1nFI;EACE;ApB6nFN;AoB1nFM;EACE;ApB6nFR;AoB9nFM;EACE;ApBioFR;AoBloFM;EACE;ApBqoFR;AoBtoFM;EACE;ApByoFR;AoBtoFM;EACE;EACA;ApByoFR;AoBtoFM;EACE;EACA;ApByoFR;AoBxpFI;EACE;ApB2pFN;AoBxpFM;EACE;ApB2pFR;AoB5pFM;EACE;ApB+pFR;AoBhqFM;EACE;ApBmqFR;AoBpqFM;EACE;ApBuqFR;AoBpqFM;EACE;EACA;ApBuqFR;AoBpqFM;EACE;EACA;ApBuqFR;AoBtrFI;EACE;ApByrFN;AoBtrFM;EACE;ApByrFR;AoB1rFM;EACE;ApB6rFR;AoB9rFM;EACE;ApBisFR;AoBlsFM;EACE;ApBqsFR;AoBlsFM;EACE;EACA;ApBqsFR;AoBlsFM;EACE;EACA;ApBqsFR;AoBptFI;EACE;ApButFN;AoBptFM;EACE;ApButFR;AoBxtFM;EACE;ApB2tFR;AoB5tFM;EACE;ApB+tFR;AoBhuFM;EACE;ApBmuFR;AoBhuFM;EACE;EACA;ApBmuFR;AoBhuFM;EACE;EACA;ApBmuFR;AqB5vFE;EACE;ArB+vFJ;AGprFE;EkBzEE;IACE;ErBiwFJ;AACF;AGtrFE;EkB1EE;IACE;ErBmwFJ;AACF;AGvrFE;EkB3EE;IACE;ErBqwFJ;AACF;AGxrFE;EkB5EE;IACE;ErBuwFJ;AACF;AGzrFE;EkB7EE;IACE;ErBywFJ;AACF;AGzrFI;EkB/EA;IACE;ErB2wFJ;AACF;AGprFI;EkBtFA;IACE;ErB6wFJ;AACF;AGprFI;EkBxFA;IACE;ErB+wFJ;AACF;AG/qFI;EkB/FA;IACE;ErBixFJ;AACF;AqB9yFE;EACE;ArBgzFJ;AGruFE;EkBzEE;IACE;ErBkzFJ;AACF;AGvuFE;EkB1EE;IACE;ErBozFJ;AACF;AGxuFE;EkB3EE;IACE;ErBszFJ;AACF;AGzuFE;EkB5EE;IACE;ErBwzFJ;AACF;AG1uFE;EkB7EE;IACE;ErB0zFJ;AACF;AG1uFI;EkB/EA;IACE;ErB4zFJ;AACF;AGruFI;EkBtFA;IACE;ErB8zFJ;AACF;AGruFI;EkBxFA;IACE;ErBg0FJ;AACF;AGhuFI;EkB/FA;IACE;ErBk0FJ;AACF;AqB/1FE;EACE;ArBi2FJ;AGtxFE;EkBzEE;IACE;ErBm2FJ;AACF;AGxxFE;EkB1EE;IACE;ErBq2FJ;AACF;AGzxFE;EkB3EE;IACE;ErBu2FJ;AACF;AG1xFE;EkB5EE;IACE;ErBy2FJ;AACF;AG3xFE;EkB7EE;IACE;ErB22FJ;AACF;AG3xFI;EkB/EA;IACE;ErB62FJ;AACF;AGtxFI;EkBtFA;IACE;ErB+2FJ;AACF;AGtxFI;EkBxFA;IACE;ErBi3FJ;AACF;AGjxFI;EkB/FA;IACE;ErBm3FJ;AACF;AqBh5FE;EACE;ArBk5FJ;AGv0FE;EkBzEE;IACE;ErBo5FJ;AACF;AGz0FE;EkB1EE;IACE;ErBs5FJ;AACF;AG10FE;EkB3EE;IACE;ErBw5FJ;AACF;AG30FE;EkB5EE;IACE;ErB05FJ;AACF;AG50FE;EkB7EE;IACE;ErB45FJ;AACF;AG50FI;EkB/EA;IACE;ErB85FJ;AACF;AGv0FI;EkBtFA;IACE;ErBg6FJ;AACF;AGv0FI;EkBxFA;IACE;ErBk6FJ;AACF;AGl0FI;EkB/FA;IACE;ErBo6FJ;AACF;AqBj8FE;EACE;ArBm8FJ;AGx3FE;EkBzEE;IACE;ErBq8FJ;AACF;AG13FE;EkB1EE;IACE;ErBu8FJ;AACF;AG33FE;EkB3EE;IACE;ErBy8FJ;AACF;AG53FE;EkB5EE;IACE;ErB28FJ;AACF;AG73FE;EkB7EE;IACE;ErB68FJ;AACF;AG73FI;EkB/EA;IACE;ErB+8FJ;AACF;AGx3FI;EkBtFA;IACE;ErBi9FJ;AACF;AGx3FI;EkBxFA;IACE;ErBm9FJ;AACF;AGn3FI;EkB/FA;IACE;ErBq9FJ;AACF;AqBp9FA;EACE;ArBs9FF;AqBp9FA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ArBu9FF;AGp7FE;EkBhCA;IACE;ErBw9FF;AACF;AGt7FE;EkBhCA;IACE;ErBy9FF;AACF;AGv7FE;EkBhCA;IACE;ErB09FF;AACF;AGx7FE;EkBhCA;IACE;ErB29FF;AACF;AGz7FE;EkBhCA;IACE;ErB49FF;AACF;AGz7FI;EkBjCF;IACE;ErB69FF;AACF;AGp7FI;EkBvCF;IACE;ErB89FF;AACF;AGp7FI;EkBxCF;IACE;ErB+9FF;AACF;AG/6FI;EkB9CF;IACE;ErBg+FF;AACF;AqB/9FA;EACE;ArBi+FF;AGr+FE;EkBOA;IACE;ErBk+FF;AACF;AGv+FE;EkBOA;IACE;ErBm+FF;AACF;AGx+FE;EkBOA;IACE;ErBo+FF;AACF;AGz+FE;EkBOA;IACE;ErBq+FF;AACF;AG1+FE;EkBOA;IACE;ErBs+FF;AACF;AG1+FI;EkBMF;IACE;ErBu+FF;AACF;AGr+FI;EkBAF;IACE;ErBw+FF;AACF;AGr+F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CA;EACA;EACA;AtBsqHJ;AsBlqHE;EACE;EACA,aA3B4B;AtBgsHhC;AsBnqHI;EAGE;AtBmqHN;AsB3pHE;EACE;EACA;EACA,aA1CkB;AtBwsHtB;AsB1pHE;EAGE;EACA;EACA;EACA,aApDkB;EAwDlB;EACA;EACA;AtBwpHJ;AsBrpHE;EAEE;EACA;EACA;EACA;EACA;EAEA,aApE2B;EAqE3B;EACA;EACA;EACA;AtBspHJ;AsBppHI;EACE;AtBspHN;AsBjpHM;EAGE;AtBipHR;AsB5oHE;EACE,+BAtFmC;AtBquHvC;AsBvoHI;EACE;AtB0oHN;AsBpoHE;EACE;EACA,aA3GkB;EAgHlB;EAIA;EAGA;EACA;AtB8nHJ;AsB1nHE;EACE;EAKA;EAKA;AtBqnHJ;AsBthHE;EAA0C;AtB0hH5C;AsBzhHE;EAAwC;AtB4hH1C;AsB1hHE;EAEE;AtB2hHJ;AsBxhHE;EAEE;AtB0hHJ;AsBrhHE;EACE;AtBwhHJ;AsBlhHE;EAqBA;EACA;EApBE;EACA;AtBshHJ;AsB7gHE;EASA;EACA;EARE;AtBihHJ;AsBzzDE;EACE;AtB4zDJ;AsB4oGE;EACE;AtBzoGJ;AsB99DE;EAII;AtB89DN;AsB1uDE;EACE;AtB6uDJ;AsB3uDI;EAEE;AtB4uDN;AsBxuDI;EACE;AtB0uDN;AsBvuDI;EACE;EACA;AtByuDN;AsBtuDI;EACE;AtBwuDN;AsBpuDE;EACE;AtBuuDJ;AsBpuDE;EACE;AtBuuDJ;AsBpuDE;EACE;AtBuuDJ;AsB5rDE;EACE;AtB+rDJ;AsB5rDE;EACE;AtB+rDJ;AsB7oDE;EACE;AtBgpDJ;AsB9oDI;EACE;AtBgpDN;AsB5oDE;EACE,cAZe;AtB2pDnB;AsB5oDE;;EAEE;AtB+oDJ;AsBvoDE;;;;EAIE;AtB0oDJ;AsBvoDE;;EAEE;AtB0oDJ;AsBroDI;;EACE,mBAxCa;AtBirDnB;AsBygGE;EAIE;EACA;AtBzgGJ;AsBghGI;EAx4MF;AtB43GF;AsB4gGI;EAx4MF;AtBg4GF;AsBwgGI;EAx4MF;AtBo4GF;AsBogGI;EAx4MF;AtBw4GF;AsBggGI;EAx4MF;AtB44GF;AsB4/FI;EAx4MF;AtBg5GF;AsBw/FI;EAx4MF;AtBo5GF;AsBo/FI;EAx4MF;AtBw5GF;AsBg/FI;EAx4MF;AtB45GF;AsB4+FI;EAx4MF;AtBg6GF;AsBw+FI;EAx4MF;AtBo6GF;AsBo+FI;EAx4MF;AtBw6GF;AsBg+FI;EAx4MF;AtB46GF;AsB49FI;EAx4MF;AtBg7GF;AsBw9FI;EAx4MF;AtBo7GF;AsBo9FI;EAx4MF;AtBw7GF;AsBg9FI;EAx4MF;AtB47GF;AsB48FI;EAx4MF;AtBg8GF;AsBw8FI;EAx4MF;AtBo8GF;AsBo8FI;EAx4MF;AtBw8GF;AsBg8FI;EAx4MF;AtB48GF;AsB47FI;EAx4MF;AtBg9GF;AsBw7FI;EAx4MF;AtBo9GF;AsBo7FI;EAx4MF;AtBw9GF;AsBg7FI;EAx4MF;AtB49GF;AsBm7FI;EACE;AtBh7FN;AsB1/CE;EAEE;EACA;AtB4/CJ;AsB19GE;EAXA;AtBw+GF;AsBx/CI;EACE;AtB0/CN;AsBx/CM;EACE;AtB0/CR;AsB53CE;EACE;EACA;AtB+3CJ;AsBl0HI;EAs8EE;EACA;AtB+3CN;AsB13CI;EACE;EACA;AtB63CN;AsBx3CI;EACE;EACA;AtB23CN;AsBv3CE;EACE;AtB03CJ;AsBt3CI;EACE;AtBy3CN;AsBp3CI;EAWI;EAMF;AtBw2CN;AsBp2CE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AtBu2CJ;AsBp2CE;;EAEE;AtBu2CJ;AsBl2CE;EAEE;AtBo2CJ;AsBngDE;EACE,WANmB;EAOnB,YAPmB;EAQnB,iBARmB;AtB8gDvB;AsBlgDI;EACE;AtBogDN;AsB//CI;EACE;AtBigDN;AsB5/CI;EACE;AtB8/CN;AsBz/CI;EACE;EACA;AtB2/CN;AsBt/CI;EACE;AtBw/CN;AsBn/CI;EACE;EACA;AtBq/CN;AsB/+CM;EACE;AtBi/CR;AsB5+CM;EACE;EACA;AtB8+CR;AsBz+CM;EACE;AtB2+CR;AsBt+CM;EACE;EACA;AtBw+CR;AsB3iDE;EACE,WAPqB;EAQrB,YARqB;EASrB,iBATqB;AtBujDzB;AsB1iDI;EACE;AtB4iDN;AsBviDI;EACE;AtByiDN;AsBpiDI;EACE;AtBsiDN;AsBjiDI;EACE;EACA;AtBmiDN;AsB9hDI;EACE;AtBgiDN;AsB3hDI;EACE;EACA;AtB6hDN;AsBvhDM;EACE;AtByhDR;AsBphDM;EACE;EACA;AtBshDR;AsBjhDM;EACE;AtBmhDR;AsB9gDM;EACE;EACA;AtBghDR;AsBnlDE;EACE,WALmB;EAMnB,YANmB;EAOnB,iBAPmB;AtB6lDvB;AsBllDI;EACE;AtBolDN;AsB/kDI;EACE;AtBilDN;AsB5kDI;EACE;AtB8kDN;AsBzkDI;EACE;EACA;AtB2kDN;AsBtkDI;EACE;AtBwkDN;AsBnkDI;EACE;EACA;AtBqkDN;AsB/jDM;EACE;AtBikDR;AsB5jDM;EACE;EACA;AtB8jDR;AsBzjDM;EACE;AtB2jDR;AsBtjDM;EACE;EACA;AtBwjDR;AsB75CE;EA/vEA;EAiwEE;EACA;AtBg6CJ;AsBnyCE;EAKE;EACA;AtBkyCJ;AsBl0CE;EACE;AtBo0CJ;AsBl0CE;EACE;AtBo0CJ;AsBl0CE;EACE;AtBo0CJ;AsBh0CI;EAEE;AtBi0CN;AsBp4CE;EACE;AtBs4CJ;AsBn4CE;EACE;AtBq4CJ;AsBl4CE;EACE;AtBo4CJ;AsBj4CE;EACE;AtBm4CJ;AsBlzCI;EACE,YAxGuB;EAyGvB;AtBozCN;AsBhzCE;EACE;AtBmzCJ;AsB9yCE;EACE;AtBizCJ;AsB9yCE;EAEE;EACA;AtBgzCJ;AsB32CE;EACE;AtB62CJ;AsB32CE;EACE;AtB62CJ;AsB32CE;EACE;AtB62CJ;AsBz2CI;EAEE;AtB02CN;AsBv3CE;EACE;AtBy3CJ;AsBv3CE;EACE;AtBy3CJ;AsBv3CE;EACE;AtBy3CJ;AsBr3CI;EAEE;AtBs3CN;AsBx5CE;EAXA,0CADmB;AtBu6CrB;AsBv5CE;EAfA,0CADmB;AtB06CrB;AsBt5CE;EAnBA,oCADmB;AtB66CrB;AsBtuHE;EAXA;AtBqvHF;AsB1uHE;EAXA;AtByvHF;AsB9uHE;EAXA;AtB4vHF;AsBjvHE;EAXA;AtB+vHF;AsBpvHE;EAXA;AtBmwHF;AsBxvHE;EAXA;AtBswHF;AsB3vHE;EAXA;AtBywHF;AsBxwCE;;EAjgFA;AtB8wHF;AsBxwCE;;EAEE;AtB2wCJ;AsBxwCE;EACE;AtB2wCJ;AsBzwCI;EACE;AtB2wCN;AsBvwCE;EACE;EACA;AtB0wCJ;AsBxwCI;EACE;AtB0wCN;AsBtwCE;EACE;AtBywCJ;AsBtwCE;EACE;EACA;AtBywCJ;AsBrwCI;EACE;EACA;EACA;AtBwwCN;AsBpwCE;EACE;EACA;AtBuwCJ;AsBrwCI;EACE;AtBuwCN;AsBnwCE;EACE;EACA;AtBswCJ;AsBpwCI;EACE;AtBswCN;AsBnwCI;EACE;AtBqwCN;AsBjwCE;;EAEE;AtBowCJ;AsBnvCI;EACE,iBALc;AtB2vCpB;AsBntCE;EAEE;EACA;AtBqtCJ;AsBv0HE;EAXA;AtBq1HF;AsB10HE;EAXA;AtBw1HF;AsBntCE;EACE;AtBstCJ;AsB9oCE;EACE;AtBipCJ;AsB9oCE;EACE,aAdoB;AtB+pCxB;AsB9oCE;EAGE;AtB+oCJ;AsB5oCE;EACE,yBAxBoB;AtBuqCxB;AsB3oCI;EACE;AtB8oCN;AsB3oCI;EACE;AtB6oCN;AsB1oCI;EACE;AtB4oCN;AsBroCM;EACE,yBAtCW;AtB8qCnB;AsBnoCM;EACE,qBA5CW;AtBirCnB;AsBjoCI;EACE;AtBmoCN;AsB7nCE;EACE;AtBgoCJ;AsB3nCI;;EACE;AtB+nCN;AsB5nCI;;EACE;AtB+nCN;AsB5nCI;;EACE;AtB+nCN;AsBtiCE;EA3CA,yBAwCwB;EAvCxB,0BAwCwB;AtB6iC1B;AsBnlCE;EACE,0BAqCsB;EApCtB;AtBqlCJ;AsB3iCM;EA/2FJ;AtB65HF;AsB1iCM;EACE;AtB4iCR;AsBxiCI;EACE;AtB0iCN;AsBviCI;EACE;AtByiCN;AsBpiCI;EAlEF,yBAwBwE;EAvBxE,YAuBiC;AtBmlCnC;AsBxmCE;EACE,YAoB+B;EAnB/B;AtB0mCJ;AsBrlCE;EATA,0CADmB;AtBkmCrB;AsB5iCI;EAtEF,yBAwBwE;EAvBxE,YAuBiC;AtB8lCnC;AsBnnCE;EACE,YAoB+B;EAnB/B;AtBqnCJ;AsBhmCE;EATA,oCADmB;AtB6mCrB;AsBnjCI;EA1EF,yBAwBwE;EAvBxE,YAuBiC;AtBymCnC;AsB9nCE;EACE,YAoB+B;EAnB/B;AtBgoCJ;AsB3mCE;EATA,0CADmB;AtBwnCrB;AsBp+BE;EACE;AtBu+BJ;AsBp+BE;;;;EAIE;AtBu+BJ;AsBp+BE;;EAEE;AtBu+BJ;AsBp+BE;EACE;AtBu+BJ;AsBp+BE;EACE;AtBu+BJ;AsB93BE;EACE;AtBi4BJ;AsB53BE;;;EAGE;AtB+3BJ;AsB53BE;EACE;AtB+3BJ;AsB53BE;EACE;AtB+3BJ;AsB53BE;EACE;AtB+3BJ;AsB53BE;;EAEE;EACA;AtB+3BJ;AsBr6BE;EA2CI,0BAlCa;AtBg6BnB;AsB13BE;EACE,0BAvCe;AtBo6BnB;AsB13BE;EAOI;AtBu3BN;AsBj7BE;EAqEI;AtBg3BN;AsBr7BE;EA8EM;AtB22BR;AsB1xBE;EACE,iCAtMA;AtBm+BJ;AsB1xBE;;EAEE,kCAViB;AtBuyBrB;AsB1xBE;;EAEE;AtB6xBJ;AsB1xBE;;EAEE;AtB6xBJ;AsB1xBE;;EAEE,mBAxBc;AtBqzBlB;AsB1xBE;;EAEE,mBA5BuB;AtByzB3B;AsB1/BE;EACE;EACA;AtB6/BJ;AsB1/BE;EAII;AtB0/BN;AsBj/BE;EACE;AtBo/BJ;AsBn+BE;;;EARM;AtBi/BR;AsB74BE;EAnrGA;EAqrGE;EACA;AtBg5BJ;AsBh1BE;EACE,mCAtMA;AtBwhCJ;AsB/0BE;;EAEE,kCAViB;AtB21BrB;AsB90BE;;EAEE;AtBg1BJ;AsB70BE;;EAEE;AtB+0BJ;AsB50BE;;EAEE,mBAxBc;AtBs2BlB;AsB30BE;;EAEE,mBA5BuB;AtBy2B3B;AsB1iCE;EACE;EACA;AtB4iCJ;AsBziCE;EAII;AtBwiCN;AsB/hCE;EACE;AtBiiCJ;AsBhhCE;;;EARM;AtB6hCR;AsBt3BE;EACE,kCAtMA;AtB8jCJ;AsBr3BE;;EAEE,kCAViB;AtBi4BrB;AsBp3BE;;EAEE;AtBs3BJ;AsBn3BE;;EAEE;AtBq3BJ;AsBl3BE;;EAEE,mBAxBc;AtB44BlB;AsBj3BE;;EAEE,mBA5BuB;AtB+4B3B;AsBhlCE;EACE;EACA;AtBklCJ;AsB/kCE;EAII;AtB8kCN;AsBrkCE;EACE;AtBukCJ;AsBtjCE;;;EARM;AtBmkCR;AsBj9BE;EAjsGA;AtBspIF;AsBj9BE;EACE;AtBo9BJ;AsBl9BI;EACE;AtBo9BN;AsBj9BI;EACE;AtBm9BN;AsB/8BE;EACE;AtBk9BJ;AsBh3BE;EApzGA;EAszGE;EACA;AtBm3BJ;AsB/uCE;EACE;AtBkvCJ;AsB/uCE;EACE;AtBkvCJ;AsBryBE;EAEE;EACA;AtBuyBJ;AsB5qIE;EAXA;AtB0rIF;AsBvyBE;EACE;AtB0yBJ;AsB9zBM;EAwBF;AtB0yBJ;AsBryBE;EACE;IAEE;EtBuyBJ;AACF;AsBpyBE;EACE;AtBsyBJ;AsBnyBE;;EAEE;AtBsyBJ;AsBnyBE;EACE;AtBsyBJ;AsBpyBI;;EAEE;AtBsyBN;AsB1wBI;EACE,YALe;AtBkxBrB;AsB3wBM;EACE,YAVY;AtBuxBpB;AsBwxDE;EACE,yBAXY;AtB1wDhB;AsBwxDE;EACE,yBAfY;AtBtwDhB;AsBwxDE;EACE,cAlBoB;AtBnwDxB;AsBuxDI;EACE,cAhBqB;AtBrwD3B;AsBwxDI;EACE,cAnBmB;AtBnwDzB;AsB0xDE;EACE,cA7BqB;AtB1vDzB;AsB0xDE;EACE,qCA9BqB;AtBzvDzB;AsB2xDI;EACE,yBAhCsB;AtBxvD5B;AsB0xDM;EACE,yBArCmB;AtBnvD3B;AsB2xDM;EACE,yBAxCiB;AtBjvDzB;AsB+xDI;EACE,cA9CsB;AtB9uD5B;AsB+xDI;EACE,cApDqB;AtBzuD3B;AsBgyDI;EACE,cAvDmB;AtBvuDzB;AsBsyDI;EACE,cAhEmB;AtBnuDzB;AsBqyDM;;EAEE,cApEiB;AtB/tDzB;AsBuyDI;;EAEE,yBA1EmB;AtB3tDzB;AsByyDE;EACE,cA/EqB;AtBvtDzB;AsBo0CI;EACE,0BALU;AtB5zChB;AsBo0CI;EACE,0BATU;AtBzzChB;AsBq0CI;EACE,qCAZc;AtBvzCpB;AsBs0CI;EAj/DF;EACA;EACA;AtB8qBF;AsBopDI;EACE,qCAJc;AtB7oDpB;AsBopDI;EAx0EF;EACA;EACA;AtBurBF;AsBkrCI;EACE,qCAPc;AtBxqCpB;AsBkrCI;EACE,qCAVuB;AtBtqC7B;AsBmrCI;EACE,qCAbc;AtBpqCpB;AsBqrCM;EACE,0BAjBiB;AtBlqCzB;AsBsrCM;EACE;AtBprCR;AsBy+CI;EACE,0BATY;AtB79ClB;AsBy+CI;EACE,0BAZkB;AtB39CxB;AsB2+CM;EACE,cAhBkB;AtBz9C1B;AsB4+CM;EACE,cAnBiB;AtBv9CzB;AsB6+CM;EACE,cAtBe;AtBr9CvB;AsBi/CM;EACE,cA7Be;AtBl9CvB;AsBo/CM;EACE,0BAxCiB;AtB18CzB;AsBq/CM;EACE,0BAtCmB;AtB78C3B;AsBhxBI;EACE;AtBmxBN;AsBhxBI;EACE;AtBkxBN;AsB/wBI;EACE;AtBixBN;AsBrqBE;EACE;AtBwqBJ;AsBrqBE;;EAEE;AtBwqBJ;AsBrqBE;EACE;AtBwqBJ;AsBjuBE;EA4DI;AtBwqBN;AsBhuBE;EAwDI;AtB2qBN;AsB/tBE;EAoDI;AtB8qBN;AsB9tBE;EAgDI;AtBirBN;AsB9pBE;EACE;AtBiqBJ;AsB9pBE;;EAEE;AtBiqBJ;AsB9pBE;EACE;AtBiqBJ;AsB5mBI;EACE;AtB+mBN;AsB5mBI;EACE;AtB8mBN;AsB3mBI;EACE;AtB6mBN;AsBzmBE;EACE;AtB4mBJ;AsBtmBI;;;;;EACE;AtB6mBN;AsBxmBI;EACE;AtB2mBN;AsBnhBE;EAEE;AtBqhBJ;AsBj6IE;EAXA;AtB+6IF;AsBrhBE;EACE;EACA;AtBwhBJ;AsBrhBM;;EAGE;AtBshBR;AsBjhBE;;EAEE;AtBohBJ;AsB7gBI;;;;EACE;AtBmhBN;AsBrdE;EACE;AtBwdJ;AsBrdE;;EAEE;AtBwdJ;AsBrdE;;EAEE;EACA;AtBwdJ;AsBrdE;;EAEE;AtBwdJ;AsBpdI;;;;EAIE;AtBudN;AsBlcI;EACE,gBAJK;AtBycX;AsBpaE;EACE;AtBuaJ;AsBpaE;EACE;AtBuaJ;AsBpaE;EACE;AtBuaJ;AsBnaI;EACE;AtBsaN;AsBnaI;EACE;AtBqaN;AsBlaI;EACE;AtBoaN;AsB/ZI;EACE;AtBkaN;AsB/ZI;EACE;AtBiaN;AsB9ZI;EACE;AtBgaN;AsBzXI;EACE;AtB4XN;AsBzXI;EACE;AtB2XN;AsBxXI;EACE;AtB0XN;AsBrUE;EACE;AtBwUJ;AsB7VE;EACE;AtBgWJ;AsB7VE;;EAIE;AtB6VJ;AsBrWE;EACE;AtBuWJ;AsBpWE;;EAIE;AtBoWJ;AsB5WE;EACE;AtB8WJ;AsB3WE;;EAIE;AtB2WJ;AsB1UM;;EAEE;AtB4UR;AsBzUM;;EAEE;AtB2UR;AsBxUM;EACE;AtB0UR;AsBpUI;EACE;AtBsUN;AsBtRE;EACE;AtByRJ;AsBtRE;EACE;AtByRJ;AsBtRE;EACE;AtByRJ;AsBtRE;EACE;AtByRJ;AsBtRE;EACE;AtByRJ;AsB9jJE;EAXA;AtB4kJF;AsBzRI;EACE;AtB2RN;AsBrRM;EACE;AtBwRR;AsBrRM;EACE;AtBuRR;AsBpRM;EACE;AtBsRR;AsBlRI;EACE;AtBoRN;AsBjRI;EACE;AtBmRN;AsB1NE;EACE,yBALmC;EAMnC;AtB6NJ;AsB1NE;EACE,uBAXwB;EAYxB;AtB6NJ;AsB3NI;EACE,uBAb2B;AtB0OjC;AsB1NI;EAl5IF;AtB+mJF;AsBtNE;EACE,2CAvBmB;AtBgPvB;AsBvNI;EACE,0CA1BiB;EA2BjB;AtByNN;AsBrNE;EACE,0CAhCmB;EAiCnB;AtBwNJ;AsBtNI;EACE;EACA,2CArCiB;AtB6PvB;AsBpNE;EAQI;AtBgNN;AsBvKI;EACE;AtB0KN;AsBvKI;EAGE;AtBuKN;AsBpKI;EAGE;AtBoKN;AsBjLI;EACE;AtBmLN;AsBhLI;EAGE;AtBgLN;AsB7KI;EAGE;AtB6KN;AsB1LI;EACE;AtB4LN;AsBzLI;EAGE;AtByLN;AsBtLI;EAGE;AtBsLN;AsBjJI;EAGE,uBAhBqB;AtBiK3B;AsB7IE;EAthJA;EAwhJE;AtBgJJ;AsB7IE;EACE,qCA3BoB;AtB2KxB;AsBlEE;EACE,qCAVqB;AtB+EzB;AsB9GE;;;EAGE;AtBiHJ;AsB9GE;EACE;AtBgHJ;AsB7GE;EAGE,uCADQ;AtB8GZ;AsB1HE;;;EAGE;AtB6HJ;AsB1HE;EACE;AtB4HJ;AsBzHE;EAGE,yCADQ;AtB0HZ;AsBtIE;;;EAGE;AtByIJ;AsBtIE;EACE;AtBwIJ;AsBrIE;EAGE,wCADQ;AtBsIZ;AsBxFI;;EACE,qCA3B2B;AtBuHjC;AsBvFI;;;EAGE,qCAlCwB;AtB4H9B;AsBtFM;EACE,qCAvCsB;AtB+H9B;AsBlFI;EAGE,qCADQ;AtBoFd;AsBzEM;;EAEE,qCA3DqC;AtBsI7C;AsBvEQ;;EAEE,qCAhEyC;AtByInD;AsBnEM;EACE,iCA3EiB;EA4EjB;AtBqER;AsBhEQ;EACE,iCAjFuB;AtBmJjC;AsB/DQ;EACE,iCApFoB;AtBqJ9B;AsB3DE;EACE,gCAvFsB;AtBqJ1B;AsBrDE;EACE;EAIA;AtBqDJ;AsB3CE;EACE;AtB8CJ;AsByCI;EAGE;AtBxCN;AsB8CI;EACE;IACE;EtB5CN;AACF;AsB+CI;;EAIE;AtB/CN;AsBkDI;EAGE;EACA;AtBlDN;AsBqDI;;;EAGE;EACA;AtBnDN;AsBuDM;EACE;AtBrDR;AsBwDM;;;EAGE;EACA;AtBtDR;AsB2DM;EACE;AtBzDR;AsB4DM;;;EAGE;EACA;AtB1DR;AsB8DI;EACE;EACA;AtB5DN;AsB+DI;EACE;AtB7DN;AsBgEI;EACE;AtB9DN;AsBkEE;EACE;AtB/DJ;AsBkEE;EACE;AtB/DJ;AsBkEE;;;EAGE;AtB/DJ;AsBsGI;EACE,YALK;AtB9FX;AsBsGI;;EAEE;AtBnGN;AsBwGI;EACE;EACA;AtBrGN;AsB0GM;EACE;AtBvGR;AsB4GI;EACE;AtBzGN;AsBwIE;EAYI;AtBhJN;AsB4LE;;EAEE,4CAJc;AtBrLlB;AsB6LI;;EAEE,yCAVY;EAWZ;AtB1LN;AsB8LE;EACE;AtB3LJ;AsB6LI;EACE;AtB3LN;AsB+LE;EACE;AtB5LJ;AsB+LE;EACE;AtB5LJ;AsBgME;;EAEE;EACA;AtB7LJ;AsB2OM;;;;;EACE;AtBpOR;AsByNE;EACE;AtBvNJ;AsBsNE;EACE;AtBpNJ;AsB6NM;;;;;EACE;AtBvNR;AsB4ME;EACE;AtB1MJ;AsByME;EACE;AtBvMJ;AsBgNM;;;;;EACE;AtB1MR;AsB+LE;EACE;AtB7LJ;AsB4LE;EACE;AtB1LJ;AsBmMM;;;;;EACE;AtB7LR;AsBwME;EACE;AtBtMJ;AsB0ME;EACE;AtBxMJ;AsB0MI;EACE;AtBxMN;AsB6ME;;;;;EAGE;AtBzMJ;AsB4ME;EACE;AtB1MJ;AsB+ME;;;EAEE;AtB5MJ;AsBoKM;;;;;EACE;AtB9JR;AsByKE;EACE;AtBvKJ;AsB2KE;EACE;AtBzKJ;AsB2KI;EACE;AtBzKN;AsB8KE;;;;;EAGE;AtB1KJ;AsB6KE;EACE;AtB3KJ;AsBgLE;;;EAEE;AtB7KJ;AsBqIM;;;;;EACE;AtB/HR;AsB0IE;EACE;AtBxIJ;AsB4IE;EACE;AtB1IJ;AsB4II;EACE;AtB1IN;AsB+IE;;;;;EAGE;AtB3IJ;AsB8IE;EACE;AtB5IJ;AsBiJE;;;EAEE;AtB9IJ;AsBmQE;EACE;EACA;AtBhQJ;AsBkQI;EApCF;EACA;AtB3NF;AsBkQI;EAxCF;EACA;AtBvNF;AsBkQI;EA5CF;EACA;AtBnNF;AsBuNE;;;EAGE;AtBrNJ;AsBwNE;;;;;EAKE;AtBtNJ;AsByNE;EACE;AtBvNJ;AsB0LE;EACE,gBA4Ee;AtBnQnB;AsByLE;EACE,YAyEe;AtB/PnB;AsB2QI;EAzFF;IACE,gBA8Ec;EtB5PhB;;EsBgLA;IACE,YA2Ec;EtBxPhB;AACF;AsB2SE;EACE;AtBzSJ;AsBisCE;EACE;AtB9rCJ;AsBisCE;;EAEE;AtB9rCJ;AsBotCI;EACE,gBAJK;AtB7sCX;AsBgVE;EAGE;EACA;EA35KF;AtB6kKF;AsBmVE;EACE;AtBhVJ;AwB/kLA;;;;EAKE,cCLS;AzBslLX;AwB9kLA;;;;;EAKE,cCIK;AzB6kLP;AwB9kLA;EACE,cCGa;EDFb;AxBilLF;AwBhlLE;EACE,yBClBI;EDmBJ;EACA;EACA;EACA;EACA;AxBklLJ;AwB9kLA;EACE,cC5BM;ED6BN;EACA;AxBilLF;AwB/kLE;EACE,cCnCO;EDoCP;AxBilLJ;AwBzkLM;;EAEE,yBCtBU;AzBkmLlB;AwBxkLI;EACE,mBC3BY;AzBqmLlB;AwBpkLM;;EAEE,yBClCI;AzBwmLZ;AwBlkLI;EACE,mBCvCM;AzB2mLZ;AwBjkLI;EACE,yBC3CM;AzB8mLZ;AwB7jLA;EACE;EACA;EACA;AxBgkLF;AwB9jLE;EALF;IAMI;IACA;ExBikLF;AACF;AwB5jLE;EACE;IACE,2BC3CQ;EzB0mLZ;EwB5jLE;IACE;IACA;ExB8jLJ;AACF;AwBvjLE;EACE;EACA;EACA;EACA;EACA;EACA;AxB0jLJ;AwBxjLI;EACE,cCzFE;ED0FF;EACA;EACA;EACA;EACA;EACA;EACA;AxB0jLN;AwBxjLM;EAVF;IAWI;IACA;IACA;ExB2jLN;AACF;AwBzjLM;EACE;EACA;AxB2jLR;AwBzjLQ;EAJF;IAKI;IACA;ExB4jLR;AACF;AwBrjLA;EACA;EACA;AxBwjLA;AwBtjLE;EAJF;IE/IE,sBD0DgB;ICzDhB,mBDyDgB;EzBopLhB;AACF;AwBrjLA;EACE;EACA;EACA;EACA,mBC3JS;ED4JT,cCtIM;EDuIN;EACA;EACA;EACA;EACA;AxBwjLF;AwBtjLE;;EAEE;AxBwjLJ;AwBnjLC;EACC,mBCzKM;AzB+tLR;AwBpjLE;EACE;EACA;AxBsjLJ;AwBjjLA;EACE;EACA;AxBojLF;AwBljLE;EACE;AxBojLJ;AA5uLA;AAEA;EACE;AA8uLF;AA3uLA;EACE;EACA;EACA;EACA;EACA;AA8uLF;AA3uLA;;;;;;EAME;EACA;AA8uLF;AA3uLA;EACE;AA8uLF;AA3uLA;EACE;AA8uLF;AA3uLA;EACE;AA8uLF;AA3uLA;EACE;AA8uLF,C","file":"styles.css","sourcesContent":[".mat-badge-content{font-weight:600;font-size:12px;font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-badge-small .mat-badge-content{font-size:9px}.mat-badge-large .mat-badge-content{font-size:24px}.mat-h1,.mat-headline,.mat-typography h1{font:400 24px/32px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal;margin:0 0 16px}.mat-h2,.mat-title,.mat-typography h2{font:500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal;margin:0 0 16px}.mat-h3,.mat-subheading-2,.mat-typography h3{font:400 16px/28px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal;margin:0 0 16px}.mat-h4,.mat-subheading-1,.mat-typography h4{font:400 15px/24px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal;margin:0 0 16px}.mat-h5,.mat-typography h5{font:400 calc(14px * 0.83)/20px Roboto, \"Helvetica Neue\", sans-serif;margin:0 0 12px}.mat-h6,.mat-typography h6{font:400 calc(14px * 0.67)/20px Roboto, \"Helvetica Neue\", sans-serif;margin:0 0 12px}.mat-body-strong,.mat-body-2{font:500 14px/24px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-body,.mat-body-1,.mat-typography{font:400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-body p,.mat-body-1 p,.mat-typography p{margin:0 0 12px}.mat-small,.mat-caption{font:400 12px/20px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-display-4,.mat-typography .mat-display-4{font:300 112px/112px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:-0.05em;margin:0 0 56px}.mat-display-3,.mat-typography .mat-display-3{font:400 56px/56px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:-0.02em;margin:0 0 64px}.mat-display-2,.mat-typography .mat-display-2{font:400 45px/48px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:-0.005em;margin:0 0 64px}.mat-display-1,.mat-typography .mat-display-1{font:400 34px/40px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal;margin:0 0 64px}.mat-bottom-sheet-container{font:400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-button,.mat-raised-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button,.mat-fab,.mat-mini-fab{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:14px;font-weight:500}.mat-button-toggle{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-card{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-card-title{font-size:24px;font-weight:500}.mat-card-header .mat-card-title{font-size:20px}.mat-card-subtitle,.mat-card-content{font-size:14px}.mat-checkbox{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-checkbox-layout .mat-checkbox-label{line-height:24px}.mat-chip{font-size:14px;font-weight:500}.mat-chip .mat-chip-trailing-icon.mat-icon,.mat-chip .mat-chip-remove.mat-icon{font-size:18px}.mat-table{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-header-cell{font-size:12px;font-weight:500}.mat-cell,.mat-footer-cell{font-size:14px}.mat-calendar{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-calendar-body{font-size:13px}.mat-calendar-body-label,.mat-calendar-period-button{font-size:14px;font-weight:500}.mat-calendar-table-header th{font-size:11px;font-weight:400}.mat-dialog-title{font:500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-expansion-panel-header{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:15px;font-weight:400}.mat-expansion-panel-content{font:400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-form-field{font-size:inherit;font-weight:400;line-height:1.125;font-family:Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-form-field-wrapper{padding-bottom:1.34375em}.mat-form-field-prefix .mat-icon,.mat-form-field-suffix .mat-icon{font-size:150%;line-height:1.125}.mat-form-field-prefix .mat-icon-button,.mat-form-field-suffix .mat-icon-button{height:1.5em;width:1.5em}.mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-suffix .mat-icon-button .mat-icon{height:1.125em;line-height:1.125}.mat-form-field-infix{padding:.5em 0;border-top:.84375em solid transparent}.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.34375em) scale(0.75);width:133.3333333333%}.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.34374em) scale(0.75);width:133.3333433333%}.mat-form-field-label-wrapper{top:-0.84375em;padding-top:.84375em}.mat-form-field-label{top:1.34375em}.mat-form-field-underline{bottom:1.34375em}.mat-form-field-subscript-wrapper{font-size:75%;margin-top:.6666666667em;top:calc(100% - 1.7916666667em)}.mat-form-field-appearance-legacy .mat-form-field-wrapper{padding-bottom:1.25em}.mat-form-field-appearance-legacy .mat-form-field-infix{padding:.4375em 0}.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);-ms-transform:translateY(-1.28125em) scale(0.75);width:133.3333333333%}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);-ms-transform:translateY(-1.28124em) scale(0.75);width:133.3333433333%}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);-ms-transform:translateY(-1.28123em) scale(0.75);width:133.3333533333%}.mat-form-field-appearance-legacy .mat-form-field-label{top:1.28125em}.mat-form-field-appearance-legacy .mat-form-field-underline{bottom:1.25em}.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper{margin-top:.5416666667em;top:calc(100% - 1.6666666667em)}@media print{.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.28122em) scale(0.75)}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.28121em) scale(0.75)}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.2812em) scale(0.75)}}.mat-form-field-appearance-fill .mat-form-field-infix{padding:.25em 0 .75em 0}.mat-form-field-appearance-fill .mat-form-field-label{top:1.09375em;margin-top:-0.5em}.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-0.59375em) scale(0.75);width:133.3333333333%}.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-0.59374em) scale(0.75);width:133.3333433333%}.mat-form-field-appearance-outline .mat-form-field-infix{padding:1em 0 1em 0}.mat-form-field-appearance-outline .mat-form-field-label{top:1.84375em;margin-top:-0.25em}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.59375em) scale(0.75);width:133.3333333333%}.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.59374em) scale(0.75);width:133.3333433333%}.mat-grid-tile-header,.mat-grid-tile-footer{font-size:14px}.mat-grid-tile-header .mat-line,.mat-grid-tile-footer .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-header .mat-line:nth-child(n+2),.mat-grid-tile-footer .mat-line:nth-child(n+2){font-size:12px}input.mat-input-element{margin-top:-0.0625em}.mat-menu-item{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:14px;font-weight:400}.mat-paginator,.mat-paginator-page-size .mat-select-trigger{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:12px}.mat-radio-button{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-select{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-select-trigger{height:1.125em}.mat-slide-toggle-content{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-slider-thumb-label-text{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:12px;font-weight:500}.mat-stepper-vertical,.mat-stepper-horizontal{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-step-label{font-size:14px;font-weight:400}.mat-step-sub-label-error{font-weight:normal}.mat-step-label-error{font-size:14px}.mat-step-label-selected{font-size:14px;font-weight:500}.mat-tab-group{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-tab-label,.mat-tab-link{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:14px;font-weight:500}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font:500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal;margin:0}.mat-tooltip{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:10px;padding-top:6px;padding-bottom:6px}.mat-tooltip-handset{font-size:14px;padding-top:8px;padding-bottom:8px}.mat-list-item{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-list-option{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-list-base .mat-list-item{font-size:16px}.mat-list-base .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list-base .mat-list-item .mat-line:nth-child(n+2){font-size:14px}.mat-list-base .mat-list-option{font-size:16px}.mat-list-base .mat-list-option .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list-base .mat-list-option .mat-line:nth-child(n+2){font-size:14px}.mat-list-base .mat-subheader{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:14px;font-weight:500}.mat-list-base[dense] .mat-list-item{font-size:12px}.mat-list-base[dense] .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2){font-size:12px}.mat-list-base[dense] .mat-list-option{font-size:12px}.mat-list-base[dense] .mat-list-option .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2){font-size:12px}.mat-list-base[dense] .mat-subheader{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:12px;font-weight:500}.mat-option{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:16px}.mat-optgroup-label{font:500 14px/24px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-simple-snackbar{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:14px}.mat-simple-snackbar-action{line-height:1;font-family:inherit;font-size:inherit;font-weight:500}.mat-tree{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-tree-node,.mat-nested-tree-node{font-weight:400;font-size:14px}.mat-ripple{overflow:hidden;position:relative}.mat-ripple:not(:empty){transform:translateZ(0)}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,transform 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale(0)}.cdk-high-contrast-active .mat-ripple-element{display:none}.cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap;outline:0;-webkit-appearance:none;-moz-appearance:none}.cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:transparent;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}.cdk-high-contrast-active .cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}.cdk-overlay-transparent-backdrop,.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0}.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}@keyframes cdk-text-field-autofill-start{/*!*/}@keyframes cdk-text-field-autofill-end{/*!*/}.cdk-text-field-autofill-monitored:-webkit-autofill{animation:cdk-text-field-autofill-start 0s 1ms}.cdk-text-field-autofill-monitored:not(:-webkit-autofill){animation:cdk-text-field-autofill-end 0s 1ms}textarea.cdk-textarea-autosize{resize:none}textarea.cdk-textarea-autosize-measuring{padding:2px 0 !important;box-sizing:content-box !important;height:auto !important;overflow:hidden !important}textarea.cdk-textarea-autosize-measuring-firefox{padding:2px 0 !important;box-sizing:content-box !important;height:0 !important}.mat-focus-indicator{position:relative}.mat-mdc-focus-indicator{position:relative}.mat-ripple-element{background-color:rgba(255,255,255,.1)}.mat-option{color:#fff}.mat-option:hover:not(.mat-option-disabled),.mat-option:focus:not(.mat-option-disabled){background:rgba(255,255,255,.04)}.mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled){background:rgba(255,255,255,.04)}.mat-option.mat-active{background:rgba(255,255,255,.04);color:#fff}.mat-option.mat-option-disabled{color:rgba(255,255,255,.5)}.mat-primary .mat-option.mat-selected:not(.mat-option-disabled){color:#c2185b}.mat-accent .mat-option.mat-selected:not(.mat-option-disabled){color:#b0bec5}.mat-warn .mat-option.mat-selected:not(.mat-option-disabled){color:#f44336}.mat-optgroup-label{color:rgba(255,255,255,.7)}.mat-optgroup-disabled .mat-optgroup-label{color:rgba(255,255,255,.5)}.mat-pseudo-checkbox{color:rgba(255,255,255,.7)}.mat-pseudo-checkbox::after{color:#303030}.mat-pseudo-checkbox-disabled{color:#686868}.mat-primary .mat-pseudo-checkbox-checked,.mat-primary .mat-pseudo-checkbox-indeterminate{background:#c2185b}.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-indeterminate,.mat-accent .mat-pseudo-checkbox-checked,.mat-accent .mat-pseudo-checkbox-indeterminate{background:#b0bec5}.mat-warn .mat-pseudo-checkbox-checked,.mat-warn .mat-pseudo-checkbox-indeterminate{background:#f44336}.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background:#686868}.mat-app-background{background-color:#303030;color:#fff}.mat-elevation-z0{box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2),0px 0px 0px 0px rgba(0, 0, 0, 0.14),0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z1{box-shadow:0px 2px 1px -1px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 1px 3px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z2{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z3{box-shadow:0px 3px 3px -2px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 1px 8px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z4{box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z5{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z6{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z7{box-shadow:0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)}.mat-elevation-z8{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)}.mat-elevation-z9{box-shadow:0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)}.mat-elevation-z10{box-shadow:0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)}.mat-elevation-z11{box-shadow:0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)}.mat-elevation-z12{box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)}.mat-elevation-z13{box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)}.mat-elevation-z14{box-shadow:0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)}.mat-elevation-z15{box-shadow:0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)}.mat-elevation-z16{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)}.mat-elevation-z17{box-shadow:0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)}.mat-elevation-z18{box-shadow:0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)}.mat-elevation-z19{box-shadow:0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)}.mat-elevation-z20{box-shadow:0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)}.mat-elevation-z21{box-shadow:0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)}.mat-elevation-z22{box-shadow:0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)}.mat-elevation-z23{box-shadow:0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)}.mat-elevation-z24{box-shadow:0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)}.mat-theme-loaded-marker{display:none}.mat-autocomplete-panel{background:#424242;color:#fff}.mat-autocomplete-panel:not([class*=mat-elevation-z]){box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)}.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover){background:#424242}.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled){color:#fff}.mat-badge-content{color:#fff;background:#c2185b}.cdk-high-contrast-active .mat-badge-content{outline:solid 1px;border-radius:0}.mat-badge-accent .mat-badge-content{background:#b0bec5;color:rgba(0,0,0,.87)}.mat-badge-warn .mat-badge-content{color:#fff;background:#f44336}.mat-badge{position:relative}.mat-badge-hidden .mat-badge-content{display:none}.mat-badge-disabled .mat-badge-content{background:#6e6e6e;color:rgba(255,255,255,.5)}.mat-badge-content{position:absolute;text-align:center;display:inline-block;border-radius:50%;transition:transform 200ms ease-in-out;transform:scale(0.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;pointer-events:none}.ng-animate-disabled .mat-badge-content,.mat-badge-content._mat-animation-noopable{transition:none}.mat-badge-content.mat-badge-active{transform:none}.mat-badge-small .mat-badge-content{width:16px;height:16px;line-height:16px}.mat-badge-small.mat-badge-above .mat-badge-content{top:-8px}.mat-badge-small.mat-badge-below .mat-badge-content{bottom:-8px}.mat-badge-small.mat-badge-before .mat-badge-content{left:-16px}[dir=rtl] .mat-badge-small.mat-badge-before .mat-badge-content{left:auto;right:-16px}.mat-badge-small.mat-badge-after .mat-badge-content{right:-16px}[dir=rtl] .mat-badge-small.mat-badge-after .mat-badge-content{right:auto;left:-16px}.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-8px}[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-8px}.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-8px}[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-8px}.mat-badge-medium .mat-badge-content{width:22px;height:22px;line-height:22px}.mat-badge-medium.mat-badge-above .mat-badge-content{top:-11px}.mat-badge-medium.mat-badge-below .mat-badge-content{bottom:-11px}.mat-badge-medium.mat-badge-before .mat-badge-content{left:-22px}[dir=rtl] .mat-badge-medium.mat-badge-before .mat-badge-content{left:auto;right:-22px}.mat-badge-medium.mat-badge-after .mat-badge-content{right:-22px}[dir=rtl] .mat-badge-medium.mat-badge-after .mat-badge-content{right:auto;left:-22px}.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-11px}[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-11px}.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-11px}[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-11px}.mat-badge-large .mat-badge-content{width:28px;height:28px;line-height:28px}.mat-badge-large.mat-badge-above .mat-badge-content{top:-14px}.mat-badge-large.mat-badge-below .mat-badge-content{bottom:-14px}.mat-badge-large.mat-badge-before .mat-badge-content{left:-28px}[dir=rtl] .mat-badge-large.mat-badge-before .mat-badge-content{left:auto;right:-28px}.mat-badge-large.mat-badge-after .mat-badge-content{right:-28px}[dir=rtl] .mat-badge-large.mat-badge-after .mat-badge-content{right:auto;left:-28px}.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-14px}[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-14px}.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-14px}[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-14px}.mat-bottom-sheet-container{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12);background:#424242;color:#fff}.mat-button,.mat-icon-button,.mat-stroked-button{color:inherit;background:transparent}.mat-button.mat-primary,.mat-icon-button.mat-primary,.mat-stroked-button.mat-primary{color:#c2185b}.mat-button.mat-accent,.mat-icon-button.mat-accent,.mat-stroked-button.mat-accent{color:#b0bec5}.mat-button.mat-warn,.mat-icon-button.mat-warn,.mat-stroked-button.mat-warn{color:#f44336}.mat-button.mat-primary.mat-button-disabled,.mat-button.mat-accent.mat-button-disabled,.mat-button.mat-warn.mat-button-disabled,.mat-button.mat-button-disabled.mat-button-disabled,.mat-icon-button.mat-primary.mat-button-disabled,.mat-icon-button.mat-accent.mat-button-disabled,.mat-icon-button.mat-warn.mat-button-disabled,.mat-icon-button.mat-button-disabled.mat-button-disabled,.mat-stroked-button.mat-primary.mat-button-disabled,.mat-stroked-button.mat-accent.mat-button-disabled,.mat-stroked-button.mat-warn.mat-button-disabled,.mat-stroked-button.mat-button-disabled.mat-button-disabled{color:rgba(255,255,255,.3)}.mat-button.mat-primary .mat-button-focus-overlay,.mat-icon-button.mat-primary .mat-button-focus-overlay,.mat-stroked-button.mat-primary .mat-button-focus-overlay{background-color:#c2185b}.mat-button.mat-accent .mat-button-focus-overlay,.mat-icon-button.mat-accent .mat-button-focus-overlay,.mat-stroked-button.mat-accent .mat-button-focus-overlay{background-color:#b0bec5}.mat-button.mat-warn .mat-button-focus-overlay,.mat-icon-button.mat-warn .mat-button-focus-overlay,.mat-stroked-button.mat-warn .mat-button-focus-overlay{background-color:#f44336}.mat-button.mat-button-disabled .mat-button-focus-overlay,.mat-icon-button.mat-button-disabled .mat-button-focus-overlay,.mat-stroked-button.mat-button-disabled .mat-button-focus-overlay{background-color:transparent}.mat-button .mat-ripple-element,.mat-icon-button .mat-ripple-element,.mat-stroked-button .mat-ripple-element{opacity:.1;background-color:currentColor}.mat-button-focus-overlay{background:#fff}.mat-stroked-button:not(.mat-button-disabled){border-color:rgba(255,255,255,.12)}.mat-flat-button,.mat-raised-button,.mat-fab,.mat-mini-fab{color:#fff;background-color:#424242}.mat-flat-button.mat-primary,.mat-raised-button.mat-primary,.mat-fab.mat-primary,.mat-mini-fab.mat-primary{color:#fff}.mat-flat-button.mat-accent,.mat-raised-button.mat-accent,.mat-fab.mat-accent,.mat-mini-fab.mat-accent{color:rgba(0,0,0,.87)}.mat-flat-button.mat-warn,.mat-raised-button.mat-warn,.mat-fab.mat-warn,.mat-mini-fab.mat-warn{color:#fff}.mat-flat-button.mat-primary.mat-button-disabled,.mat-flat-button.mat-accent.mat-button-disabled,.mat-flat-button.mat-warn.mat-button-disabled,.mat-flat-button.mat-button-disabled.mat-button-disabled,.mat-raised-button.mat-primary.mat-button-disabled,.mat-raised-button.mat-accent.mat-button-disabled,.mat-raised-button.mat-warn.mat-button-disabled,.mat-raised-button.mat-button-disabled.mat-button-disabled,.mat-fab.mat-primary.mat-button-disabled,.mat-fab.mat-accent.mat-button-disabled,.mat-fab.mat-warn.mat-button-disabled,.mat-fab.mat-button-disabled.mat-button-disabled,.mat-mini-fab.mat-primary.mat-button-disabled,.mat-mini-fab.mat-accent.mat-button-disabled,.mat-mini-fab.mat-warn.mat-button-disabled,.mat-mini-fab.mat-button-disabled.mat-button-disabled{color:rgba(255,255,255,.3)}.mat-flat-button.mat-primary,.mat-raised-button.mat-primary,.mat-fab.mat-primary,.mat-mini-fab.mat-primary{background-color:#c2185b}.mat-flat-button.mat-accent,.mat-raised-button.mat-accent,.mat-fab.mat-accent,.mat-mini-fab.mat-accent{background-color:#b0bec5}.mat-flat-button.mat-warn,.mat-raised-button.mat-warn,.mat-fab.mat-warn,.mat-mini-fab.mat-warn{background-color:#f44336}.mat-flat-button.mat-primary.mat-button-disabled,.mat-flat-button.mat-accent.mat-button-disabled,.mat-flat-button.mat-warn.mat-button-disabled,.mat-flat-button.mat-button-disabled.mat-button-disabled,.mat-raised-button.mat-primary.mat-button-disabled,.mat-raised-button.mat-accent.mat-button-disabled,.mat-raised-button.mat-warn.mat-button-disabled,.mat-raised-button.mat-button-disabled.mat-button-disabled,.mat-fab.mat-primary.mat-button-disabled,.mat-fab.mat-accent.mat-button-disabled,.mat-fab.mat-warn.mat-button-disabled,.mat-fab.mat-button-disabled.mat-button-disabled,.mat-mini-fab.mat-primary.mat-button-disabled,.mat-mini-fab.mat-accent.mat-button-disabled,.mat-mini-fab.mat-warn.mat-button-disabled,.mat-mini-fab.mat-button-disabled.mat-button-disabled{background-color:rgba(255,255,255,.12)}.mat-flat-button.mat-primary .mat-ripple-element,.mat-raised-button.mat-primary .mat-ripple-element,.mat-fab.mat-primary .mat-ripple-element,.mat-mini-fab.mat-primary .mat-ripple-element{background-color:rgba(255,255,255,.1)}.mat-flat-button.mat-accent .mat-ripple-element,.mat-raised-button.mat-accent .mat-ripple-element,.mat-fab.mat-accent .mat-ripple-element,.mat-mini-fab.mat-accent .mat-ripple-element{background-color:rgba(0,0,0,.1)}.mat-flat-button.mat-warn .mat-ripple-element,.mat-raised-button.mat-warn .mat-ripple-element,.mat-fab.mat-warn .mat-ripple-element,.mat-mini-fab.mat-warn .mat-ripple-element{background-color:rgba(255,255,255,.1)}.mat-stroked-button:not([class*=mat-elevation-z]),.mat-flat-button:not([class*=mat-elevation-z]){box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2),0px 0px 0px 0px rgba(0, 0, 0, 0.14),0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-raised-button:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-raised-button:not(.mat-button-disabled):active:not([class*=mat-elevation-z]){box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)}.mat-raised-button.mat-button-disabled:not([class*=mat-elevation-z]){box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2),0px 0px 0px 0px rgba(0, 0, 0, 0.14),0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-fab:not([class*=mat-elevation-z]),.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]),.mat-mini-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]){box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)}.mat-fab.mat-button-disabled:not([class*=mat-elevation-z]),.mat-mini-fab.mat-button-disabled:not([class*=mat-elevation-z]){box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2),0px 0px 0px 0px rgba(0, 0, 0, 0.14),0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-button-toggle-standalone,.mat-button-toggle-group{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{box-shadow:none}.mat-button-toggle{color:rgba(255,255,255,.5)}.mat-button-toggle .mat-button-toggle-focus-overlay{background-color:rgba(255,255,255,.12)}.mat-button-toggle-appearance-standard{color:#fff;background:#424242}.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{background-color:#fff}.mat-button-toggle-group-appearance-standard .mat-button-toggle+.mat-button-toggle{border-left:solid 1px rgba(255,255,255,.12)}[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle+.mat-button-toggle{border-left:none;border-right:solid 1px rgba(255,255,255,.12)}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle+.mat-button-toggle{border-left:none;border-right:none;border-top:solid 1px rgba(255,255,255,.12)}.mat-button-toggle-checked{background-color:#212121;color:rgba(255,255,255,.7)}.mat-button-toggle-checked.mat-button-toggle-appearance-standard{color:#fff}.mat-button-toggle-disabled{color:rgba(255,255,255,.3);background-color:#000}.mat-button-toggle-disabled.mat-button-toggle-appearance-standard{background:#424242}.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:#424242}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border:solid 1px rgba(255,255,255,.12)}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{line-height:48px}.mat-card{background:#424242;color:#fff}.mat-card:not([class*=mat-elevation-z]){box-shadow:0px 2px 1px -1px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 1px 3px 0px rgba(0, 0, 0, 0.12)}.mat-card.mat-card-flat:not([class*=mat-elevation-z]){box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2),0px 0px 0px 0px rgba(0, 0, 0, 0.14),0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-card-subtitle{color:rgba(255,255,255,.7)}.mat-checkbox-frame{border-color:rgba(255,255,255,.7)}.mat-checkbox-checkmark{fill:#303030}.mat-checkbox-checkmark-path{stroke:#303030 !important}.mat-checkbox-mixedmark{background-color:#303030}.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background,.mat-checkbox-checked.mat-primary .mat-checkbox-background{background-color:#c2185b}.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background,.mat-checkbox-checked.mat-accent .mat-checkbox-background{background-color:#b0bec5}.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background,.mat-checkbox-checked.mat-warn .mat-checkbox-background{background-color:#f44336}.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background,.mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background{background-color:#686868}.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame{border-color:#686868}.mat-checkbox-disabled .mat-checkbox-label{color:rgba(255,255,255,.7)}.mat-checkbox .mat-ripple-element{background-color:#fff}.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element,.mat-checkbox:active:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element{background:#c2185b}.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element,.mat-checkbox:active:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element{background:#b0bec5}.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element,.mat-checkbox:active:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element{background:#f44336}.mat-chip.mat-standard-chip{background-color:#616161;color:#fff}.mat-chip.mat-standard-chip .mat-chip-remove{color:#fff;opacity:.4}.mat-chip.mat-standard-chip:not(.mat-chip-disabled):active{box-shadow:0px 3px 3px -2px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 1px 8px 0px rgba(0, 0, 0, 0.12)}.mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover{opacity:.54}.mat-chip.mat-standard-chip.mat-chip-disabled{opacity:.4}.mat-chip.mat-standard-chip::after{background:#fff}.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary{background-color:#c2185b;color:#fff}.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove{color:#fff;opacity:.4}.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element{background-color:rgba(255,255,255,.1)}.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn{background-color:#f44336;color:#fff}.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove{color:#fff;opacity:.4}.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element{background-color:rgba(255,255,255,.1)}.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent{background-color:#b0bec5;color:rgba(0,0,0,.87)}.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove{color:rgba(0,0,0,.87);opacity:.4}.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element{background-color:rgba(0,0,0,.1)}.mat-table{background:#424242}.mat-table thead,.mat-table tbody,.mat-table tfoot,mat-header-row,mat-row,mat-footer-row,[mat-header-row],[mat-row],[mat-footer-row],.mat-table-sticky{background:inherit}mat-row,mat-header-row,mat-footer-row,th.mat-header-cell,td.mat-cell,td.mat-footer-cell{border-bottom-color:rgba(255,255,255,.12)}.mat-header-cell{color:rgba(255,255,255,.7)}.mat-cell,.mat-footer-cell{color:#fff}.mat-calendar-arrow{border-top-color:#fff}.mat-datepicker-toggle,.mat-datepicker-content .mat-calendar-next-button,.mat-datepicker-content .mat-calendar-previous-button{color:#fff}.mat-calendar-table-header{color:rgba(255,255,255,.5)}.mat-calendar-table-header-divider::after{background:rgba(255,255,255,.12)}.mat-calendar-body-label{color:rgba(255,255,255,.7)}.mat-calendar-body-cell-content,.mat-date-range-input-separator{color:#fff;border-color:transparent}.mat-calendar-body-disabled>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){color:rgba(255,255,255,.5)}.mat-form-field-disabled .mat-date-range-input-separator{color:rgba(255,255,255,.5)}.mat-calendar-body-in-preview{color:rgba(255,255,255,.24)}.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:rgba(255,255,255,.5)}.mat-calendar-body-disabled>.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:rgba(255,255,255,.3)}.mat-calendar-body-in-range::before{background:rgba(194,24,91,.2)}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:rgba(249,171,0,.2)}.mat-calendar-body-comparison-bridge-start::before,[dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, rgba(194, 24, 91, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-calendar-body-comparison-bridge-end::before,[dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, rgba(194, 24, 91, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:#a8dab5}.mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:#46a35e}.mat-calendar-body-selected{background-color:#c2185b;color:#fff}.mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(194,24,91,.4)}.mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px #fff}.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:rgba(194,24,91,.3)}.mat-datepicker-content{box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12);background-color:#424242;color:#fff}.mat-datepicker-content.mat-accent .mat-calendar-body-in-range::before{background:rgba(176,190,197,.2)}.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical,.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range::before{background:rgba(249,171,0,.2)}.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-start::before,.mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, rgba(176, 190, 197, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-end::before,.mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, rgba(176, 190, 197, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-datepicker-content.mat-accent .mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:#a8dab5}.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:#46a35e}.mat-datepicker-content.mat-accent .mat-calendar-body-selected{background-color:#b0bec5;color:rgba(0,0,0,.87)}.mat-datepicker-content.mat-accent .mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(176,190,197,.4)}.mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px rgba(0,0,0,.87)}.mat-datepicker-content.mat-accent .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.mat-datepicker-content.mat-accent .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.mat-datepicker-content.mat-accent .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:rgba(176,190,197,.3)}.mat-datepicker-content.mat-warn .mat-calendar-body-in-range::before{background:rgba(244,67,54,.2)}.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical,.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range::before{background:rgba(249,171,0,.2)}.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-start::before,.mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-end::before,.mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-datepicker-content.mat-warn .mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:#a8dab5}.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:#46a35e}.mat-datepicker-content.mat-warn .mat-calendar-body-selected{background-color:#f44336;color:#fff}.mat-datepicker-content.mat-warn .mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(244,67,54,.4)}.mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px #fff}.mat-datepicker-content.mat-warn .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.mat-datepicker-content.mat-warn .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.mat-datepicker-content.mat-warn .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:rgba(244,67,54,.3)}.mat-datepicker-content-touch{box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2),0px 0px 0px 0px rgba(0, 0, 0, 0.14),0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-datepicker-toggle-active{color:#c2185b}.mat-datepicker-toggle-active.mat-accent{color:#b0bec5}.mat-datepicker-toggle-active.mat-warn{color:#f44336}.mat-date-range-input-inner[disabled]{color:rgba(255,255,255,.5)}.mat-dialog-container{box-shadow:0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12);background:#424242;color:#fff}.mat-divider{border-top-color:rgba(255,255,255,.12)}.mat-divider-vertical{border-right-color:rgba(255,255,255,.12)}.mat-expansion-panel{background:#424242;color:#fff}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-action-row{border-top-color:rgba(255,255,255,.12)}.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]),.mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]),.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]){background:rgba(255,255,255,.04)}@media(hover: none){.mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover{background:#424242}}.mat-expansion-panel-header-title{color:#fff}.mat-expansion-panel-header-description,.mat-expansion-indicator::after{color:rgba(255,255,255,.7)}.mat-expansion-panel-header[aria-disabled=true]{color:rgba(255,255,255,.3)}.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description{color:inherit}.mat-expansion-panel-header{height:48px}.mat-expansion-panel-header.mat-expanded{height:64px}.mat-form-field-label{color:rgba(255,255,255,.7)}.mat-hint{color:rgba(255,255,255,.7)}.mat-form-field.mat-focused .mat-form-field-label{color:#c2185b}.mat-form-field.mat-focused .mat-form-field-label.mat-accent{color:#b0bec5}.mat-form-field.mat-focused .mat-form-field-label.mat-warn{color:#f44336}.mat-focused .mat-form-field-required-marker{color:#b0bec5}.mat-form-field-ripple{background-color:#fff}.mat-form-field.mat-focused .mat-form-field-ripple{background-color:#c2185b}.mat-form-field.mat-focused .mat-form-field-ripple.mat-accent{background-color:#b0bec5}.mat-form-field.mat-focused .mat-form-field-ripple.mat-warn{background-color:#f44336}.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after{color:#c2185b}.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after{color:#b0bec5}.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after{color:#f44336}.mat-form-field.mat-form-field-invalid .mat-form-field-label{color:#f44336}.mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent,.mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker{color:#f44336}.mat-form-field.mat-form-field-invalid .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent{background-color:#f44336}.mat-error{color:#f44336}.mat-form-field-appearance-legacy .mat-form-field-label{color:rgba(255,255,255,.7)}.mat-form-field-appearance-legacy .mat-hint{color:rgba(255,255,255,.7)}.mat-form-field-appearance-legacy .mat-form-field-underline{background-color:rgba(255,255,255,.7)}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-image:linear-gradient(to right, rgba(255, 255, 255, 0.7) 0%, rgba(255, 255, 255, 0.7) 33%, transparent 0%);background-size:4px 100%;background-repeat:repeat-x}.mat-form-field-appearance-standard .mat-form-field-underline{background-color:rgba(255,255,255,.7)}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-image:linear-gradient(to right, rgba(255, 255, 255, 0.7) 0%, rgba(255, 255, 255, 0.7) 33%, transparent 0%);background-size:4px 100%;background-repeat:repeat-x}.mat-form-field-appearance-fill .mat-form-field-flex{background-color:rgba(255,255,255,.1)}.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex{background-color:rgba(255,255,255,.05)}.mat-form-field-appearance-fill .mat-form-field-underline::before{background-color:rgba(255,255,255,.5)}.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label{color:rgba(255,255,255,.5)}.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before{background-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline{color:rgba(255,255,255,.3)}.mat-form-field-appearance-outline .mat-form-field-outline-thick{color:#fff}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{color:#c2185b}.mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick{color:#b0bec5}.mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick{color:#f44336}.mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick{color:#f44336}.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label{color:rgba(255,255,255,.5)}.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline{color:rgba(255,255,255,.15)}.mat-icon.mat-primary{color:#c2185b}.mat-icon.mat-accent{color:#b0bec5}.mat-icon.mat-warn{color:#f44336}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{color:rgba(255,255,255,.7)}.mat-input-element:disabled,.mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after{color:rgba(255,255,255,.5)}.mat-input-element{caret-color:#c2185b}.mat-input-element::placeholder{color:rgba(255,255,255,.5)}.mat-input-element::-moz-placeholder{color:rgba(255,255,255,.5)}.mat-input-element::-webkit-input-placeholder{color:rgba(255,255,255,.5)}.mat-input-element:-ms-input-placeholder{color:rgba(255,255,255,.5)}.mat-input-element option{color:rgba(0,0,0,.87)}.mat-input-element option:disabled{color:rgba(0,0,0,.38)}.mat-form-field.mat-accent .mat-input-element{caret-color:#b0bec5}.mat-form-field.mat-warn .mat-input-element,.mat-form-field-invalid .mat-input-element{caret-color:#f44336}.mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after{color:#f44336}.mat-list-base .mat-list-item{color:#fff}.mat-list-base .mat-list-option{color:#fff}.mat-list-base .mat-subheader{color:rgba(255,255,255,.7)}.mat-list-item-disabled{background-color:#000}.mat-list-option:hover,.mat-list-option:focus,.mat-nav-list .mat-list-item:hover,.mat-nav-list .mat-list-item:focus,.mat-action-list .mat-list-item:hover,.mat-action-list .mat-list-item:focus{background:rgba(255,255,255,.04)}.mat-list-single-selected-option,.mat-list-single-selected-option:hover,.mat-list-single-selected-option:focus{background:rgba(255,255,255,.12)}.mat-menu-panel{background:#424242}.mat-menu-panel:not([class*=mat-elevation-z]){box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)}.mat-menu-item{background:transparent;color:#fff}.mat-menu-item[disabled],.mat-menu-item[disabled]::after,.mat-menu-item[disabled] .mat-icon-no-color{color:rgba(255,255,255,.5)}.mat-menu-item .mat-icon-no-color,.mat-menu-item-submenu-trigger::after{color:#fff}.mat-menu-item:hover:not([disabled]),.mat-menu-item.cdk-program-focused:not([disabled]),.mat-menu-item.cdk-keyboard-focused:not([disabled]),.mat-menu-item-highlighted:not([disabled]){background:rgba(255,255,255,.04)}.mat-paginator{background:#424242}.mat-paginator,.mat-paginator-page-size .mat-select-trigger{color:rgba(255,255,255,.7)}.mat-paginator-decrement,.mat-paginator-increment{border-top:2px solid #fff;border-right:2px solid #fff}.mat-paginator-first,.mat-paginator-last{border-top:2px solid #fff}.mat-icon-button[disabled] .mat-paginator-decrement,.mat-icon-button[disabled] .mat-paginator-increment,.mat-icon-button[disabled] .mat-paginator-first,.mat-icon-button[disabled] .mat-paginator-last{border-color:rgba(255,255,255,.5)}.mat-paginator-container{min-height:56px}.mat-progress-bar-background{fill:#e91e63}.mat-progress-bar-buffer{background-color:#e91e63}.mat-progress-bar-fill::after{background-color:#c2185b}.mat-progress-bar.mat-accent .mat-progress-bar-background{fill:#cfd8dc}.mat-progress-bar.mat-accent .mat-progress-bar-buffer{background-color:#cfd8dc}.mat-progress-bar.mat-accent .mat-progress-bar-fill::after{background-color:#b0bec5}.mat-progress-bar.mat-warn .mat-progress-bar-background{fill:#ffcdd2}.mat-progress-bar.mat-warn .mat-progress-bar-buffer{background-color:#ffcdd2}.mat-progress-bar.mat-warn .mat-progress-bar-fill::after{background-color:#f44336}.mat-progress-spinner circle,.mat-spinner circle{stroke:#c2185b}.mat-progress-spinner.mat-accent circle,.mat-spinner.mat-accent circle{stroke:#b0bec5}.mat-progress-spinner.mat-warn circle,.mat-spinner.mat-warn circle{stroke:#f44336}.mat-radio-outer-circle{border-color:rgba(255,255,255,.7)}.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle{border-color:#c2185b}.mat-radio-button.mat-primary .mat-radio-inner-circle,.mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple,.mat-radio-button.mat-primary:active .mat-radio-persistent-ripple{background-color:#c2185b}.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle{border-color:#b0bec5}.mat-radio-button.mat-accent .mat-radio-inner-circle,.mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple,.mat-radio-button.mat-accent:active .mat-radio-persistent-ripple{background-color:#b0bec5}.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle{border-color:#f44336}.mat-radio-button.mat-warn .mat-radio-inner-circle,.mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple,.mat-radio-button.mat-warn:active .mat-radio-persistent-ripple{background-color:#f44336}.mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle,.mat-radio-button.mat-radio-disabled .mat-radio-outer-circle{border-color:rgba(255,255,255,.5)}.mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element,.mat-radio-button.mat-radio-disabled .mat-radio-inner-circle{background-color:rgba(255,255,255,.5)}.mat-radio-button.mat-radio-disabled .mat-radio-label-content{color:rgba(255,255,255,.5)}.mat-radio-button .mat-ripple-element{background-color:#fff}.mat-select-value{color:#fff}.mat-select-placeholder{color:rgba(255,255,255,.5)}.mat-select-disabled .mat-select-value{color:rgba(255,255,255,.5)}.mat-select-arrow{color:rgba(255,255,255,.7)}.mat-select-panel{background:#424242}.mat-select-panel:not([class*=mat-elevation-z]){box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)}.mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple){background:rgba(255,255,255,.12)}.mat-form-field.mat-focused.mat-primary .mat-select-arrow{color:#c2185b}.mat-form-field.mat-focused.mat-accent .mat-select-arrow{color:#b0bec5}.mat-form-field.mat-focused.mat-warn .mat-select-arrow{color:#f44336}.mat-form-field .mat-select.mat-select-invalid .mat-select-arrow{color:#f44336}.mat-form-field .mat-select.mat-select-disabled .mat-select-arrow{color:rgba(255,255,255,.5)}.mat-drawer-container{background-color:#303030;color:#fff}.mat-drawer{background-color:#424242;color:#fff}.mat-drawer.mat-drawer-push{background-color:#424242}.mat-drawer:not(.mat-drawer-side){box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)}.mat-drawer-side{border-right:solid 1px rgba(255,255,255,.12)}.mat-drawer-side.mat-drawer-end{border-left:solid 1px rgba(255,255,255,.12);border-right:none}[dir=rtl] .mat-drawer-side{border-left:solid 1px rgba(255,255,255,.12);border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-left:none;border-right:solid 1px rgba(255,255,255,.12)}.mat-drawer-backdrop.mat-drawer-shown{background-color:rgba(189,189,189,.6)}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb{background-color:#b0bec5}.mat-slide-toggle.mat-checked .mat-slide-toggle-bar{background-color:rgba(176,190,197,.54)}.mat-slide-toggle.mat-checked .mat-ripple-element{background-color:#b0bec5}.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb{background-color:#c2185b}.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar{background-color:rgba(194,24,91,.54)}.mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element{background-color:#c2185b}.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb{background-color:#f44336}.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar{background-color:rgba(244,67,54,.54)}.mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element{background-color:#f44336}.mat-slide-toggle:not(.mat-checked) .mat-ripple-element{background-color:#fff}.mat-slide-toggle-thumb{box-shadow:0px 2px 1px -1px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 1px 3px 0px rgba(0, 0, 0, 0.12);background-color:#bdbdbd}.mat-slide-toggle-bar{background-color:rgba(255,255,255,.5)}.mat-slider-track-background{background-color:rgba(255,255,255,.3)}.mat-primary .mat-slider-track-fill,.mat-primary .mat-slider-thumb,.mat-primary .mat-slider-thumb-label{background-color:#c2185b}.mat-primary .mat-slider-thumb-label-text{color:#fff}.mat-primary .mat-slider-focus-ring{background-color:rgba(194,24,91,.2)}.mat-accent .mat-slider-track-fill,.mat-accent .mat-slider-thumb,.mat-accent .mat-slider-thumb-label{background-color:#b0bec5}.mat-accent .mat-slider-thumb-label-text{color:rgba(0,0,0,.87)}.mat-accent .mat-slider-focus-ring{background-color:rgba(176,190,197,.2)}.mat-warn .mat-slider-track-fill,.mat-warn .mat-slider-thumb,.mat-warn .mat-slider-thumb-label{background-color:#f44336}.mat-warn .mat-slider-thumb-label-text{color:#fff}.mat-warn .mat-slider-focus-ring{background-color:rgba(244,67,54,.2)}.mat-slider:hover .mat-slider-track-background,.cdk-focused .mat-slider-track-background{background-color:rgba(255,255,255,.3)}.mat-slider-disabled .mat-slider-track-background,.mat-slider-disabled .mat-slider-track-fill,.mat-slider-disabled .mat-slider-thumb{background-color:rgba(255,255,255,.3)}.mat-slider-disabled:hover .mat-slider-track-background{background-color:rgba(255,255,255,.3)}.mat-slider-min-value .mat-slider-focus-ring{background-color:rgba(255,255,255,.12)}.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label{background-color:#fff}.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label{background-color:rgba(255,255,255,.3)}.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb{border-color:rgba(255,255,255,.3);background-color:transparent}.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb,.mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb{border-color:rgba(255,255,255,.3)}.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb,.mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb{border-color:rgba(255,255,255,.3)}.mat-slider-has-ticks .mat-slider-wrapper::after{border-color:rgba(255,255,255,.7)}.mat-slider-horizontal .mat-slider-ticks{background-image:repeating-linear-gradient(to right, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.7) 2px, transparent 0, transparent);background-image:-moz-repeating-linear-gradient(0.0001deg, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.7) 2px, transparent 0, transparent)}.mat-slider-vertical .mat-slider-ticks{background-image:repeating-linear-gradient(to bottom, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.7) 2px, transparent 0, transparent)}.mat-step-header.cdk-keyboard-focused,.mat-step-header.cdk-program-focused,.mat-step-header:hover{background-color:rgba(255,255,255,.04)}@media(hover: none){.mat-step-header:hover{background:none}}.mat-step-header .mat-step-label,.mat-step-header .mat-step-optional{color:rgba(255,255,255,.7)}.mat-step-header .mat-step-icon{background-color:rgba(255,255,255,.7);color:#fff}.mat-step-header .mat-step-icon-selected,.mat-step-header .mat-step-icon-state-done,.mat-step-header .mat-step-icon-state-edit{background-color:#c2185b;color:#fff}.mat-step-header.mat-accent .mat-step-icon{color:rgba(0,0,0,.87)}.mat-step-header.mat-accent .mat-step-icon-selected,.mat-step-header.mat-accent .mat-step-icon-state-done,.mat-step-header.mat-accent .mat-step-icon-state-edit{background-color:#b0bec5;color:rgba(0,0,0,.87)}.mat-step-header.mat-warn .mat-step-icon{color:#fff}.mat-step-header.mat-warn .mat-step-icon-selected,.mat-step-header.mat-warn .mat-step-icon-state-done,.mat-step-header.mat-warn .mat-step-icon-state-edit{background-color:#f44336;color:#fff}.mat-step-header .mat-step-icon-state-error{background-color:transparent;color:#f44336}.mat-step-header .mat-step-label.mat-step-label-active{color:#fff}.mat-step-header .mat-step-label.mat-step-label-error{color:#f44336}.mat-stepper-horizontal,.mat-stepper-vertical{background-color:#424242}.mat-stepper-vertical-line::before{border-left-color:rgba(255,255,255,.12)}.mat-horizontal-stepper-header::before,.mat-horizontal-stepper-header::after,.mat-stepper-horizontal-line{border-top-color:rgba(255,255,255,.12)}.mat-horizontal-stepper-header{height:72px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header,.mat-vertical-stepper-header{padding:24px 24px}.mat-stepper-vertical-line::before{top:-16px;bottom:-16px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before{top:36px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{top:36px}.mat-sort-header-arrow{color:#c6c6c6}.mat-tab-nav-bar,.mat-tab-header{border-bottom:1px solid rgba(255,255,255,.12)}.mat-tab-group-inverted-header .mat-tab-nav-bar,.mat-tab-group-inverted-header .mat-tab-header{border-top:1px solid rgba(255,255,255,.12);border-bottom:none}.mat-tab-label,.mat-tab-link{color:#fff}.mat-tab-label.mat-tab-disabled,.mat-tab-link.mat-tab-disabled{color:rgba(255,255,255,.5)}.mat-tab-header-pagination-chevron{border-color:#fff}.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(255,255,255,.5)}.mat-tab-group[class*=mat-background-] .mat-tab-header,.mat-tab-nav-bar[class*=mat-background-]{border-bottom:none;border-top:none}.mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(233,30,99,.3)}.mat-tab-group.mat-primary .mat-ink-bar,.mat-tab-nav-bar.mat-primary .mat-ink-bar{background-color:#c2185b}.mat-tab-group.mat-primary.mat-background-primary>.mat-tab-header .mat-ink-bar,.mat-tab-group.mat-primary.mat-background-primary>.mat-tab-link-container .mat-ink-bar,.mat-tab-nav-bar.mat-primary.mat-background-primary>.mat-tab-header .mat-ink-bar,.mat-tab-nav-bar.mat-primary.mat-background-primary>.mat-tab-link-container .mat-ink-bar{background-color:#fff}.mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(207,216,220,.3)}.mat-tab-group.mat-accent .mat-ink-bar,.mat-tab-nav-bar.mat-accent .mat-ink-bar{background-color:#b0bec5}.mat-tab-group.mat-accent.mat-background-accent>.mat-tab-header .mat-ink-bar,.mat-tab-group.mat-accent.mat-background-accent>.mat-tab-link-container .mat-ink-bar,.mat-tab-nav-bar.mat-accent.mat-background-accent>.mat-tab-header .mat-ink-bar,.mat-tab-nav-bar.mat-accent.mat-background-accent>.mat-tab-link-container .mat-ink-bar{background-color:rgba(0,0,0,.87)}.mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,205,210,.3)}.mat-tab-group.mat-warn .mat-ink-bar,.mat-tab-nav-bar.mat-warn .mat-ink-bar{background-color:#f44336}.mat-tab-group.mat-warn.mat-background-warn>.mat-tab-header .mat-ink-bar,.mat-tab-group.mat-warn.mat-background-warn>.mat-tab-link-container .mat-ink-bar,.mat-tab-nav-bar.mat-warn.mat-background-warn>.mat-tab-header .mat-ink-bar,.mat-tab-nav-bar.mat-warn.mat-background-warn>.mat-tab-link-container .mat-ink-bar{background-color:#fff}.mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(233,30,99,.3)}.mat-tab-group.mat-background-primary>.mat-tab-header,.mat-tab-group.mat-background-primary>.mat-tab-link-container,.mat-tab-group.mat-background-primary>.mat-tab-header-pagination,.mat-tab-nav-bar.mat-background-primary>.mat-tab-header,.mat-tab-nav-bar.mat-background-primary>.mat-tab-link-container,.mat-tab-nav-bar.mat-background-primary>.mat-tab-header-pagination{background-color:#c2185b}.mat-tab-group.mat-background-primary>.mat-tab-header .mat-tab-label,.mat-tab-group.mat-background-primary>.mat-tab-link-container .mat-tab-link,.mat-tab-nav-bar.mat-background-primary>.mat-tab-header .mat-tab-label,.mat-tab-nav-bar.mat-background-primary>.mat-tab-link-container .mat-tab-link{color:#fff}.mat-tab-group.mat-background-primary>.mat-tab-header .mat-tab-label.mat-tab-disabled,.mat-tab-group.mat-background-primary>.mat-tab-link-container .mat-tab-link.mat-tab-disabled,.mat-tab-nav-bar.mat-background-primary>.mat-tab-header .mat-tab-label.mat-tab-disabled,.mat-tab-nav-bar.mat-background-primary>.mat-tab-link-container .mat-tab-link.mat-tab-disabled{color:rgba(255,255,255,.4)}.mat-tab-group.mat-background-primary>.mat-tab-header-pagination .mat-tab-header-pagination-chevron,.mat-tab-group.mat-background-primary>.mat-tab-links .mat-focus-indicator::before,.mat-tab-group.mat-background-primary>.mat-tab-header .mat-focus-indicator::before,.mat-tab-nav-bar.mat-background-primary>.mat-tab-header-pagination .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-primary>.mat-tab-links .mat-focus-indicator::before,.mat-tab-nav-bar.mat-background-primary>.mat-tab-header .mat-focus-indicator::before{border-color:#fff}.mat-tab-group.mat-background-primary>.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-primary>.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(255,255,255,.4)}.mat-tab-group.mat-background-primary>.mat-tab-header .mat-ripple-element,.mat-tab-group.mat-background-primary>.mat-tab-link-container .mat-ripple-element,.mat-tab-nav-bar.mat-background-primary>.mat-tab-header .mat-ripple-element,.mat-tab-nav-bar.mat-background-primary>.mat-tab-link-container .mat-ripple-element{background-color:rgba(255,255,255,.12)}.mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(207,216,220,.3)}.mat-tab-group.mat-background-accent>.mat-tab-header,.mat-tab-group.mat-background-accent>.mat-tab-link-container,.mat-tab-group.mat-background-accent>.mat-tab-header-pagination,.mat-tab-nav-bar.mat-background-accent>.mat-tab-header,.mat-tab-nav-bar.mat-background-accent>.mat-tab-link-container,.mat-tab-nav-bar.mat-background-accent>.mat-tab-header-pagination{background-color:#b0bec5}.mat-tab-group.mat-background-accent>.mat-tab-header .mat-tab-label,.mat-tab-group.mat-background-accent>.mat-tab-link-container .mat-tab-link,.mat-tab-nav-bar.mat-background-accent>.mat-tab-header .mat-tab-label,.mat-tab-nav-bar.mat-background-accent>.mat-tab-link-container .mat-tab-link{color:rgba(0,0,0,.87)}.mat-tab-group.mat-background-accent>.mat-tab-header .mat-tab-label.mat-tab-disabled,.mat-tab-group.mat-background-accent>.mat-tab-link-container .mat-tab-link.mat-tab-disabled,.mat-tab-nav-bar.mat-background-accent>.mat-tab-header .mat-tab-label.mat-tab-disabled,.mat-tab-nav-bar.mat-background-accent>.mat-tab-link-container .mat-tab-link.mat-tab-disabled{color:rgba(0,0,0,.4)}.mat-tab-group.mat-background-accent>.mat-tab-header-pagination .mat-tab-header-pagination-chevron,.mat-tab-group.mat-background-accent>.mat-tab-links .mat-focus-indicator::before,.mat-tab-group.mat-background-accent>.mat-tab-header .mat-focus-indicator::before,.mat-tab-nav-bar.mat-background-accent>.mat-tab-header-pagination .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-accent>.mat-tab-links .mat-focus-indicator::before,.mat-tab-nav-bar.mat-background-accent>.mat-tab-header .mat-focus-indicator::before{border-color:rgba(0,0,0,.87)}.mat-tab-group.mat-background-accent>.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-accent>.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(0,0,0,.4)}.mat-tab-group.mat-background-accent>.mat-tab-header .mat-ripple-element,.mat-tab-group.mat-background-accent>.mat-tab-link-container .mat-ripple-element,.mat-tab-nav-bar.mat-background-accent>.mat-tab-header .mat-ripple-element,.mat-tab-nav-bar.mat-background-accent>.mat-tab-link-container .mat-ripple-element{background-color:rgba(0,0,0,.12)}.mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,205,210,.3)}.mat-tab-group.mat-background-warn>.mat-tab-header,.mat-tab-group.mat-background-warn>.mat-tab-link-container,.mat-tab-group.mat-background-warn>.mat-tab-header-pagination,.mat-tab-nav-bar.mat-background-warn>.mat-tab-header,.mat-tab-nav-bar.mat-background-warn>.mat-tab-link-container,.mat-tab-nav-bar.mat-background-warn>.mat-tab-header-pagination{background-color:#f44336}.mat-tab-group.mat-background-warn>.mat-tab-header .mat-tab-label,.mat-tab-group.mat-background-warn>.mat-tab-link-container .mat-tab-link,.mat-tab-nav-bar.mat-background-warn>.mat-tab-header .mat-tab-label,.mat-tab-nav-bar.mat-background-warn>.mat-tab-link-container .mat-tab-link{color:#fff}.mat-tab-group.mat-background-warn>.mat-tab-header .mat-tab-label.mat-tab-disabled,.mat-tab-group.mat-background-warn>.mat-tab-link-container .mat-tab-link.mat-tab-disabled,.mat-tab-nav-bar.mat-background-warn>.mat-tab-header .mat-tab-label.mat-tab-disabled,.mat-tab-nav-bar.mat-background-warn>.mat-tab-link-container .mat-tab-link.mat-tab-disabled{color:rgba(255,255,255,.4)}.mat-tab-group.mat-background-warn>.mat-tab-header-pagination .mat-tab-header-pagination-chevron,.mat-tab-group.mat-background-warn>.mat-tab-links .mat-focus-indicator::before,.mat-tab-group.mat-background-warn>.mat-tab-header .mat-focus-indicator::before,.mat-tab-nav-bar.mat-background-warn>.mat-tab-header-pagination .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-warn>.mat-tab-links .mat-focus-indicator::before,.mat-tab-nav-bar.mat-background-warn>.mat-tab-header .mat-focus-indicator::before{border-color:#fff}.mat-tab-group.mat-background-warn>.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-warn>.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(255,255,255,.4)}.mat-tab-group.mat-background-warn>.mat-tab-header .mat-ripple-element,.mat-tab-group.mat-background-warn>.mat-tab-link-container .mat-ripple-element,.mat-tab-nav-bar.mat-background-warn>.mat-tab-header .mat-ripple-element,.mat-tab-nav-bar.mat-background-warn>.mat-tab-link-container .mat-ripple-element{background-color:rgba(255,255,255,.12)}.mat-toolbar{background:#212121;color:#fff}.mat-toolbar.mat-primary{background:#c2185b;color:#fff}.mat-toolbar.mat-accent{background:#b0bec5;color:rgba(0,0,0,.87)}.mat-toolbar.mat-warn{background:#f44336;color:#fff}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}.mat-tooltip{background:rgba(97,97,97,.9)}.mat-tree{background:#424242}.mat-tree-node,.mat-nested-tree-node{color:#fff}.mat-tree-node{min-height:48px}.mat-snack-bar-container{color:rgba(0,0,0,.87);background:#fafafa;box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-simple-snackbar-action{color:inherit}\n","/* You can add global styles to this file, and also import other style files */\n@import 'src/scss/bulma/bulma';\n@import 'src/scss/ubico/theme';\n@import 'src/scss/ubico/base';\n\n/* RESETS */\n\nhtml {\n  scroll-behavior: smooth;\n}\n\nbody {\n  color: #616161;\n  font-family: 'Open Sans', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  line-height: 1.75rem;\n  margin: 0;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-weight: 400;\n  transition: 0.3s;\n}\n\nb {\n  font-weight: 700;\n}\n\na {\n  text-decoration: none;\n}\n\nul {\n  padding-inline-start: 20px;\n}\n\nol {\n  padding-inline-start: 20px;\n}\n","/* Bulma Utilities */\n@charset \"utf-8\"\n\n@import \"initial-variables\"\n@import \"functions\"\n@import \"derived-variables\"\n@import \"mixins\"\n@import \"controls\"\n@import \"extends\"\n","@import \"mixins\"\n\n%control\n  +control\n\n%unselectable\n  +unselectable\n\n%arrow\n  +arrow\n\n%block\n  +block\n\n%delete\n  +delete\n\n%loader\n  +loader\n\n%overlay\n  +overlay\n","@import \"derived-variables\"\n\n=clearfix\n  &::after\n    clear: both\n    content: \" \"\n    display: table\n\n=center($width, $height: 0)\n  position: absolute\n  @if $height != 0\n    left: calc(50% - (#{$width} / 2))\n    top: calc(50% - (#{$height} / 2))\n  @else\n    left: calc(50% - (#{$width} / 2))\n    top: calc(50% - (#{$width} / 2))\n\n=fa($size, $dimensions)\n  display: inline-block\n  font-size: $size\n  height: $dimensions\n  line-height: $dimensions\n  text-align: center\n  vertical-align: top\n  width: $dimensions\n\n=hamburger($dimensions)\n  cursor: pointer\n  display: block\n  height: $dimensions\n  position: relative\n  width: $dimensions\n  span\n    background-color: currentColor\n    display: block\n    height: 1px\n    left: calc(50% - 8px)\n    position: absolute\n    transform-origin: center\n    transition-duration: $speed\n    transition-property: background-color, opacity, transform\n    transition-timing-function: $easing\n    width: 16px\n    &:nth-child(1)\n      top: calc(50% - 6px)\n    &:nth-child(2)\n      top: calc(50% - 1px)\n    &:nth-child(3)\n      top: calc(50% + 4px)\n  &:hover\n    background-color: bulmaRgba(black, 0.05)\n  // Modifers\n  &.is-active\n    span\n      &:nth-child(1)\n        transform: translateY(5px) rotate(45deg)\n      &:nth-child(2)\n        opacity: 0\n      &:nth-child(3)\n        transform: translateY(-5px) rotate(-45deg)\n\n=overflow-touch\n  -webkit-overflow-scrolling: touch\n\n=placeholder\n  $placeholders: ':-moz' ':-webkit-input' '-moz' '-ms-input'\n  @each $placeholder in $placeholders\n    &:#{$placeholder}-placeholder\n      @content\n\n// Responsiveness\n\n=from($device)\n  @media screen and (min-width: $device)\n    @content\n\n=until($device)\n  @media screen and (max-width: $device - 1px)\n    @content\n\n=mobile\n  @media screen and (max-width: $tablet - 1px)\n    @content\n\n=tablet\n  @media screen and (min-width: $tablet), print\n    @content\n\n=tablet-only\n  @media screen and (min-width: $tablet) and (max-width: $desktop - 1px)\n    @content\n\n=touch\n  @media screen and (max-width: $desktop - 1px)\n    @content\n\n=desktop\n  @media screen and (min-width: $desktop)\n    @content\n\n=desktop-only\n  @if $widescreen-enabled\n    @media screen and (min-width: $desktop) and (max-width: $widescreen - 1px)\n      @content\n\n=until-widescreen\n  @if $widescreen-enabled\n    @media screen and (max-width: $widescreen - 1px)\n      @content\n\n=widescreen\n  @if $widescreen-enabled\n    @media screen and (min-width: $widescreen)\n      @content\n\n=widescreen-only\n  @if $widescreen-enabled and $fullhd-enabled\n    @media screen and (min-width: $widescreen) and (max-width: $fullhd - 1px)\n      @content\n\n=until-fullhd\n  @if $fullhd-enabled\n    @media screen and (max-width: $fullhd - 1px)\n      @content\n\n=fullhd\n  @if $fullhd-enabled\n    @media screen and (min-width: $fullhd)\n      @content\n\n=ltr\n  @if not $rtl\n    @content\n\n=rtl\n  @if $rtl\n    @content\n\n=ltr-property($property, $spacing, $right: true)\n  $normal: if($right, \"right\", \"left\")\n  $opposite: if($right, \"left\", \"right\")\n  @if $rtl\n    #{$property}-#{$opposite}: $spacing\n  @else\n    #{$property}-#{$normal}: $spacing\n\n=ltr-position($spacing, $right: true)\n  $normal: if($right, \"right\", \"left\")\n  $opposite: if($right, \"left\", \"right\")\n  @if $rtl\n    #{$opposite}: $spacing\n  @else\n    #{$normal}: $spacing\n\n// Placeholders\n\n=unselectable\n  -webkit-touch-callout: none\n  -webkit-user-select: none\n  -moz-user-select: none\n  -ms-user-select: none\n  user-select: none\n\n=arrow($color: transparent)\n  border: 3px solid $color\n  border-radius: 2px\n  border-right: 0\n  border-top: 0\n  content: \" \"\n  display: block\n  height: 0.625em\n  margin-top: -0.4375em\n  pointer-events: none\n  position: absolute\n  top: 50%\n  transform: rotate(-45deg)\n  transform-origin: center\n  width: 0.625em\n\n=block($spacing: $block-spacing)\n  &:not(:last-child)\n    margin-bottom: $spacing\n\n=delete\n  +unselectable\n  -moz-appearance: none\n  -webkit-appearance: none\n  background-color: bulmaRgba($scheme-invert, 0.2)\n  border: none\n  border-radius: $radius-rounded\n  cursor: pointer\n  pointer-events: auto\n  display: inline-block\n  flex-grow: 0\n  flex-shrink: 0\n  font-size: 0\n  height: 20px\n  max-height: 20px\n  max-width: 20px\n  min-height: 20px\n  min-width: 20px\n  outline: none\n  position: relative\n  vertical-align: top\n  width: 20px\n  &::before,\n  &::after\n    background-color: $scheme-main\n    content: \"\"\n    display: block\n    left: 50%\n    position: absolute\n    top: 50%\n    transform: translateX(-50%) translateY(-50%) rotate(45deg)\n    transform-origin: center center\n  &::before\n    height: 2px\n    width: 50%\n  &::after\n    height: 50%\n    width: 2px\n  &:hover,\n  &:focus\n    background-color: bulmaRgba($scheme-invert, 0.3)\n  &:active\n    background-color: bulmaRgba($scheme-invert, 0.4)\n  // Sizes\n  &.is-small\n    height: 16px\n    max-height: 16px\n    max-width: 16px\n    min-height: 16px\n    min-width: 16px\n    width: 16px\n  &.is-medium\n    height: 24px\n    max-height: 24px\n    max-width: 24px\n    min-height: 24px\n    min-width: 24px\n    width: 24px\n  &.is-large\n    height: 32px\n    max-height: 32px\n    max-width: 32px\n    min-height: 32px\n    min-width: 32px\n    width: 32px\n\n=loader\n  animation: spinAround 500ms infinite linear\n  border: 2px solid $grey-lighter\n  border-radius: $radius-rounded\n  border-right-color: transparent\n  border-top-color: transparent\n  content: \"\"\n  display: block\n  height: 1em\n  position: relative\n  width: 1em\n\n=overlay($offset: 0)\n  bottom: $offset\n  left: $offset\n  position: absolute\n  right: $offset\n  top: $offset\n\n","/* Bulma Base */\n@charset \"utf-8\"\n\n@import \"minireset\"\n@import \"generic\"\n@import \"animations\"\n","/*! minireset.css v0.0.6 | MIT License | github.com/jgthms/minireset.css */\n// Blocks\nhtml,\nbody,\np,\nol,\nul,\nli,\ndl,\ndt,\ndd,\nblockquote,\nfigure,\nfieldset,\nlegend,\ntextarea,\npre,\niframe,\nhr,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6\n  margin: 0\n  padding: 0\n\n// Headings\nh1,\nh2,\nh3,\nh4,\nh5,\nh6\n  font-size: 100%\n  font-weight: normal\n\n// List\nul\n  list-style: none\n\n// Form\nbutton,\ninput,\nselect,\ntextarea\n  margin: 0\n\n// Box sizing\nhtml\n  box-sizing: border-box\n\n*\n  &,\n  &::before,\n  &::after\n    box-sizing: inherit\n\n// Media\nimg,\nvideo\n  height: auto\n  max-width: 100%\n\n// Iframe\niframe\n  border: 0\n\n// Table\ntable\n  border-collapse: collapse\n  border-spacing: 0\n\ntd,\nth\n  padding: 0\n  &:not([align])\n    text-align: inherit\n","@import \"../utilities/mixins\"\n\n$body-background-color: $scheme-main !default\n$body-size: 16px !default\n$body-min-width: 300px !default\n$body-rendering: optimizeLegibility !default\n$body-family: $family-primary !default\n$body-overflow-x: hidden !default\n$body-overflow-y: scroll !default\n\n$body-color: $text !default\n$body-font-size: 1em !default\n$body-weight: $weight-normal !default\n$body-line-height: 1.5 !default\n\n$code-family: $family-code !default\n$code-padding: 0.25em 0.5em 0.25em !default\n$code-weight: normal !default\n$code-size: 0.875em !default\n\n$small-font-size: 0.875em !default\n\n$hr-background-color: $background !default\n$hr-height: 2px !default\n$hr-margin: 1.5rem 0 !default\n\n$strong-color: $text-strong !default\n$strong-weight: $weight-bold !default\n\n$pre-font-size: 0.875em !default\n$pre-padding: 1.25rem 1.5rem !default\n$pre-code-font-size: 1em !default\n\nhtml\n  background-color: $body-background-color\n  font-size: $body-size\n  -moz-osx-font-smoothing: grayscale\n  -webkit-font-smoothing: antialiased\n  min-width: $body-min-width\n  overflow-x: $body-overflow-x\n  overflow-y: $body-overflow-y\n  text-rendering: $body-rendering\n  text-size-adjust: 100%\n\narticle,\naside,\nfigure,\nfooter,\nheader,\nhgroup,\nsection\n  display: block\n\nbody,\nbutton,\ninput,\noptgroup,\nselect,\ntextarea\n  font-family: $body-family\n\ncode,\npre\n  -moz-osx-font-smoothing: auto\n  -webkit-font-smoothing: auto\n  font-family: $code-family\n\nbody\n  color: $body-color\n  font-size: $body-font-size\n  font-weight: $body-weight\n  line-height: $body-line-height\n\n// Inline\n\na\n  color: $link\n  cursor: pointer\n  text-decoration: none\n  strong\n    color: currentColor\n  &:hover\n    color: $link-hover\n\ncode\n  background-color: $code-background\n  color: $code\n  font-size: $code-size\n  font-weight: $code-weight\n  padding: $code-padding\n\nhr\n  background-color: $hr-background-color\n  border: none\n  display: block\n  height: $hr-height\n  margin: $hr-margin\n\nimg\n  height: auto\n  max-width: 100%\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"]\n  vertical-align: baseline\n\nsmall\n  font-size: $small-font-size\n\nspan\n  font-style: inherit\n  font-weight: inherit\n\nstrong\n  color: $strong-color\n  font-weight: $strong-weight\n\n// Block\n\nfieldset\n  border: none\n\npre\n  +overflow-touch\n  background-color: $pre-background\n  color: $pre\n  font-size: $pre-font-size\n  overflow-x: auto\n  padding: $pre-padding\n  white-space: pre\n  word-wrap: normal\n  code\n    background-color: transparent\n    color: currentColor\n    font-size: $pre-code-font-size\n    padding: 0\n\ntable\n  td,\n  th\n    vertical-align: top\n    &:not([align])\n      text-align: inherit\n  th\n    color: $text-strong\n","// Colors\n\n$black:        hsl(0, 0%, 4%) !default\n$black-bis:    hsl(0, 0%, 7%) !default\n$black-ter:    hsl(0, 0%, 14%) !default\n\n$grey-darker:  hsl(0, 0%, 21%) !default\n$grey-dark:    hsl(0, 0%, 29%) !default\n$grey:         hsl(0, 0%, 48%) !default\n$grey-light:   hsl(0, 0%, 71%) !default\n$grey-lighter: hsl(0, 0%, 86%) !default\n$grey-lightest: hsl(0, 0%, 93%) !default\n\n$white-ter:    hsl(0, 0%, 96%) !default\n$white-bis:    hsl(0, 0%, 98%) !default\n$white:        hsl(0, 0%, 100%) !default\n\n$orange:       hsl(14,  100%, 53%) !default\n$yellow:       hsl(48,  100%, 67%) !default\n$green:        hsl(141, 53%,  53%) !default\n$turquoise:    hsl(171, 100%, 41%) !default\n$cyan:         hsl(204, 71%,  53%) !default\n$blue:         hsl(217, 71%,  53%) !default\n$purple:       hsl(271, 100%, 71%) !default\n$red:          hsl(348, 86%, 61%) !default\n\n// Typography\n\n$family-sans-serif: BlinkMacSystemFont, -apple-system, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif !default\n$family-monospace: monospace !default\n$render-mode: optimizeLegibility !default\n\n$size-1: 3rem !default\n$size-2: 2.5rem !default\n$size-3: 2rem !default\n$size-4: 1.5rem !default\n$size-5: 1.25rem !default\n$size-6: 1rem !default\n$size-7: 0.75rem !default\n\n$weight-light: 300 !default\n$weight-normal: 400 !default\n$weight-medium: 500 !default\n$weight-semibold: 600 !default\n$weight-bold: 700 !default\n\n// Spacing\n\n$block-spacing: 1.5rem !default\n\n// Responsiveness\n\n// The container horizontal gap, which acts as the offset for breakpoints\n$gap: 32px !default\n// 960, 1152, and 1344 have been chosen because they are divisible by both 12 and 16\n$tablet: 769px !default\n// 960px container + 4rem\n$desktop: 960px + (2 * $gap) !default\n// 1152px container + 4rem\n$widescreen: 1152px + (2 * $gap) !default\n$widescreen-enabled: true !default\n// 1344px container + 4rem\n$fullhd: 1344px + (2 * $gap) !default\n$fullhd-enabled: true !default\n\n// Miscellaneous\n\n$easing: ease-out !default\n$radius-small: 2px !default\n$radius: 4px !default\n$radius-large: 6px !default\n$radius-rounded: 290486px !default\n$speed: 86ms !default\n\n// Flags\n\n$variable-columns: true !default\n$rtl: false !default\n","@import \"initial-variables\"\n@import \"functions\"\n\n$primary: $turquoise !default\n\n$info: $cyan !default\n$success: $green !default\n$warning: $yellow !default\n$danger: $red !default\n\n$light: $white-ter !default\n$dark: $grey-darker !default\n\n// Invert colors\n\n$orange-invert: findColorInvert($orange) !default\n$yellow-invert: findColorInvert($yellow) !default\n$green-invert: findColorInvert($green) !default\n$turquoise-invert: findColorInvert($turquoise) !default\n$cyan-invert: findColorInvert($cyan) !default\n$blue-invert: findColorInvert($blue) !default\n$purple-invert: findColorInvert($purple) !default\n$red-invert: findColorInvert($red) !default\n\n$primary-invert: findColorInvert($primary) !default\n$primary-light: findLightColor($primary) !default\n$primary-dark: findDarkColor($primary) !default\n$info-invert: findColorInvert($info) !default\n$info-light: findLightColor($info) !default\n$info-dark: findDarkColor($info) !default\n$success-invert: findColorInvert($success) !default\n$success-light: findLightColor($success) !default\n$success-dark: findDarkColor($success) !default\n$warning-invert: findColorInvert($warning) !default\n$warning-light: findLightColor($warning) !default\n$warning-dark: findDarkColor($warning) !default\n$danger-invert: findColorInvert($danger) !default\n$danger-light: findLightColor($danger) !default\n$danger-dark: findDarkColor($danger) !default\n$light-invert: findColorInvert($light) !default\n$dark-invert: findColorInvert($dark) !default\n\n// General colors\n\n$scheme-main: $white !default\n$scheme-main-bis: $white-bis !default\n$scheme-main-ter: $white-ter !default\n$scheme-invert: $black !default\n$scheme-invert-bis: $black-bis !default\n$scheme-invert-ter: $black-ter !default\n\n$background: $white-ter !default\n\n$border: $grey-lighter !default\n$border-hover: $grey-light !default\n$border-light: $grey-lightest !default\n$border-light-hover: $grey-light !default\n\n// Text colors\n\n$text: $grey-dark !default\n$text-invert: findColorInvert($text) !default\n$text-light: $grey !default\n$text-strong: $grey-darker !default\n\n// Code colors\n\n$code: darken($red, 15%) !default\n$code-background: $background !default\n\n$pre: $text !default\n$pre-background: $background !default\n\n// Link colors\n\n$link: $blue !default\n$link-invert: findColorInvert($link) !default\n$link-light: findLightColor($link) !default\n$link-dark: findDarkColor($link) !default\n$link-visited: $purple !default\n\n$link-hover: $grey-darker !default\n$link-hover-border: $grey-light !default\n\n$link-focus: $grey-darker !default\n$link-focus-border: $blue !default\n\n$link-active: $grey-darker !default\n$link-active-border: $grey-dark !default\n\n// Typography\n\n$family-primary: $family-sans-serif !default\n$family-secondary: $family-sans-serif !default\n$family-code: $family-monospace !default\n\n$size-small: $size-7 !default\n$size-normal: $size-6 !default\n$size-medium: $size-5 !default\n$size-large: $size-4 !default\n\n// Lists and maps\n$custom-colors: null !default\n$custom-shades: null !default\n\n$colors: mergeColorMaps((\"white\": ($white, $black), \"black\": ($black, $white), \"light\": ($light, $light-invert), \"dark\": ($dark, $dark-invert), \"primary\": ($primary, $primary-invert, $primary-light, $primary-dark), \"link\": ($link, $link-invert, $link-light, $link-dark), \"info\": ($info, $info-invert, $info-light, $info-dark), \"success\": ($success, $success-invert, $success-light, $success-dark), \"warning\": ($warning, $warning-invert, $warning-light, $warning-dark), \"danger\": ($danger, $danger-invert, $danger-light, $danger-dark)), $custom-colors) !default\n\n$shades: mergeColorMaps((\"black-bis\": $black-bis, \"black-ter\": $black-ter, \"grey-darker\": $grey-darker, \"grey-dark\": $grey-dark, \"grey\": $grey, \"grey-light\": $grey-light, \"grey-lighter\": $grey-lighter, \"white-ter\": $white-ter, \"white-bis\": $white-bis), $custom-shades) !default\n\n$sizes: $size-1 $size-2 $size-3 $size-4 $size-5 $size-6 $size-7 !default\n","@keyframes spinAround\n  from\n    transform: rotate(0deg)\n  to\n    transform: rotate(359deg)\n","@import \"../utilities/mixins\"\n\n$section-padding: 3rem 1.5rem !default\n$section-padding-medium: 9rem 1.5rem !default\n$section-padding-large: 18rem 1.5rem !default\n\n.section\n  padding: $section-padding\n  // Responsiveness\n  +desktop\n    // Sizes\n    &.is-medium\n      padding: $section-padding-medium\n    &.is-large\n      padding: $section-padding-large\n","@import \"../utilities/mixins\"\n\n$container-offset: (2 * $gap) !default\n$container-max-width: $fullhd !default\n\n.container\n  flex-grow: 1\n  margin: 0 auto\n  position: relative\n  width: auto\n  &.is-fluid\n    max-width: none !important\n    padding-left: $gap\n    padding-right: $gap\n    width: 100%\n  +desktop\n    max-width: $desktop - $container-offset\n  +until-widescreen\n    &.is-widescreen:not(.is-max-desktop)\n      max-width: min($widescreen, $container-max-width) - $container-offset\n  +until-fullhd\n    &.is-fullhd:not(.is-max-desktop):not(.is-max-widescreen)\n      max-width: min($fullhd, $container-max-width) - $container-offset\n  +widescreen\n    &:not(.is-max-desktop)\n      max-width: min($widescreen, $container-max-width) - $container-offset\n  +fullhd\n    &:not(.is-max-desktop):not(.is-max-widescreen)\n      max-width: min($fullhd, $container-max-width) - $container-offset\n","@import \"../utilities/mixins\"\n\n$dimensions: 16 24 32 48 64 96 128 !default\n\n.image\n  display: block\n  position: relative\n  img\n    display: block\n    height: auto\n    width: 100%\n    &.is-rounded\n      border-radius: $radius-rounded\n  &.is-fullwidth\n    width: 100%\n  // Ratio\n  &.is-square,\n  &.is-1by1,\n  &.is-5by4,\n  &.is-4by3,\n  &.is-3by2,\n  &.is-5by3,\n  &.is-16by9,\n  &.is-2by1,\n  &.is-3by1,\n  &.is-4by5,\n  &.is-3by4,\n  &.is-2by3,\n  &.is-3by5,\n  &.is-9by16,\n  &.is-1by2,\n  &.is-1by3\n    img,\n    .has-ratio\n      @extend %overlay\n      height: 100%\n      width: 100%\n  &.is-square,\n  &.is-1by1\n    padding-top: 100%\n  &.is-5by4\n    padding-top: 80%\n  &.is-4by3\n    padding-top: 75%\n  &.is-3by2\n    padding-top: 66.6666%\n  &.is-5by3\n    padding-top: 60%\n  &.is-16by9\n    padding-top: 56.25%\n  &.is-2by1\n    padding-top: 50%\n  &.is-3by1\n    padding-top: 33.3333%\n  &.is-4by5\n    padding-top: 125%\n  &.is-3by4\n    padding-top: 133.3333%\n  &.is-2by3\n    padding-top: 150%\n  &.is-3by5\n    padding-top: 166.6666%\n  &.is-9by16\n    padding-top: 177.7777%\n  &.is-1by2\n    padding-top: 200%\n  &.is-1by3\n    padding-top: 300%\n  // Sizes\n  @each $dimension in $dimensions\n    &.is-#{$dimension}x#{$dimension}\n      height: $dimension * 1px\n      width: $dimension * 1px\n","/* Bulma Grid */\n@charset \"utf-8\"\n\n@import \"columns\"\n@import \"tiles\"\n","@import \"../utilities/mixins\"\n\n$column-gap: 0.75rem !default\n\n.column\n  display: block\n  flex-basis: 0\n  flex-grow: 1\n  flex-shrink: 1\n  padding: $column-gap\n  .columns.is-mobile > &.is-narrow\n    flex: none\n    width: unset\n  .columns.is-mobile > &.is-full\n    flex: none\n    width: 100%\n  .columns.is-mobile > &.is-three-quarters\n    flex: none\n    width: 75%\n  .columns.is-mobile > &.is-two-thirds\n    flex: none\n    width: 66.6666%\n  .columns.is-mobile > &.is-half\n    flex: none\n    width: 50%\n  .columns.is-mobile > &.is-one-third\n    flex: none\n    width: 33.3333%\n  .columns.is-mobile > &.is-one-quarter\n    flex: none\n    width: 25%\n  .columns.is-mobile > &.is-one-fifth\n    flex: none\n    width: 20%\n  .columns.is-mobile > &.is-two-fifths\n    flex: none\n    width: 40%\n  .columns.is-mobile > &.is-three-fifths\n    flex: none\n    width: 60%\n  .columns.is-mobile > &.is-four-fifths\n    flex: none\n    width: 80%\n  .columns.is-mobile > &.is-offset-three-quarters\n    +ltr-property(\"margin\", 75%, false)\n  .columns.is-mobile > &.is-offset-two-thirds\n    +ltr-property(\"margin\", 66.6666%, false)\n  .columns.is-mobile > &.is-offset-half\n    +ltr-property(\"margin\", 50%, false)\n  .columns.is-mobile > &.is-offset-one-third\n    +ltr-property(\"margin\", 33.3333%, false)\n  .columns.is-mobile > &.is-offset-one-quarter\n    +ltr-property(\"margin\", 25%, false)\n  .columns.is-mobile > &.is-offset-one-fifth\n    +ltr-property(\"margin\", 20%, false)\n  .columns.is-mobile > &.is-offset-two-fifths\n    +ltr-property(\"margin\", 40%, false)\n  .columns.is-mobile > &.is-offset-three-fifths\n    +ltr-property(\"margin\", 60%, false)\n  .columns.is-mobile > &.is-offset-four-fifths\n    +ltr-property(\"margin\", 80%, false)\n  @for $i from 0 through 12\n    .columns.is-mobile > &.is-#{$i}\n      flex: none\n      width: percentage($i / 12)\n    .columns.is-mobile > &.is-offset-#{$i}\n      +ltr-property(\"margin\", percentage($i / 12), false)\n  +mobile\n    &.is-narrow-mobile\n      flex: none\n      width: unset\n    &.is-full-mobile\n      flex: none\n      width: 100%\n    &.is-three-quarters-mobile\n      flex: none\n      width: 75%\n    &.is-two-thirds-mobile\n      flex: none\n      width: 66.6666%\n    &.is-half-mobile\n      flex: none\n      width: 50%\n    &.is-one-third-mobile\n      flex: none\n      width: 33.3333%\n    &.is-one-quarter-mobile\n      flex: none\n      width: 25%\n    &.is-one-fifth-mobile\n      flex: none\n      width: 20%\n    &.is-two-fifths-mobile\n      flex: none\n      width: 40%\n    &.is-three-fifths-mobile\n      flex: none\n      width: 60%\n    &.is-four-fifths-mobile\n      flex: none\n      width: 80%\n    &.is-offset-three-quarters-mobile\n      +ltr-property(\"margin\", 75%, false)\n    &.is-offset-two-thirds-mobile\n      +ltr-property(\"margin\", 66.6666%, false)\n    &.is-offset-half-mobile\n      +ltr-property(\"margin\", 50%, false)\n    &.is-offset-one-third-mobile\n      +ltr-property(\"margin\", 33.3333%, false)\n    &.is-offset-one-quarter-mobile\n      +ltr-property(\"margin\", 25%, false)\n    &.is-offset-one-fifth-mobile\n      +ltr-property(\"margin\", 20%, false)\n    &.is-offset-two-fifths-mobile\n      +ltr-property(\"margin\", 40%, false)\n    &.is-offset-three-fifths-mobile\n      +ltr-property(\"margin\", 60%, false)\n    &.is-offset-four-fifths-mobile\n      +ltr-property(\"margin\", 80%, false)\n    @for $i from 0 through 12\n      &.is-#{$i}-mobile\n        flex: none\n        width: percentage($i / 12)\n      &.is-offset-#{$i}-mobile\n        +ltr-property(\"margin\", percentage($i / 12), false)\n  +tablet\n    &.is-narrow,\n    &.is-narrow-tablet\n      flex: none\n      width: unset\n    &.is-full,\n    &.is-full-tablet\n      flex: none\n      width: 100%\n    &.is-three-quarters,\n    &.is-three-quarters-tablet\n      flex: none\n      width: 75%\n    &.is-two-thirds,\n    &.is-two-thirds-tablet\n      flex: none\n      width: 66.6666%\n    &.is-half,\n    &.is-half-tablet\n      flex: none\n      width: 50%\n    &.is-one-third,\n    &.is-one-third-tablet\n      flex: none\n      width: 33.3333%\n    &.is-one-quarter,\n    &.is-one-quarter-tablet\n      flex: none\n      width: 25%\n    &.is-one-fifth,\n    &.is-one-fifth-tablet\n      flex: none\n      width: 20%\n    &.is-two-fifths,\n    &.is-two-fifths-tablet\n      flex: none\n      width: 40%\n    &.is-three-fifths,\n    &.is-three-fifths-tablet\n      flex: none\n      width: 60%\n    &.is-four-fifths,\n    &.is-four-fifths-tablet\n      flex: none\n      width: 80%\n    &.is-offset-three-quarters,\n    &.is-offset-three-quarters-tablet\n      +ltr-property(\"margin\", 75%, false)\n    &.is-offset-two-thirds,\n    &.is-offset-two-thirds-tablet\n      +ltr-property(\"margin\", 66.6666%, false)\n    &.is-offset-half,\n    &.is-offset-half-tablet\n      +ltr-property(\"margin\", 50%, false)\n    &.is-offset-one-third,\n    &.is-offset-one-third-tablet\n      +ltr-property(\"margin\", 33.3333%, false)\n    &.is-offset-one-quarter,\n    &.is-offset-one-quarter-tablet\n      +ltr-property(\"margin\", 25%, false)\n    &.is-offset-one-fifth,\n    &.is-offset-one-fifth-tablet\n      +ltr-property(\"margin\", 20%, false)\n    &.is-offset-two-fifths,\n    &.is-offset-two-fifths-tablet\n      +ltr-property(\"margin\", 40%, false)\n    &.is-offset-three-fifths,\n    &.is-offset-three-fifths-tablet\n      +ltr-property(\"margin\", 60%, false)\n    &.is-offset-four-fifths,\n    &.is-offset-four-fifths-tablet\n      +ltr-property(\"margin\", 80%, false)\n    @for $i from 0 through 12\n      &.is-#{$i},\n      &.is-#{$i}-tablet\n        flex: none\n        width: percentage($i / 12)\n      &.is-offset-#{$i},\n      &.is-offset-#{$i}-tablet\n        +ltr-property(\"margin\", percentage($i / 12), false)\n  +touch\n    &.is-narrow-touch\n      flex: none\n      width: unset\n    &.is-full-touch\n      flex: none\n      width: 100%\n    &.is-three-quarters-touch\n      flex: none\n      width: 75%\n    &.is-two-thirds-touch\n      flex: none\n      width: 66.6666%\n    &.is-half-touch\n      flex: none\n      width: 50%\n    &.is-one-third-touch\n      flex: none\n      width: 33.3333%\n    &.is-one-quarter-touch\n      flex: none\n      width: 25%\n    &.is-one-fifth-touch\n      flex: none\n      width: 20%\n    &.is-two-fifths-touch\n      flex: none\n      width: 40%\n    &.is-three-fifths-touch\n      flex: none\n      width: 60%\n    &.is-four-fifths-touch\n      flex: none\n      width: 80%\n    &.is-offset-three-quarters-touch\n      +ltr-property(\"margin\", 75%, false)\n    &.is-offset-two-thirds-touch\n      +ltr-property(\"margin\", 66.6666%, false)\n    &.is-offset-half-touch\n      +ltr-property(\"margin\", 50%, false)\n    &.is-offset-one-third-touch\n      +ltr-property(\"margin\", 33.3333%, false)\n    &.is-offset-one-quarter-touch\n      +ltr-property(\"margin\", 25%, false)\n    &.is-offset-one-fifth-touch\n      +ltr-property(\"margin\", 20%, false)\n    &.is-offset-two-fifths-touch\n      +ltr-property(\"margin\", 40%, false)\n    &.is-offset-three-fifths-touch\n      +ltr-property(\"margin\", 60%, false)\n    &.is-offset-four-fifths-touch\n      +ltr-property(\"margin\", 80%, false)\n    @for $i from 0 through 12\n      &.is-#{$i}-touch\n        flex: none\n        width: percentage($i / 12)\n      &.is-offset-#{$i}-touch\n        +ltr-property(\"margin\", percentage($i / 12), false)\n  +desktop\n    &.is-narrow-desktop\n      flex: none\n      width: unset\n    &.is-full-desktop\n      flex: none\n      width: 100%\n    &.is-three-quarters-desktop\n      flex: none\n      width: 75%\n    &.is-two-thirds-desktop\n      flex: none\n      width: 66.6666%\n    &.is-half-desktop\n      flex: none\n      width: 50%\n    &.is-one-third-desktop\n      flex: none\n      width: 33.3333%\n    &.is-one-quarter-desktop\n      flex: none\n      width: 25%\n    &.is-one-fifth-desktop\n      flex: none\n      width: 20%\n    &.is-two-fifths-desktop\n      flex: none\n      width: 40%\n    &.is-three-fifths-desktop\n      flex: none\n      width: 60%\n    &.is-four-fifths-desktop\n      flex: none\n      width: 80%\n    &.is-offset-three-quarters-desktop\n      +ltr-property(\"margin\", 75%, false)\n    &.is-offset-two-thirds-desktop\n      +ltr-property(\"margin\", 66.6666%, false)\n    &.is-offset-half-desktop\n      +ltr-property(\"margin\", 50%, false)\n    &.is-offset-one-third-desktop\n      +ltr-property(\"margin\", 33.3333%, false)\n    &.is-offset-one-quarter-desktop\n      +ltr-property(\"margin\", 25%, false)\n    &.is-offset-one-fifth-desktop\n      +ltr-property(\"margin\", 20%, false)\n    &.is-offset-two-fifths-desktop\n      +ltr-property(\"margin\", 40%, false)\n    &.is-offset-three-fifths-desktop\n      +ltr-property(\"margin\", 60%, false)\n    &.is-offset-four-fifths-desktop\n      +ltr-property(\"margin\", 80%, false)\n    @for $i from 0 through 12\n      &.is-#{$i}-desktop\n        flex: none\n        width: percentage($i / 12)\n      &.is-offset-#{$i}-desktop\n        +ltr-property(\"margin\", percentage($i / 12), false)\n  +widescreen\n    &.is-narrow-widescreen\n      flex: none\n      width: unset\n    &.is-full-widescreen\n      flex: none\n      width: 100%\n    &.is-three-quarters-widescreen\n      flex: none\n      width: 75%\n    &.is-two-thirds-widescreen\n      flex: none\n      width: 66.6666%\n    &.is-half-widescreen\n      flex: none\n      width: 50%\n    &.is-one-third-widescreen\n      flex: none\n      width: 33.3333%\n    &.is-one-quarter-widescreen\n      flex: none\n      width: 25%\n    &.is-one-fifth-widescreen\n      flex: none\n      width: 20%\n    &.is-two-fifths-widescreen\n      flex: none\n      width: 40%\n    &.is-three-fifths-widescreen\n      flex: none\n      width: 60%\n    &.is-four-fifths-widescreen\n      flex: none\n      width: 80%\n    &.is-offset-three-quarters-widescreen\n      +ltr-property(\"margin\", 75%, false)\n    &.is-offset-two-thirds-widescreen\n      +ltr-property(\"margin\", 66.6666%, false)\n    &.is-offset-half-widescreen\n      +ltr-property(\"margin\", 50%, false)\n    &.is-offset-one-third-widescreen\n      +ltr-property(\"margin\", 33.3333%, false)\n    &.is-offset-one-quarter-widescreen\n      +ltr-property(\"margin\", 25%, false)\n    &.is-offset-one-fifth-widescreen\n      +ltr-property(\"margin\", 20%, false)\n    &.is-offset-two-fifths-widescreen\n      +ltr-property(\"margin\", 40%, false)\n    &.is-offset-three-fifths-widescreen\n      +ltr-property(\"margin\", 60%, false)\n    &.is-offset-four-fifths-widescreen\n      +ltr-property(\"margin\", 80%, false)\n    @for $i from 0 through 12\n      &.is-#{$i}-widescreen\n        flex: none\n        width: percentage($i / 12)\n      &.is-offset-#{$i}-widescreen\n        +ltr-property(\"margin\", percentage($i / 12), false)\n  +fullhd\n    &.is-narrow-fullhd\n      flex: none\n      width: unset\n    &.is-full-fullhd\n      flex: none\n      width: 100%\n    &.is-three-quarters-fullhd\n      flex: none\n      width: 75%\n    &.is-two-thirds-fullhd\n      flex: none\n      width: 66.6666%\n    &.is-half-fullhd\n      flex: none\n      width: 50%\n    &.is-one-third-fullhd\n      flex: none\n      width: 33.3333%\n    &.is-one-quarter-fullhd\n      flex: none\n      width: 25%\n    &.is-one-fifth-fullhd\n      flex: none\n      width: 20%\n    &.is-two-fifths-fullhd\n      flex: none\n      width: 40%\n    &.is-three-fifths-fullhd\n      flex: none\n      width: 60%\n    &.is-four-fifths-fullhd\n      flex: none\n      width: 80%\n    &.is-offset-three-quarters-fullhd\n      +ltr-property(\"margin\", 75%, false)\n    &.is-offset-two-thirds-fullhd\n      +ltr-property(\"margin\", 66.6666%, false)\n    &.is-offset-half-fullhd\n      +ltr-property(\"margin\", 50%, false)\n    &.is-offset-one-third-fullhd\n      +ltr-property(\"margin\", 33.3333%, false)\n    &.is-offset-one-quarter-fullhd\n      +ltr-property(\"margin\", 25%, false)\n    &.is-offset-one-fifth-fullhd\n      +ltr-property(\"margin\", 20%, false)\n    &.is-offset-two-fifths-fullhd\n      +ltr-property(\"margin\", 40%, false)\n    &.is-offset-three-fifths-fullhd\n      +ltr-property(\"margin\", 60%, false)\n    &.is-offset-four-fifths-fullhd\n      +ltr-property(\"margin\", 80%, false)\n    @for $i from 0 through 12\n      &.is-#{$i}-fullhd\n        flex: none\n        width: percentage($i / 12)\n      &.is-offset-#{$i}-fullhd\n        +ltr-property(\"margin\", percentage($i / 12), false)\n\n.columns\n  +ltr-property(\"margin\", (-$column-gap), false)\n  +ltr-property(\"margin\", (-$column-gap))\n  margin-top: (-$column-gap)\n  &:last-child\n    margin-bottom: (-$column-gap)\n  &:not(:last-child)\n    margin-bottom: calc(1.5rem - #{$column-gap})\n  // Modifiers\n  &.is-centered\n    justify-content: center\n  &.is-gapless\n    +ltr-property(\"margin\", 0, false)\n    +ltr-property(\"margin\", 0)\n    margin-top: 0\n    & > .column\n      margin: 0\n      padding: 0 !important\n    &:not(:last-child)\n      margin-bottom: 1.5rem\n    &:last-child\n      margin-bottom: 0\n  &.is-mobile\n    display: flex\n  &.is-multiline\n    flex-wrap: wrap\n  &.is-vcentered\n    align-items: center\n  // Responsiveness\n  +tablet\n    &:not(.is-desktop)\n      display: flex\n  +desktop\n    // Modifiers\n    &.is-desktop\n      display: flex\n\n@if $variable-columns\n  .columns.is-variable\n    --columnGap: 0.75rem\n    +ltr-property(\"margin\", calc(-1 * var(--columnGap)), false)\n    +ltr-property(\"margin\", calc(-1 * var(--columnGap)))\n    > .column\n      padding-left: var(--columnGap)\n      padding-right: var(--columnGap)\n    @for $i from 0 through 8\n      &.is-#{$i}\n        --columnGap: #{$i * 0.25rem}\n      +mobile\n        &.is-#{$i}-mobile\n          --columnGap: #{$i * 0.25rem}\n      +tablet\n        &.is-#{$i}-tablet\n          --columnGap: #{$i * 0.25rem}\n      +tablet-only\n        &.is-#{$i}-tablet-only\n          --columnGap: #{$i * 0.25rem}\n      +touch\n        &.is-#{$i}-touch\n          --columnGap: #{$i * 0.25rem}\n      +desktop\n        &.is-#{$i}-desktop\n          --columnGap: #{$i * 0.25rem}\n      +desktop-only\n        &.is-#{$i}-desktop-only\n          --columnGap: #{$i * 0.25rem}\n      +widescreen\n        &.is-#{$i}-widescreen\n          --columnGap: #{$i * 0.25rem}\n      +widescreen-only\n        &.is-#{$i}-widescreen-only\n          --columnGap: #{$i * 0.25rem}\n      +fullhd\n        &.is-#{$i}-fullhd\n          --columnGap: #{$i * 0.25rem}\n","@import \"../utilities/mixins\"\n\n$tile-spacing: 0.75rem !default\n\n.tile\n  align-items: stretch\n  display: block\n  flex-basis: 0\n  flex-grow: 1\n  flex-shrink: 1\n  min-height: min-content\n  // Modifiers\n  &.is-ancestor\n    margin-left: $tile-spacing * -1\n    margin-right: $tile-spacing * -1\n    margin-top: $tile-spacing * -1\n    &:last-child\n      margin-bottom: $tile-spacing * -1\n    &:not(:last-child)\n      margin-bottom: $tile-spacing\n  &.is-child\n    margin: 0 !important\n  &.is-parent\n    padding: $tile-spacing\n  &.is-vertical\n    flex-direction: column\n    & > .tile.is-child:not(:last-child)\n      margin-bottom: 1.5rem !important\n  // Responsiveness\n  +tablet\n    &:not(.is-child)\n      display: flex\n    @for $i from 1 through 12\n      &.is-#{$i}\n        flex: none\n        width: ($i / 12) * 100%\n","$flex-direction-values: row, row-reverse, column, column-reverse\n@each $value in $flex-direction-values\n  .is-flex-direction-#{$value}\n    flex-direction: $value !important\n\n$flex-wrap-values: nowrap, wrap, wrap-reverse\n@each $value in $flex-wrap-values\n  .is-flex-wrap-#{$value}\n    flex-wrap: $value !important\n\n$justify-content-values: flex-start, flex-end, center, space-between, space-around, space-evenly, start, end, left, right\n@each $value in $justify-content-values\n  .is-justify-content-#{$value}\n    justify-content: $value !important\n\n$align-content-values: flex-start, flex-end, center, space-between, space-around, space-evenly, stretch, start, end, baseline\n@each $value in $align-content-values\n  .is-align-content-#{$value}\n    align-content: $value !important\n\n$align-items-values: stretch, flex-start, flex-end, center, baseline, start, end, self-start, self-end\n@each $value in $align-items-values\n  .is-align-items-#{$value}\n    align-items: $value !important\n\n$align-self-values: auto, flex-start, flex-end, center, baseline, stretch\n@each $value in $align-self-values\n  .is-align-self-#{$value}\n    align-self: $value !important\n\n$flex-operators: grow, shrink\n@each $operator in $flex-operators\n  @for $i from 0 through 5\n    .is-flex-#{$operator}-#{$i}\n      flex-#{$operator}: $i !important\n","@import \"../utilities/mixins\"\n\n.is-clearfix\n  +clearfix\n\n.is-pulled-left\n  float: left !important\n\n.is-pulled-right\n  float: right !important\n","@import \"../utilities/mixins\"\n\n.is-overlay\n  @extend %overlay\n\n.is-relative\n  position: relative !important\n","@import \"../utilities/mixins\"\n\n.is-radiusless\n  border-radius: 0 !important\n\n.is-shadowless\n  box-shadow: none !important\n\n.is-clickable\n  cursor: pointer !important\n  pointer-events: all !important\n\n.is-unselectable\n  @extend %unselectable\n",".is-marginless\n  margin: 0 !important\n\n.is-paddingless\n  padding: 0 !important\n\n$spacing-shortcuts: (\"margin\": \"m\", \"padding\": \"p\") !default\n$spacing-directions: (\"top\": \"t\", \"right\": \"r\", \"bottom\": \"b\", \"left\": \"l\") !default\n$spacing-horizontal: \"x\" !default\n$spacing-vertical: \"y\" !default\n$spacing-values: (\"0\": 0, \"1\": 0.25rem, \"2\": 0.5rem, \"3\": 0.75rem, \"4\": 1rem, \"5\": 1.5rem, \"6\": 3rem) !default\n\n@each $property, $shortcut in $spacing-shortcuts\n  @each $name, $value in $spacing-values\n    // All directions\n    .#{$shortcut}-#{$name}\n      #{$property}: $value !important\n    // Cardinal directions\n    @each $direction, $suffix in $spacing-directions\n      .#{$shortcut}#{$suffix}-#{$name}\n        #{$property}-#{$direction}: $value !important\n    // Horizontal axis\n    @if $spacing-horizontal != null\n      .#{$shortcut}#{$spacing-horizontal}-#{$name}\n        #{$property}-left: $value !important\n        #{$property}-right: $value !important\n    // Vertical axis\n    @if $spacing-vertical != null\n      .#{$shortcut}#{$spacing-vertical}-#{$name}\n        #{$property}-top: $value !important\n        #{$property}-bottom: $value !important\n","@import \"../utilities/mixins\"\n\n$displays: 'block' 'flex' 'inline' 'inline-block' 'inline-flex'\n\n@each $display in $displays\n  .is-#{$display}\n    display: #{$display} !important\n  +mobile\n    .is-#{$display}-mobile\n      display: #{$display} !important\n  +tablet\n    .is-#{$display}-tablet\n      display: #{$display} !important\n  +tablet-only\n    .is-#{$display}-tablet-only\n      display: #{$display} !important\n  +touch\n    .is-#{$display}-touch\n      display: #{$display} !important\n  +desktop\n    .is-#{$display}-desktop\n      display: #{$display} !important\n  +desktop-only\n    .is-#{$display}-desktop-only\n      display: #{$display} !important\n  +widescreen\n    .is-#{$display}-widescreen\n      display: #{$display} !important\n  +widescreen-only\n    .is-#{$display}-widescreen-only\n      display: #{$display} !important\n  +fullhd\n    .is-#{$display}-fullhd\n      display: #{$display} !important\n\n.is-hidden\n  display: none !important\n\n.is-sr-only\n  border: none !important\n  clip: rect(0, 0, 0, 0) !important\n  height: 0.01em !important\n  overflow: hidden !important\n  padding: 0 !important\n  position: absolute !important\n  white-space: nowrap !important\n  width: 0.01em !important\n\n+mobile\n  .is-hidden-mobile\n    display: none !important\n\n+tablet\n  .is-hidden-tablet\n    display: none !important\n\n+tablet-only\n  .is-hidden-tablet-only\n    display: none !important\n\n+touch\n  .is-hidden-touch\n    display: none !important\n\n+desktop\n  .is-hidden-desktop\n    display: none !important\n\n+desktop-only\n  .is-hidden-desktop-only\n    display: none !important\n\n+widescreen\n  .is-hidden-widescreen\n    display: none !important\n\n+widescreen-only\n  .is-hidden-widescreen-only\n    display: none !important\n\n+fullhd\n  .is-hidden-fullhd\n    display: none !important\n\n.is-invisible\n  visibility: hidden !important\n\n+mobile\n  .is-invisible-mobile\n    visibility: hidden !important\n\n+tablet\n  .is-invisible-tablet\n    visibility: hidden !important\n\n+tablet-only\n  .is-invisible-tablet-only\n    visibility: hidden !important\n\n+touch\n  .is-invisible-touch\n    visibility: hidden !important\n\n+desktop\n  .is-invisible-desktop\n    visibility: hidden !important\n\n+desktop-only\n  .is-invisible-desktop-only\n    visibility: hidden !important\n\n+widescreen\n  .is-invisible-widescreen\n    visibility: hidden !important\n\n+widescreen-only\n  .is-invisible-widescreen-only\n    visibility: hidden !important\n\n+fullhd\n  .is-invisible-fullhd\n    visibility: hidden !important\n","// File for which all imports are resolved and bundled. This is the entry-point for\n// the `@angular/material` theming Sass bundle. See `//src/material:theming_bundle`.\n\n// Import all the theming functionality.\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000 !default;\n$cdk-z-index-overlay: 1000 !default;\n$cdk-z-index-overlay-backdrop: 1000 !default;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n\n@mixin cdk-overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $cdk-z-index-overlay-container;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $cdk-z-index-overlay;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $cdk-z-index-overlay-backdrop;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // Note that we can't import and use the `high-contrast` mixin from `_a11y.scss`, because\n      // this file will be copied to the top-level `cdk` package when putting together the files\n      // for npm. Any relative import paths we use here will become invalid once the file is copied.\n      .cdk-high-contrast-active & {\n        // In high contrast mode the rgba background will become solid\n        // so we need to fall back to making it opaque using `opacity`.\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $cdk-overlay-dark-backdrop-background;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &, &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n    }\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n\n@mixin cdk-a11y {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\n    white-space: nowrap;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n  }\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param selector-context The selector under which to nest the mixin's content.\n@mixin _cdk-optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n///    `white-on-black` or `black-on-white`.\n/// @param encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin cdk-high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      // Note that if this selector is updated, the same change has to be made inside\n      // `_overlay.scss` which can't depend on this mixin due to some infrastructure limitations.\n      .cdk-high-contrast-#{$target} {\n        @include _cdk-optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _cdk-optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin cdk-text-field {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    @include _cdk-textarea-autosize-measuring-base;\n    height: auto !important;\n    overflow: hidden !important;\n  }\n\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\n  textarea.cdk-textarea-autosize-measuring-firefox {\n    @include _cdk-textarea-autosize-measuring-base;\n    height: 0 !important;\n  }\n}\n\n@mixin _cdk-textarea-autosize-measuring-base {\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n  // measurement. We just have to account for it later and subtract it off the final result.\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$cdk-text-field-autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin cdk-text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} both;\n  }\n\n  $cdk-text-field-autofill-color-frame-count:\n      $cdk-text-field-autofill-color-frame-count + 1 !global;\n}\n\n\n// Core styles that can be used to apply material design treatments to any element.\n// Media queries\n// TODO(josephperrott): Change $mat-xsmall and $mat-small usages to rely on BreakpointObserver,\n$mat-xsmall: 'max-width: 599px';\n$mat-small: 'max-width: 959px';\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n\n\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://material.io/design/environment/elevation.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\n// space completely obscured by an object relative to its light source), one for penumbra (the\n// space partially obscured by an object), and one for ambient (the space which contains the object\n// itself). For a further explanation of these terms and their meanings, see\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\n\n// Maps for the different shadow sets and their values within each z-space. These values were\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\n// all of the values between them.\n\n@function _get-umbra-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.2), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 2px 1px -1px #{$shadow-color}',\n    2: '0px 3px 1px -2px #{$shadow-color}',\n    3: '0px 3px 3px -2px #{$shadow-color}',\n    4: '0px 2px 4px -1px #{$shadow-color}',\n    5: '0px 3px 5px -1px #{$shadow-color}',\n    6: '0px 3px 5px -1px #{$shadow-color}',\n    7: '0px 4px 5px -2px #{$shadow-color}',\n    8: '0px 5px 5px -3px #{$shadow-color}',\n    9: '0px 5px 6px -3px #{$shadow-color}',\n    10: '0px 6px 6px -3px #{$shadow-color}',\n    11: '0px 6px 7px -4px #{$shadow-color}',\n    12: '0px 7px 8px -4px #{$shadow-color}',\n    13: '0px 7px 8px -4px #{$shadow-color}',\n    14: '0px 7px 9px -4px #{$shadow-color}',\n    15: '0px 8px 9px -5px #{$shadow-color}',\n    16: '0px 8px 10px -5px #{$shadow-color}',\n    17: '0px 8px 11px -5px #{$shadow-color}',\n    18: '0px 9px 11px -5px #{$shadow-color}',\n    19: '0px 9px 12px -6px #{$shadow-color}',\n    20: '0px 10px 13px -6px #{$shadow-color}',\n    21: '0px 10px 13px -6px #{$shadow-color}',\n    22: '0px 10px 14px -6px #{$shadow-color}',\n    23: '0px 11px 14px -7px #{$shadow-color}',\n    24: '0px 11px 15px -7px #{$shadow-color}'\n  );\n}\n\n@function _get-penumbra-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.14), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 1px 0px #{$shadow-color}',\n    2: '0px 2px 2px 0px #{$shadow-color}',\n    3: '0px 3px 4px 0px #{$shadow-color}',\n    4: '0px 4px 5px 0px #{$shadow-color}',\n    5: '0px 5px 8px 0px #{$shadow-color}',\n    6: '0px 6px 10px 0px #{$shadow-color}',\n    7: '0px 7px 10px 1px #{$shadow-color}',\n    8: '0px 8px 10px 1px #{$shadow-color}',\n    9: '0px 9px 12px 1px #{$shadow-color}',\n    10: '0px 10px 14px 1px #{$shadow-color}',\n    11: '0px 11px 15px 1px #{$shadow-color}',\n    12: '0px 12px 17px 2px #{$shadow-color}',\n    13: '0px 13px 19px 2px #{$shadow-color}',\n    14: '0px 14px 21px 2px #{$shadow-color}',\n    15: '0px 15px 22px 2px #{$shadow-color}',\n    16: '0px 16px 24px 2px #{$shadow-color}',\n    17: '0px 17px 26px 2px #{$shadow-color}',\n    18: '0px 18px 28px 2px #{$shadow-color}',\n    19: '0px 19px 29px 2px #{$shadow-color}',\n    20: '0px 20px 31px 3px #{$shadow-color}',\n    21: '0px 21px 33px 3px #{$shadow-color}',\n    22: '0px 22px 35px 3px #{$shadow-color}',\n    23: '0px 23px 36px 3px #{$shadow-color}',\n    24: '0px 24px 38px 3px #{$shadow-color}'\n  );\n}\n\n@function _get-ambient-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.12), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 3px 0px #{$shadow-color}',\n    2: '0px 1px 5px 0px #{$shadow-color}',\n    3: '0px 1px 8px 0px #{$shadow-color}',\n    4: '0px 1px 10px 0px #{$shadow-color}',\n    5: '0px 1px 14px 0px #{$shadow-color}',\n    6: '0px 1px 18px 0px #{$shadow-color}',\n    7: '0px 2px 16px 1px #{$shadow-color}',\n    8: '0px 3px 14px 2px #{$shadow-color}',\n    9: '0px 3px 16px 2px #{$shadow-color}',\n    10: '0px 4px 18px 3px #{$shadow-color}',\n    11: '0px 4px 20px 3px #{$shadow-color}',\n    12: '0px 5px 22px 4px #{$shadow-color}',\n    13: '0px 5px 24px 4px #{$shadow-color}',\n    14: '0px 5px 26px 4px #{$shadow-color}',\n    15: '0px 6px 28px 5px #{$shadow-color}',\n    16: '0px 6px 30px 5px #{$shadow-color}',\n    17: '0px 6px 32px 5px #{$shadow-color}',\n    18: '0px 7px 34px 6px #{$shadow-color}',\n    19: '0px 7px 36px 6px #{$shadow-color}',\n    20: '0px 8px 38px 7px #{$shadow-color}',\n    21: '0px 8px 40px 7px #{$shadow-color}',\n    22: '0px 8px 42px 7px #{$shadow-color}',\n    23: '0px 9px 44px 8px #{$shadow-color}',\n    24: '0px 9px 46px 8px #{$shadow-color}'\n  );\n}\n\n// The default duration value for elevation transitions.\n$mat-elevation-transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$mat-elevation-transition-timing-function: $mat-fast-out-slow-in-timing-function;\n\n// The default color for elevation shadows.\n$mat-elevation-color: black !default;\n\n// The default opacity scaling value for elevation shadows.\n$mat-elevation-opacity: 1 !default;\n\n// Prefix for elevation-related selectors.\n$mat-elevation-prefix: 'mat-elevation-z';\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin mat-elevation($zValue, $color: $mat-elevation-color, $opacity: $mat-elevation-opacity) {\n  @if type-of($zValue) != number or not unitless($zValue) {\n    @error '$zValue must be a unitless number';\n  }\n  @if $zValue < 0 or $zValue > 24 {\n    @error '$zValue must be between 0 and 24';\n  }\n\n  box-shadow: #{map-get(_get-umbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-penumbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-ambient-map($color, $opacity), $zValue)};\n}\n\n// Applies the elevation to an element in a manner that allows\n// consumers to override it via the Material elevation classes.\n@mixin mat-overridable-elevation(\n    $zValue,\n    $color: $mat-elevation-color,\n    $opacity: $mat-elevation-opacity) {\n  &:not([class*='#{$mat-elevation-prefix}']) {\n    @include mat-elevation($zValue, $color, $opacity);\n  }\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function mat-elevation-transition-property-value(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin mat-elevation-transition(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  transition: mat-elevation-transition-property-value($duration, $easing);\n}\n\n\n@mixin mat-private-theme-elevation($zValue, $config, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($config, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n@mixin mat-private-theme-overridable-elevation($zValue, $config, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($config, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-overridable-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// If the mat-animation-noop class is present on the components root element,\n// prevent non css animations from running.\n// NOTE: Currently this mixin should only be used with components that do not\n// have any projected content.\n@mixin mat-private-animation-noop() {\n  // @at-root is used to steps outside of the hierarchy of the scss rules. This is\n  // done to allow a class to be added to be added to base of the scss nesting\n  // context.\n  // For example:\n  // .my-root {\n  //   .my-subclass {\n  //      @include mat-private-animation-noop();\n  //    }\n  // }\n  // results in:\n  // ._mat-animation-noopable.my-root .my-subclass { ... }\n  @at-root ._mat-animation-noopable#{&} {\n    transition: none;\n    animation: none;\n    @content;\n  }\n}\n\n// Color palettes from the Material Design spec.\n// See https://material.io/design/color/\n//\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\n\n\n// @deprecated renamed to $dark-primary-text.\n// @breaking-change 8.0.0\n$black-87-opacity: rgba(black, 0.87);\n// @deprecated renamed to $light-primary-text.\n// @breaking-change 8.0.0\n$white-87-opacity: rgba(white, 0.87);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-12-opacity: rgba(black, 0.12);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-12-opacity: rgba(white, 0.12);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-6-opacity: rgba(black, 0.06);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-6-opacity: rgba(white, 0.06);\n\n$dark-primary-text: rgba(black, 0.87);\n$dark-secondary-text: rgba(black, 0.54);\n$dark-disabled-text: rgba(black, 0.38);\n$dark-dividers: rgba(black, 0.12);\n$dark-focused: rgba(black, 0.12);\n$light-primary-text: white;\n$light-secondary-text: rgba(white, 0.7);\n$light-disabled-text: rgba(white, 0.5);\n$light-dividers: rgba(white, 0.12);\n$light-focused: rgba(white, 0.12);\n\n$mat-red: (\n  50: #ffebee,\n  100: #ffcdd2,\n  200: #ef9a9a,\n  300: #e57373,\n  400: #ef5350,\n  500: #f44336,\n  600: #e53935,\n  700: #d32f2f,\n  800: #c62828,\n  900: #b71c1c,\n  A100: #ff8a80,\n  A200: #ff5252,\n  A400: #ff1744,\n  A700: #d50000,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-pink: (\n  50: #fce4ec,\n  100: #f8bbd0,\n  200: #f48fb1,\n  300: #f06292,\n  400: #ec407a,\n  500: #e91e63,\n  600: #d81b60,\n  700: #c2185b,\n  800: #ad1457,\n  900: #880e4f,\n  A100: #ff80ab,\n  A200: #ff4081,\n  A400: #f50057,\n  A700: #c51162,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-purple: (\n  50: #f3e5f5,\n  100: #e1bee7,\n  200: #ce93d8,\n  300: #ba68c8,\n  400: #ab47bc,\n  500: #9c27b0,\n  600: #8e24aa,\n  700: #7b1fa2,\n  800: #6a1b9a,\n  900: #4a148c,\n  A100: #ea80fc,\n  A200: #e040fb,\n  A400: #d500f9,\n  A700: #aa00ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-deep-purple: (\n  50: #ede7f6,\n  100: #d1c4e9,\n  200: #b39ddb,\n  300: #9575cd,\n  400: #7e57c2,\n  500: #673ab7,\n  600: #5e35b1,\n  700: #512da8,\n  800: #4527a0,\n  900: #311b92,\n  A100: #b388ff,\n  A200: #7c4dff,\n  A400: #651fff,\n  A700: #6200ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-indigo: (\n  50: #e8eaf6,\n  100: #c5cae9,\n  200: #9fa8da,\n  300: #7986cb,\n  400: #5c6bc0,\n  500: #3f51b5,\n  600: #3949ab,\n  700: #303f9f,\n  800: #283593,\n  900: #1a237e,\n  A100: #8c9eff,\n  A200: #536dfe,\n  A400: #3d5afe,\n  A700: #304ffe,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-blue: (\n  50: #e3f2fd,\n  100: #bbdefb,\n  200: #90caf9,\n  300: #64b5f6,\n  400: #42a5f5,\n  500: #2196f3,\n  600: #1e88e5,\n  700: #1976d2,\n  800: #1565c0,\n  900: #0d47a1,\n  A100: #82b1ff,\n  A200: #448aff,\n  A400: #2979ff,\n  A700: #2962ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-light-blue: (\n  50: #e1f5fe,\n  100: #b3e5fc,\n  200: #81d4fa,\n  300: #4fc3f7,\n  400: #29b6f6,\n  500: #03a9f4,\n  600: #039be5,\n  700: #0288d1,\n  800: #0277bd,\n  900: #01579b,\n  A100: #80d8ff,\n  A200: #40c4ff,\n  A400: #00b0ff,\n  A700: #0091ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-cyan: (\n  50: #e0f7fa,\n  100: #b2ebf2,\n  200: #80deea,\n  300: #4dd0e1,\n  400: #26c6da,\n  500: #00bcd4,\n  600: #00acc1,\n  700: #0097a7,\n  800: #00838f,\n  900: #006064,\n  A100: #84ffff,\n  A200: #18ffff,\n  A400: #00e5ff,\n  A700: #00b8d4,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-teal: (\n  50: #e0f2f1,\n  100: #b2dfdb,\n  200: #80cbc4,\n  300: #4db6ac,\n  400: #26a69a,\n  500: #009688,\n  600: #00897b,\n  700: #00796b,\n  800: #00695c,\n  900: #004d40,\n  A100: #a7ffeb,\n  A200: #64ffda,\n  A400: #1de9b6,\n  A700: #00bfa5,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-green: (\n  50: #e8f5e9,\n  100: #c8e6c9,\n  200: #a5d6a7,\n  300: #81c784,\n  400: #66bb6a,\n  500: #4caf50,\n  600: #43a047,\n  700: #388e3c,\n  800: #2e7d32,\n  900: #1b5e20,\n  A100: #b9f6ca,\n  A200: #69f0ae,\n  A400: #00e676,\n  A700: #00c853,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-light-green: (\n  50: #f1f8e9,\n  100: #dcedc8,\n  200: #c5e1a5,\n  300: #aed581,\n  400: #9ccc65,\n  500: #8bc34a,\n  600: #7cb342,\n  700: #689f38,\n  800: #558b2f,\n  900: #33691e,\n  A100: #ccff90,\n  A200: #b2ff59,\n  A400: #76ff03,\n  A700: #64dd17,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-lime: (\n  50: #f9fbe7,\n  100: #f0f4c3,\n  200: #e6ee9c,\n  300: #dce775,\n  400: #d4e157,\n  500: #cddc39,\n  600: #c0ca33,\n  700: #afb42b,\n  800: #9e9d24,\n  900: #827717,\n  A100: #f4ff81,\n  A200: #eeff41,\n  A400: #c6ff00,\n  A700: #aeea00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-yellow: (\n  50: #fffde7,\n  100: #fff9c4,\n  200: #fff59d,\n  300: #fff176,\n  400: #ffee58,\n  500: #ffeb3b,\n  600: #fdd835,\n  700: #fbc02d,\n  800: #f9a825,\n  900: #f57f17,\n  A100: #ffff8d,\n  A200: #ffff00,\n  A400: #ffea00,\n  A700: #ffd600,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-amber: (\n  50: #fff8e1,\n  100: #ffecb3,\n  200: #ffe082,\n  300: #ffd54f,\n  400: #ffca28,\n  500: #ffc107,\n  600: #ffb300,\n  700: #ffa000,\n  800: #ff8f00,\n  900: #ff6f00,\n  A100: #ffe57f,\n  A200: #ffd740,\n  A400: #ffc400,\n  A700: #ffab00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-orange: (\n  50: #fff3e0,\n  100: #ffe0b2,\n  200: #ffcc80,\n  300: #ffb74d,\n  400: #ffa726,\n  500: #ff9800,\n  600: #fb8c00,\n  700: #f57c00,\n  800: #ef6c00,\n  900: #e65100,\n  A100: #ffd180,\n  A200: #ffab40,\n  A400: #ff9100,\n  A700: #ff6d00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: black,\n  )\n);\n\n$mat-deep-orange: (\n  50: #fbe9e7,\n  100: #ffccbc,\n  200: #ffab91,\n  300: #ff8a65,\n  400: #ff7043,\n  500: #ff5722,\n  600: #f4511e,\n  700: #e64a19,\n  800: #d84315,\n  900: #bf360c,\n  A100: #ff9e80,\n  A200: #ff6e40,\n  A400: #ff3d00,\n  A700: #dd2c00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-brown: (\n  50: #efebe9,\n  100: #d7ccc8,\n  200: #bcaaa4,\n  300: #a1887f,\n  400: #8d6e63,\n  500: #795548,\n  600: #6d4c41,\n  700: #5d4037,\n  800: #4e342e,\n  900: #3e2723,\n  A100: #d7ccc8,\n  A200: #bcaaa4,\n  A400: #8d6e63,\n  A700: #5d4037,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-grey: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121,\n  A100: #ffffff,\n  A200: #eeeeee,\n  A400: #bdbdbd,\n  A700: #616161,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-gray: $mat-grey;\n\n$mat-blue-grey: (\n  50: #eceff1,\n  100: #cfd8dc,\n  200: #b0bec5,\n  300: #90a4ae,\n  400: #78909c,\n  500: #607d8b,\n  600: #546e7a,\n  700: #455a64,\n  800: #37474f,\n  900: #263238,\n  A100: #cfd8dc,\n  A200: #b0bec5,\n  A400: #78909c,\n  A700: #455a64,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-blue-gray: $mat-blue-grey;\n\n\n// Background palette for light themes.\n$mat-light-theme-background: (\n  status-bar: map-get($mat-grey, 300),\n  app-bar:    map-get($mat-grey, 100),\n  background: map-get($mat-grey, 50),\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\n  card:       white,\n  dialog:     white,\n  disabled-button: rgba(black, 0.12),\n  raised-button: white,\n  focused-button: $dark-focused,\n  selected-button: map-get($mat-grey, 300),\n  selected-disabled-button: map-get($mat-grey, 400),\n  disabled-button-toggle: map-get($mat-grey, 200),\n  unselected-chip: map-get($mat-grey, 300),\n  disabled-list-option: map-get($mat-grey, 200),\n  tooltip: map-get($mat-grey, 700),\n);\n\n// Background palette for dark themes.\n$mat-dark-theme-background: (\n  status-bar: black,\n  app-bar:    map-get($mat-grey, 900),\n  background: #303030,\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\n  card:       map-get($mat-grey, 800),\n  dialog:     map-get($mat-grey, 800),\n  disabled-button: rgba(white, 0.12),\n  raised-button: map-get($mat-grey, 800),\n  focused-button: $light-focused,\n  selected-button: map-get($mat-grey, 900),\n  selected-disabled-button: map-get($mat-grey, 800),\n  disabled-button-toggle: black,\n  unselected-chip: map-get($mat-grey, 700),\n  disabled-list-option: black,\n  tooltip: map-get($mat-grey, 700),\n);\n\n// Foreground palette for light themes.\n$mat-light-theme-foreground: (\n  base:              black,\n  divider:           $dark-dividers,\n  dividers:          $dark-dividers,\n  disabled:          $dark-disabled-text,\n  disabled-button:   rgba(black, 0.26),\n  disabled-text:     $dark-disabled-text,\n  elevation:         black,\n  hint-text:         $dark-disabled-text,\n  secondary-text:    $dark-secondary-text,\n  icon:              rgba(black, 0.54),\n  icons:             rgba(black, 0.54),\n  text:              rgba(black, 0.87),\n  slider-min:        rgba(black, 0.87),\n  slider-off:        rgba(black, 0.26),\n  slider-off-active: rgba(black, 0.38),\n);\n\n// Foreground palette for dark themes.\n$mat-dark-theme-foreground: (\n  base:              white,\n  divider:           $light-dividers,\n  dividers:          $light-dividers,\n  disabled:          $light-disabled-text,\n  disabled-button:   rgba(white, 0.3),\n  disabled-text:     $light-disabled-text,\n  elevation:         black,\n  hint-text:         $light-disabled-text,\n  secondary-text:    $light-secondary-text,\n  icon:              white,\n  icons:             white,\n  text:              white,\n  slider-min:        white,\n  slider-off:        rgba(white, 0.3),\n  slider-off-active: rgba(white, 0.3),\n);\n\n// Note that this file is called `private`, because the APIs in it aren't public yet.\n// Once they're made available, the code should be moved out into an `index.scss`.\n\n// Taken from mat-density with small modifications to not rely on the new Sass module\n// system, and to support arbitrary properties in a density configuration.\n// https://github.com/material-components/material-components-web/blob/master/packages/mdc-density\n\n$_mat-density-interval: 4px !default;\n$_mat-density-minimum-scale: minimum !default;\n$_mat-density-maximum-scale: maximum !default;\n$_mat-density-supported-scales: (default, minimum, maximum) !default;\n$_mat-density-default-scale: 0 !default;\n\n// Whether density should be generated at root. This will be temporarily set to `true`\n// whenever density styles for legacy themes are generated.\n$mat-private-density-generate-at-root: false;\n// Whether density styles should be generated. This will be temporarily set to `false` if\n// duplicate density styles for a legacy theme would be generated. For legacy themes,\n// we always generate the default density **only once** at root.\n$mat-private-density-generate-styles: true;\n\n// Mixin that can be used to wrap density styles of given components. The mixin will\n// move the density styles to root if the `$mat-private-density-generate-at-root` global variable\n// is set. If `$mat-private-density-generate-styles` is set to `false`, generation of density\n// styles wrapped in this mixin is skipped. This mixin exists to improve backwards compatibility\n// of the new theming API where density styles are included as part of themes. Previously,\n// density styles of components were part of their base styles. With the new API, they are\n// part of the theming system. The `<..>-theme` mixins generate density by default unless\n// the density configuration is explicitly specified as per new API. This means, that projects\n// using `<..>-theme` mixins for separate themes (like `.dark-theme`) will cause duplicate\n// density styles. This is breaking as it increases specificity of density styles. This mixin\n// provides an API to control generation of density styles so that we can ensure they are only\n// created *once* and at root.\n@mixin mat-private-density-legacy-compatibility() {\n  @if $mat-private-density-generate-styles and $mat-private-density-generate-at-root {\n    @at-root {\n      @content;\n    }\n  }\n  @else if $mat-private-density-generate-styles {\n    @content;\n  }\n}\n\n@function mat-private-density-prop-value($density-config, $density-scale, $property-name) {\n  @if (type-of($density-scale) == 'string' and\n      index($list: $_mat-density-supported-scales, $value: $density-scale) == null) {\n    @error 'mat-density: Supported density scales #{$_mat-density-supported-scales}, '  +\n      'but received #{$density-scale}.';\n  }\n\n  $value: null;\n  $property-scale-map: map-get($density-config, $property-name);\n\n  @if map-has-key($property-scale-map, $density-scale) {\n    $value: map-get($property-scale-map, $density-scale);\n  }\n  @else {\n    $value: map-get($property-scale-map, default) + $density-scale * $_mat-density-interval;\n  }\n\n  $min-value: map-get($property-scale-map, $_mat-density-minimum-scale);\n  $max-value: map-get($property-scale-map, $_mat-density-maximum-scale);\n\n  @if ($value < $min-value or $value > $max-value) {\n    @error 'mat-density: #{$property-name} must be between #{$min-value} and ' +\n      '#{$max-value} (inclusive), but received #{$value}.';\n  }\n\n  @return $value;\n}\n\n\n// Whether duplication warnings should be disabled. Warnings enabled by default.\n$mat-theme-ignore-duplication-warnings: false !default;\n\n// Whether density should be generated by default.\n$_mat-theme-generate-default-density: true !default;\n\n// Warning that will be printed if duplicated styles are generated by a theme.\n$_mat-theme-duplicate-warning: 'Read more about how style duplication can be avoided in a ' +\n  'dedicated guide. https://github.com/angular/components/blob/master/guides/duplicate-theming-styles.md';\n\n// These variable are not intended to be overridden externally. They use `!default` to\n// avoid being reset every time this file is imported.\n$_mat-theme-emitted-color: () !default;\n$_mat-theme-emitted-typography: () !default;\n$_mat-theme-emitted-density: () !default;\n\n// For a given hue in a palette, return the contrast color from the map of contrast palettes.\n// @param $palette\n// @param $hue\n@function mat-contrast($palette, $hue) {\n  @return map-get(map-get($palette, contrast), $hue);\n}\n\n\n// Creates a map of hues to colors for a theme. This is used to define a theme palette in terms\n// of the Material Design hues.\n// @param $base-palette\n// @param $default\n// @param $lighter\n// @param $darker\n// @param $text\n@function mat-palette($base-palette, $default: 500, $lighter: 100, $darker: 700, $text: $default) {\n  $result: map-merge($base-palette, (\n    default: map-get($base-palette, $default),\n    lighter: map-get($base-palette, $lighter),\n    darker: map-get($base-palette, $darker),\n    text: map-get($base-palette, $text),\n\n    default-contrast: mat-contrast($base-palette, $default),\n    lighter-contrast: mat-contrast($base-palette, $lighter),\n    darker-contrast: mat-contrast($base-palette, $darker)\n  ));\n\n  // For each hue in the palette, add a \"-contrast\" color to the map.\n  @each $hue, $color in $base-palette {\n    $result: map-merge($result, (\n      '#{$hue}-contrast': mat-contrast($base-palette, $hue)\n    ));\n  }\n\n  @return $result;\n}\n\n\n// Gets a color from a theme palette (the output of mat-palette).\n// The hue can be one of the standard values (500, A400, etc.), one of the three preconfigured\n// hues (default, lighter, darker), or any of the aforementioned prefixed with \"-contrast\".\n//\n// @param $palette The theme palette (output of mat-palette).\n// @param $hue The hue from the palette to use. If this is a value between 0 and 1, it will\n//     be treated as opacity.\n// @param $opacity The alpha channel value for the color.\n@function mat-color($palette, $hue: default, $opacity: null) {\n  // If hueKey is a number between zero and one, then it actually contains an\n  // opacity value, so recall this function with the default hue and that given opacity.\n  @if type-of($hue) == number and $hue >= 0 and $hue <= 1 {\n    @return mat-color($palette, default, $hue);\n  }\n\n  $color: map-get($palette, $hue);\n\n  @if (type-of($color) != color) {\n    // If the $color resolved to something different from a color (e.g. a CSS variable),\n    // we can't apply the opacity anyway so we return the value as is, otherwise Sass can\n    // throw an error or output something invalid.\n    @return $color;\n  }\n\n  @return rgba($color, if($opacity == null, opacity($color), $opacity));\n}\n\n// Validates the specified theme by ensuring that the optional color config defines\n// a primary, accent and warn palette. Returns the theme if no failures were found.\n@function _mat-validate-theme($theme) {\n  @if map-get($theme, color) {\n    $color: map-get($theme, color);\n    @if not map-get($color, primary) {\n      @error 'Theme does not define a valid \"primary\" palette.';\n    }\n    @else if not map-get($color, accent) {\n      @error 'Theme does not define a valid \"accent\" palette.';\n    }\n    @else if not map-get($color, warn) {\n      @error 'Theme does not define a valid \"warn\" palette.';\n    }\n  }\n  @return $theme;\n}\n\n// Creates a light-themed color configuration from the specified\n// primary, accent and warn palettes.\n@function _mat-create-light-color-config($primary, $accent, $warn: null) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: if($warn != null, $warn, mat-palette($mat-red)),\n    is-dark: false,\n    foreground: $mat-light-theme-foreground,\n    background: $mat-light-theme-background,\n  );\n}\n\n// Creates a dark-themed color configuration from the specified\n// primary, accent and warn palettes.\n@function _mat-create-dark-color-config($primary, $accent, $warn: null) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: if($warn != null, $warn, mat-palette($mat-red)),\n    is-dark: true,\n    foreground: $mat-dark-theme-foreground,\n    background: $mat-dark-theme-background,\n  );\n}\n\n// Creates a container object for a light theme to be given to individual component theme mixins.\n// TODO: Remove legacy API and rename `$primary` to `$config`. Currently it cannot be renamed\n// as it would break existing apps that set the parameter by name.\n@function mat-light-theme($primary, $accent: null, $warn: mat-palette($mat-red)) {\n  // This function creates a container object for the individual component theme mixins. Consumers\n  // can construct such an object by calling this function, or by building the object manually.\n  // There are two possible ways to invoke this function in order to create such an object:\n  //\n  //    (1) Passing in a map that holds optional configurations for individual parts of the\n  //        theming system. For `color` configurations, the function only expects the palettes\n  //        for `primary` and `accent` (and optionally `warn`). The function will expand the\n  //        shorthand into an actual configuration that can be consumed in `-color` mixins.\n  //    (2) Legacy pattern: Passing in the palettes as parameters. This is not as flexible\n  //        as passing in a configuration map because only the `color` system can be configured.\n  //\n  // If the legacy pattern is used, we generate a container object only with a light-themed\n  // configuration for the `color` theming part.\n  @if $accent != null {\n    @return mat-private-create-backwards-compatibility-theme(_mat-validate-theme((\n      _is-legacy-theme: true,\n      color: _mat-create-light-color-config($primary, $accent, $warn),\n    )));\n  }\n  // If the map pattern is used (1), we just pass-through the configurations for individual\n  // parts of the theming system, but update the `color` configuration if set. As explained\n  // above, the color shorthand will be expanded to an actual light-themed color configuration.\n  $result: $primary;\n  @if map-get($primary, color) {\n    $color-settings: map-get($primary, color);\n    $primary: map-get($color-settings, primary);\n    $accent: map-get($color-settings, accent);\n    $warn: map-get($color-settings, warn);\n    $result: map-merge($result, (color: _mat-create-light-color-config($primary, $accent, $warn)));\n  }\n  @return mat-private-create-backwards-compatibility-theme(_mat-validate-theme($result));\n}\n\n// Creates a container object for a dark theme to be given to individual component theme mixins.\n// TODO: Remove legacy API and rename `$primary` to `$config`. Currently it cannot be renamed\n// as it would break existing apps that set the parameter by name.\n@function mat-dark-theme($primary, $accent: null, $warn: mat-palette($mat-red)) {\n  // This function creates a container object for the individual component theme mixins. Consumers\n  // can construct such an object by calling this function, or by building the object manually.\n  // There are two possible ways to invoke this function in order to create such an object:\n  //\n  //    (1) Passing in a map that holds optional configurations for individual parts of the\n  //        theming system. For `color` configurations, the function only expects the palettes\n  //        for `primary` and `accent` (and optionally `warn`). The function will expand the\n  //        shorthand into an actual configuration that can be consumed in `-color` mixins.\n  //    (2) Legacy pattern: Passing in the palettes as parameters. This is not as flexible\n  //        as passing in a configuration map because only the `color` system can be configured.\n  //\n  // If the legacy pattern is used, we generate a container object only with a dark-themed\n  // configuration for the `color` theming part.\n  @if $accent != null {\n    @return mat-private-create-backwards-compatibility-theme(_mat-validate-theme((\n      _is-legacy-theme: true,\n      color: _mat-create-dark-color-config($primary, $accent, $warn),\n    )));\n  }\n  // If the map pattern is used (1), we just pass-through the configurations for individual\n  // parts of the theming system, but update the `color` configuration if set. As explained\n  // above, the color shorthand will be expanded to an actual dark-themed color configuration.\n  $result: $primary;\n  @if map-get($primary, color) {\n    $color-settings: map-get($primary, color);\n    $primary: map-get($color-settings, primary);\n    $accent: map-get($color-settings, accent);\n    $warn: map-get($color-settings, warn);\n    $result: map-merge($result, (color: _mat-create-dark-color-config($primary, $accent, $warn)));\n  }\n  @return mat-private-create-backwards-compatibility-theme(_mat-validate-theme($result));\n}\n\n/// Gets the color configuration from the given theme or configuration.\n@function mat-get-color-config($theme, $default: null) {\n  // If a configuration has been passed, return the config directly.\n  @if not mat-private-is-theme-object($theme) {\n    @return $theme;\n  }\n  // If the theme has been constructed through the legacy theming API, we use the theme object\n  // as color configuration instead of the dedicated `color` property. We do this because for\n  // backwards compatibility, we copied the color configuration from `$theme.color` to `$theme`.\n  // Hence developers could customize the colors at top-level and want to respect these changes\n  // TODO: Remove when legacy theming API is removed.\n  @if mat-private-is-legacy-constructed-theme($theme) {\n    @return $theme;\n  }\n  @if map-has-key($theme, color) {\n    @return map-get($theme, color);\n  }\n  @return $default;\n}\n\n/// Gets the density configuration from the given theme or configuration.\n@function mat-get-density-config($theme-or-config, $default: 0) {\n  // If a configuration has been passed, return the config directly.\n  @if not mat-private-is-theme-object($theme-or-config) {\n    @return $theme-or-config;\n  }\n  // In case a theme has been passed, extract the configuration if present,\n  // or fall back to the default density config.\n  @if map-has-key($theme-or-config, density) {\n    @return map-get($theme-or-config, density);\n  }\n  @return $default;\n}\n\n/// Gets the typography configuration from the given theme or configuration.\n/// For backwards compatibility, typography is not included by default.\n@function mat-get-typography-config($theme-or-config, $default: null) {\n  // If a configuration has been passed, return the config directly.\n  @if not mat-private-is-theme-object($theme-or-config) {\n    @return $theme-or-config;\n  }\n  // In case a theme has been passed, extract the configuration if present,\n  // or fall back to the default typography config.\n  @if (map-has-key($theme-or-config, typography)) {\n    @return map-get($theme-or-config, typography);\n  }\n  @return $default;\n}\n\n\n//\n// Private APIs\n//\n\n// Checks if configurations that have been declared in the given theme have been generated\n// before. If so, warnings will be reported. This should notify developers in case duplicate\n// styles are accidentally generated due to wrong usage of the all-theme mixins.\n//\n// Additionally, this mixin controls the default value for the density configuration. By\n// default, density styles are generated at scale zero. If the same density styles would be\n// generated a second time though, the default value will change to avoid duplicate styles.\n//\n// The mixin keeps track of all configurations in a list that is scoped to the specified\n// id. This is necessary because a given theme can be passed to multiple disjoint theme mixins\n// (e.g. `angular-material-theme` and `angular-material-mdc-theme`) without causing any\n// style duplication.\n@mixin mat-private-check-duplicate-theme-styles($theme-or-color-config, $id) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  $color-config: mat-get-color-config($theme);\n  $density-config: mat-get-density-config($theme);\n  $typography-config: mat-get-typography-config($theme);\n  // Lists of previous `color`, `density` and `typography` configurations.\n  $previous-color: map-get($_mat-theme-emitted-color, $id) or ();\n  $previous-typography: map-get($_mat-theme-emitted-typography, $id) or ();\n  $previous-density: map-get($_mat-theme-emitted-density, $id) or ();\n  // Whether duplicate legacy density styles would be generated.\n  $duplicate-legacy-density: false;\n\n  // Check if the color configuration has been generated before.\n  @if $color-config != null {\n    @if index($previous-color, $color-config) != null and\n        not $mat-theme-ignore-duplication-warnings {\n      @warn 'The same color styles are generated multiple times. ' +\n          $_mat-theme-duplicate-warning;\n    }\n    $previous-color: append($previous-color, $color-config);\n  }\n\n  // Check if the typography configuration has been generated before.\n  @if $typography-config != null {\n    @if index($previous-typography, $typography-config) != null and\n        not $mat-theme-ignore-duplication-warnings {\n      @warn 'The same typography styles are generated multiple times. ' +\n          $_mat-theme-duplicate-warning;\n    }\n    $previous-typography: append($previous-typography, $typography-config);\n  }\n\n  // Check if the density configuration has been generated before.\n  @if $density-config != null {\n    @if index($previous-density, $density-config) != null {\n      // Only report a warning if density styles would be duplicated for non-legacy theme\n      // definitions. For legacy themes, we have compatibility logic that avoids duplication\n      // of default density styles. We don't want to report a warning in those cases.\n      @if mat-private-is-legacy-constructed-theme($theme) {\n        $duplicate-legacy-density: true;\n      }\n      @else if not $mat-theme-ignore-duplication-warnings {\n        @warn 'The same density styles are generated multiple times. ' +\n           $_mat-theme-duplicate-warning;\n      }\n    }\n    $previous-density: append($previous-density, $density-config);\n  }\n\n  $_mat-theme-emitted-color: map-merge(\n      $_mat-theme-emitted-color, ($id: $previous-color)) !global;\n  $_mat-theme-emitted-density: map-merge(\n      $_mat-theme-emitted-density, ($id: $previous-density)) !global;\n  $_mat-theme-emitted-typography: map-merge(\n      $_mat-theme-emitted-typography, ($id: $previous-typography)) !global;\n\n  // Optionally, consumers of this mixin can wrap contents inside so that nested\n  // duplicate style checks do not report another warning. e.g. if developers include\n  // the `angular-material-theme` mixin twice, only the top-level duplicate styles check\n  // should report a warning. Not all individual components should report a warning too.\n  $orig-mat-theme-ignore-duplication-warnings: $mat-theme-ignore-duplication-warnings;\n  $mat-theme-ignore-duplication-warnings: true !global;\n\n  // If duplicate default density styles would be generated for a legacy constructed theme,\n  // we adjust the density generation so that no density styles are generated by default.\n  // If no default density styles have been generated yet, we ensure that the styles\n  // are generated at root. For legacy themes our goal is to generate default density\n  // styles **once** and at root. This matches the old behavior where density styles were\n  // part of the base component styles (that did not use view encapsulation).\n  // TODO: Remove this compatibility logic when the legacy theming API is removed.\n  $mat-private-density-generate-at-root: mat-private-is-legacy-constructed-theme($theme) !global;\n  $mat-private-density-generate-styles: not $duplicate-legacy-density !global;\n\n  @content;\n  $mat-theme-ignore-duplication-warnings: $orig-mat-theme-ignore-duplication-warnings !global;\n\n  $mat-private-density-generate-at-root: false !global;\n  $mat-private-density-generate-styles: true !global;\n}\n\n// Checks whether the given value resolves to a theme object. Theme objects are always\n// of type `map` and can optionally only specify `color`, `density` or `typography`.\n@function mat-private-is-theme-object($value) {\n  @return type-of($value) == 'map' and (\n    map-has-key($value, color) or\n    map-has-key($value, density) or\n    map-has-key($value, typography) or\n    length($value) == 0\n  );\n}\n\n// Checks whether a given value corresponds to a legacy constructed theme.\n@function mat-private-is-legacy-constructed-theme($value) {\n  @return type-of($value) == 'map' and map-get($value, '_is-legacy-theme');\n}\n\n// Creates a backwards compatible theme. Previously in Angular Material, theme objects\n// contained the color configuration directly. With the recent refactoring of the theming\n// system to allow for density and typography configurations, this is no longer the case.\n// To ensure that constructed themes which will be passed to custom theme mixins do not break,\n// we copy the color configuration and put its properties at the top-level of the theme object.\n// Here is an example of a pattern that should still work until it's officially marked as a\n// breaking change:\n//\n//    @mixin my-custom-component-theme($theme) {\n//      .my-comp {\n//        background-color: mat-color(map-get($theme, primary));\n//      }\n//    }\n//\n// Note that the `$theme.primary` key does usually not exist since the color configuration\n// is stored in `$theme.color` which contains a property for `primary`. This method copies\n// the map from `$theme.color` to `$theme` for backwards compatibility.\n@function mat-private-create-backwards-compatibility-theme($theme) {\n  @if not map-get($theme, color) {\n    @return $theme;\n  }\n  $color: map-get($theme, color);\n  @return map-merge($theme, $color);\n}\n\n// Gets the theme from the given value that is either already a theme, or a color configuration.\n// This handles the legacy case where developers pass a color configuration directly to the\n// theme mixin. Before we introduced the new pattern for constructing a theme, developers passed\n// the color configuration directly to the theme mixins. This can be still the case if developers\n// construct a theme manually and pass it to a theme. We support this for backwards compatibility.\n// TODO(devversion): remove this in the future. Constructing themes manually is rare,\n// and the code can be easily updated to the new API.\n@function mat-private-legacy-get-theme($theme-or-color-config) {\n  @if mat-private-is-theme-object($theme-or-color-config) {\n    @return $theme-or-color-config;\n  }\n  @return mat-private-create-backwards-compatibility-theme((\n    _is-legacy-theme: true,\n    color: $theme-or-color-config\n  ));\n}\n\n\n\n$mat-ripple-color-opacity: 0.1;\n\n@mixin mat-ripple() {\n\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n    transform: scale(0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk-high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n\n/* Colors for the ripple elements.*/\n@mixin mat-ripple-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $foreground-base: map-get($foreground, base);\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $mat-ripple-color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $mat-ripple-color-opacity;\n    }\n  }\n}\n\n@mixin mat-ripple-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-ripple') {\n    $color: mat-get-color-config($theme);\n    @if $color != null {\n      @include mat-ripple-color($color);\n    }\n  }\n}\n\n\n// This mixin ensures an element spans to fill the nearest ancestor with defined positioning.\n@mixin mat-fill {\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n}\n\n\n/// Mixin that turns on strong focus indicators.\n///\n/// @example\n///   .my-app {\n///     @include mat-strong-focus-indicators($config);\n///   }\n@mixin mat-strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n    border-style: solid,\n    border-width: 3px,\n    border-radius: 4px,\n  );\n\n  // Merge default config with user config.\n  $config: map-merge($default-config, $config);\n  $border-style: map-get($config, border-style);\n  $border-width: map-get($config, border-width);\n  $border-radius: map-get($config, border-radius);\n\n  // Base styles for focus indicators.\n  .mat-focus-indicator::before {\n    @include mat-fill();\n    box-sizing: border-box;\n    pointer-events: none;\n    border: $border-width $border-style transparent;\n    border-radius: $border-radius;\n  }\n\n  // By default, all focus indicators are flush with the bounding box of their\n  // host element. For particular elements (listed below), default inset/offset\n  // values are necessary to ensure that the focus indicator is sufficiently\n  // contrastive and renders appropriately.\n\n  .mat-focus-indicator.mat-flat-button::before,\n  .mat-focus-indicator.mat-raised-button::before,\n  .mat-focus-indicator.mat-fab::before,\n  .mat-focus-indicator.mat-mini-fab::before,\n  .mat-focus-indicator.mat-chip::before,\n  .mat-focus-indicator.mat-sort-header-container::before {\n    margin: -($border-width + 2px);\n  }\n\n  .mat-focus-indicator.mat-stroked-button::before,\n  .mat-focus-indicator.mat-calendar-body-cell-content::before {\n    margin: -($border-width + 3px);\n  }\n\n  .mat-focus-indicator.mat-tab-link::before,\n  .mat-focus-indicator.mat-tab-label::before {\n    margin: 5px;\n  }\n\n  // Render the focus indicator on focus. Defining a pseudo element's\n  // content will cause it to render.\n\n  // Checkboxes, radios, and slide toggles render focus indicators when the\n  // associated visually-hidden input is focused.\n  .mat-checkbox-input:focus ~ .mat-focus-indicator::before,\n  .mat-radio-input:focus ~ .mat-focus-indicator::before,\n  .mat-slide-toggle-input:focus ~ .mat-slide-toggle-thumb-container .mat-focus-indicator::before,\n\n  // For options, render the focus indicator when the class .mat-active\n  // is present.\n  .mat-focus-indicator.mat-option.mat-active::before,\n\n  // For calendar cells, render the focus indicator when the parent cell is\n  // focused.\n  .mat-calendar-body-cell:focus .mat-focus-indicator::before,\n\n  // For all other components, render the focus indicator on focus.\n  .mat-focus-indicator:focus::before {\n    content: '';\n  }\n}\n\n// Mixin that applies the border color for the focus indicators.\n@mixin _mat-strong-focus-indicators-border-color($color) {\n  .mat-focus-indicator::before {\n    border-color: $color;\n  }\n}\n\n@mixin mat-strong-focus-indicators-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  @include _mat-strong-focus-indicators-border-color(mat-color(map-get($config, primary)));\n}\n\n/// Mixin that sets the color of the focus indicators.\n///\n/// @param {color|map} $theme-or-color\n///   If theme, focus indicators are set to the primary color of the theme. If\n///   color, focus indicators are set to that color.\n///\n/// @example\n///   .demo-dark-theme {\n///     @include mat-strong-focus-indicators-theme($dark-theme-map);\n///   }\n///\n/// @example\n///   .demo-red-theme {\n///     @include mat-strong-focus-indicators-theme(#f00);\n///   }\n/* stylelint-disable-next-line material/theme-mixin-api */\n@mixin mat-strong-focus-indicators-theme($theme-or-color) {\n  @if type-of($theme-or-color) != 'map' {\n    @include _mat-strong-focus-indicators-border-color($theme-or-color);\n  }\n  @else {\n    $theme: mat-private-legacy-get-theme($theme-or-color);\n    @include mat-private-check-duplicate-theme-styles($theme, 'mat-strong-focus-indicators') {\n      $color: mat-get-color-config($theme);\n      @if $color != null {\n        @include mat-strong-focus-indicators-color($color);\n      }\n    }\n  }\n}\n\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\n// pseudo element within is positioned relative to the host. Private mixin included within\n// `mat-core`.\n@mixin mat-private-strong-focus-indicators-positioning() {\n  .mat-focus-indicator {\n    position: relative;\n  }\n}\n\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map-get(map-get($config, $level), $name);\n}\n\n// Gets the font size for a level inside a typography config.\n@function mat-font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n// Gets the line height for a level inside a typography config.\n@function mat-line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n// Gets the font weight for a level inside a typography config.\n@function mat-font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n// Gets the letter spacing for a level inside a typography config.\n@function mat-letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n// Gets the font-family from a typography config and removes the quotes around it.\n@function mat-font-family($config, $level: null) {\n  $font-family: map-get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(type-of($font-family) == string, unquote($font-family), $font-family);\n}\n\n// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n// the individual properties if a value that isn't allowed in the shorthand is passed in.\n@mixin mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes. Note\n    // that we need to use interpolation for `font-size/line-height` in order to prevent\n    // Sass from dividing the two values.\n    font: $font-weight #{$font-size}/#{$line-height} $font-family;\n  }\n}\n\n// Converts a typography level into CSS styles.\n@mixin mat-typography-level-to-styles($config, $level) {\n  $font-size: mat-font-size($config, $level);\n  $font-weight: mat-font-weight($config, $level);\n  $line-height: mat-line-height($config, $level);\n  $font-family: mat-font-family($config, $level);\n\n  @include mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family);\n  letter-spacing: mat-letter-spacing($config, $level);\n}\n\n\n@mixin mat-option-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-option {\n    color: mat-color($foreground, text);\n\n    &:hover:not(.mat-option-disabled),\n    &:focus:not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    &.mat-active {\n      background: mat-color($background, hover);\n      color: mat-color($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: mat-color($foreground, hint-text);\n    }\n  }\n\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($primary, text);\n  }\n\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($accent, text);\n  }\n\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($warn, text);\n  }\n}\n\n@mixin mat-option-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-option {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, subheading-2);\n    }\n  }\n}\n\n@mixin _mat-option-density($config-or-theme) {}\n\n@mixin mat-option-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-option') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-option-color($color);\n    }\n    @if $density != null {\n      @include _mat-option-density($density);\n    }\n    @if $typography != null {\n      @include mat-option-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-optgroup-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n\n  .mat-optgroup-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-optgroup-disabled .mat-optgroup-label {\n    color: mat-color($foreground, hint-text);\n  }\n}\n\n@mixin mat-optgroup-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-optgroup-label {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n}\n\n@mixin _mat-optgroup-density($config-or-theme) {}\n\n@mixin mat-optgroup-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-optgroup') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-optgroup-color($color);\n    }\n    @if $density != null {\n      @include _mat-optgroup-density($density);\n    }\n    @if $typography != null {\n      @include mat-optgroup-typography($typography);\n    }\n  }\n}\n\n\n\n@mixin mat-pseudo-checkbox-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox {\n    color: mat-color(map-get($config, foreground), secondary-text);\n\n    &::after {\n      color: mat-color($background, background);\n    }\n  }\n\n  .mat-pseudo-checkbox-disabled {\n    color: $disabled-color;\n  }\n\n  .mat-primary .mat-pseudo-checkbox-checked,\n  .mat-primary .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($config, primary));\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate,\n  .mat-accent .mat-pseudo-checkbox-checked,\n  .mat-accent .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($config, accent));\n  }\n\n  .mat-warn .mat-pseudo-checkbox-checked,\n  .mat-warn .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($config, warn));\n  }\n\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-disabled {\n      background: $disabled-color;\n    }\n  }\n}\n\n@mixin mat-pseudo-checkbox-typography($config-or-theme) {}\n\n@mixin _mat-pseudo-checkbox-density($config-or-theme) {}\n\n@mixin mat-pseudo-checkbox-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-pseudo-checkbox-color($color);\n    }\n    @if $density != null {\n      @include _mat-pseudo-checkbox-density($density);\n    }\n    @if $typography != null {\n      @include mat-pseudo-checkbox-typography($typography);\n    }\n  }\n}\n\n\n\n// Represents a typography level from the Material design spec.\n@function mat-typography-level(\n  $font-size,\n  $line-height: $font-size,\n  $font-weight: 400,\n  $font-family: null,\n  $letter-spacing: normal) {\n\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight,\n    font-family: $font-family,\n    letter-spacing: $letter-spacing\n  );\n}\n\n// Represents a collection of typography levels.\n// Defaults come from https://material.io/guidelines/style/typography.html\n// Note: The spec doesn't mention letter spacing. The values here come from\n// eyeballing it until it looked exactly like the spec examples.\n@function mat-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     mat-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\n  $display-3:     mat-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\n  $display-2:     mat-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\n  $display-1:     mat-typography-level(34px, 40px, 400),\n  $headline:      mat-typography-level(24px, 32px, 400),\n  $title:         mat-typography-level(20px, 32px, 500),\n  $subheading-2:  mat-typography-level(16px, 28px, 400),\n  $subheading-1:  mat-typography-level(15px, 24px, 400),\n  $body-2:        mat-typography-level(14px, 24px, 500),\n  $body-1:        mat-typography-level(14px, 20px, 400),\n  $caption:       mat-typography-level(12px, 20px, 400),\n  $button:        mat-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         mat-typography-level(inherit, 1.125, 400)\n) {\n\n  // Declare an initial map with all of the levels.\n  $config: (\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\n  @each $key, $level in $config {\n    @if map-get($level, font-family) == null {\n      $new-level: map-merge($level, (font-family: $font-family));\n      $config: map-merge($config, ($key: $new-level));\n    }\n  }\n\n  // Add the base font family to the config.\n  @return map-merge($config, (font-family: $font-family));\n}\n\n// Whether a config is for the Material Design 2018 typography system.\n@function mat-private-typography-is-2018-config($config) {\n  @return map-get($config, headline-1) != null;\n}\n\n// Whether a config is for the Material Design 2014 typography system.\n@function mat-private-typography-is-2014-config($config) {\n  @return map-get($config, headline) != null;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2014 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n@function mat-private-typography-to-2014-config($config) {\n  @if mat-private-typography-is-2018-config($config) {\n    @return mat-typography-config(\n        $display-4: map-get($config, headline-1),\n        $display-3: map-get($config, headline-2),\n        $display-2: map-get($config, headline-3),\n        $display-1: map-get($config, headline-4),\n        $headline: map-get($config, headline-5),\n        $title: map-get($config, headline-6),\n        $subheading-2: map-get($config, subtitle-1),\n        $subheading-1: map-get($config, subtitle-2),\n        $body-2: map-get($config, body-1),\n        $body-1: map-get($config, body-2),\n        $button: map-get($config, button),\n        $caption: map-get($config, caption),\n    );\n  }\n  @return $config;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2018 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n@function mat-private-typography-to-2018-config($config) {\n  @if mat-private-typography-is-2014-config($config) {\n    @return (\n        headline-1: map-get($config, display-4),\n        headline-2: map-get($config, display-3),\n        headline-3: map-get($config, display-2),\n        headline-4: map-get($config, display-1),\n        headline-5: map-get($config, headline),\n        headline-6: map-get($config, title),\n        subtitle-1: map-get($config, subheading-2),\n        subtitle-2: map-get($config, subheading-1),\n        body-1: map-get($config, body-2),\n        body-2: map-get($config, body-1),\n        button: map-get($config, button),\n        caption: map-get($config, caption),\n    );\n  }\n  @return $config;\n}\n\n// Adds the base typography styles, based on a config.\n/* stylelint-disable-next-line material/theme-mixin-api */\n@mixin mat-base-typography($config, $selector: '.mat-typography') {\n  .mat-h1, .mat-headline, #{$selector} h1 {\n    @include mat-typography-level-to-styles($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2, .mat-title, #{$selector} h2 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3, .mat-subheading-2, #{$selector} h3 {\n    @include mat-typography-level-to-styles($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4, .mat-subheading-1, #{$selector} h4 {\n    @include mat-typography-level-to-styles($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5, #{$selector} h5 {\n    @include mat-typography-font-shorthand(\n       // calc is used here to support css variables\n      calc(#{mat-font-size($config, body-1)} * 0.83),\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6, #{$selector} h6 {\n    @include mat-typography-font-shorthand(\n       // calc is used here to support css variables\n      calc(#{mat-font-size($config, body-1)} * 0.67),\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong, .mat-body-2 {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n\n  .mat-body, .mat-body-1, #{$selector} {\n    @include mat-typography-level-to-styles($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small, .mat-caption {\n    @include mat-typography-level-to-styles($config, caption);\n  }\n\n  .mat-display-4, #{$selector} .mat-display-4 {\n    @include mat-typography-level-to-styles($config, display-4);\n    margin: 0 0 56px;\n  }\n\n  .mat-display-3, #{$selector} .mat-display-3 {\n    @include mat-typography-level-to-styles($config, display-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-2, #{$selector} .mat-display-2 {\n    @include mat-typography-level-to-styles($config, display-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-1, #{$selector} .mat-display-1 {\n    @include mat-typography-level-to-styles($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n\n\n\n\n@mixin mat-autocomplete-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n\n  .mat-autocomplete-panel {\n    @include mat-private-theme-overridable-elevation(4, $config);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Selected options in autocompletes should not be gray, but we\n    // only want to override the background for selected options if\n    // they are *not* in hover or focus state. This change has to be\n    // made here because base option styles are shared between the\n    // autocomplete and the select.\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\n      background: mat-color($background, card);\n\n      &:not(.mat-option-disabled) {\n        color: mat-color($foreground, text);\n      }\n    }\n  }\n}\n\n@mixin mat-autocomplete-typography($config-or-theme) {}\n\n@mixin _mat-autocomplete-density($config-or-theme) {}\n\n@mixin mat-autocomplete-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-autocomplete') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-autocomplete-color($color);\n    }\n    @if $density != null {\n      @include _mat-autocomplete-density($density);\n    }\n    @if $typography != null {\n      @include mat-autocomplete-typography($typography);\n    }\n  }\n}\n\n// This contains all of the styles for the badge\n// rather than just the color/theme because of\n// no style sheet support for directives.\n\n\n\n\n\n$mat-badge-font-size: 12px;\n$mat-badge-font-weight: 600;\n$mat-badge-default-size: 22px !default;\n$mat-badge-small-size: $mat-badge-default-size - 6;\n$mat-badge-large-size: $mat-badge-default-size + 6;\n\n// Mixin for building offset given different sizes\n@mixin _mat-badge-size($size) {\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n  }\n\n  &.mat-badge-above {\n    .mat-badge-content {\n      top: -$size / 2;\n    }\n  }\n\n  &.mat-badge-below {\n    .mat-badge-content {\n      bottom: -$size / 2;\n    }\n  }\n\n  &.mat-badge-before {\n    .mat-badge-content {\n      left: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-before {\n    .mat-badge-content {\n      left: auto;\n      right: -$size;\n    }\n  }\n\n  &.mat-badge-after {\n    .mat-badge-content {\n      right: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-after {\n    .mat-badge-content {\n      right: auto;\n      left: -$size;\n    }\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before {\n      .mat-badge-content {\n        left: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-before {\n      .mat-badge-content {\n        left: auto;\n        right: -$size / 2;\n      }\n    }\n\n    &.mat-badge-after {\n      .mat-badge-content {\n        right: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-after {\n      .mat-badge-content {\n        right: auto;\n        left: -$size / 2;\n      }\n    }\n  }\n}\n\n@mixin mat-badge-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $primary: map-get($config, primary);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-badge-content {\n    color: mat-color($primary, default-contrast);\n    background: mat-color($primary);\n\n    @include cdk-high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-accent {\n    .mat-badge-content {\n      background: mat-color($accent);\n      color: mat-color($accent, default-contrast);\n    }\n  }\n\n  .mat-badge-warn {\n    .mat-badge-content {\n      color: mat-color($warn, default-contrast);\n      background: mat-color($warn);\n    }\n  }\n\n  .mat-badge {\n    position: relative;\n  }\n\n  .mat-badge-hidden {\n    .mat-badge-content {\n      display: none;\n    }\n  }\n\n  .mat-badge-disabled {\n    .mat-badge-content {\n      $app-background: mat-color($background, 'background');\n      $badge-color: mat-color($foreground, disabled-button);\n\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\n      // on top of something else, it won't look good if it's opaque. If it is a color *type*,\n      // we convert it into a solid color by taking the opacity from the rgba value and using\n      // the value to determine the percentage of the background to put into foreground when\n      // mixing the colors together.\n      @if (type-of($badge-color) == color and type-of($app-background) == color) {\n        $badge-opacity: opacity($badge-color);\n        background: mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\n      }\n      @else {\n        background: $badge-color;\n      }\n\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _mat-badge-size($mat-badge-small-size);\n  }\n  .mat-badge-medium {\n    @include _mat-badge-size($mat-badge-default-size);\n  }\n  .mat-badge-large {\n    @include _mat-badge-size($mat-badge-large-size);\n  }\n}\n\n@mixin mat-badge-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-badge-content {\n    font-weight: $mat-badge-font-weight;\n    font-size: $mat-badge-font-size;\n    font-family: mat-font-family($config);\n  }\n\n  .mat-badge-small .mat-badge-content {\n    // Set the font size to 75% of the original.\n    font-size: $mat-badge-font-size * 0.75;\n  }\n\n  .mat-badge-large .mat-badge-content {\n    font-size: $mat-badge-font-size * 2;\n  }\n}\n\n@mixin _mat-badge-density($config-or-theme) {}\n\n@mixin mat-badge-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-badge') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-badge-color($color);\n    }\n    @if $density != null {\n      @include _mat-badge-density($density);\n    }\n    @if $typography != null {\n      @include mat-badge-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-bottom-sheet-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-bottom-sheet-container {\n    @include mat-private-theme-elevation(16, $config);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-bottom-sheet-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-bottom-sheet-container {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n@mixin _mat-bottom-sheet-density($config-or-theme) {}\n\n@mixin mat-bottom-sheet-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-bottom-sheet') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-bottom-sheet-color($color);\n    }\n    @if $density != null {\n      @include _mat-bottom-sheet-density($density);\n    }\n    @if $typography != null {\n      @include mat-bottom-sheet-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n$_mat-button-ripple-opacity: 0.1;\n\n// Applies a focus style to an mat-button element for each of the supported palettes.\n@mixin _mat-button-focus-overlay-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: mat-color($primary);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: mat-color($accent);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: mat-color($warn);\n  }\n\n  &.mat-button-disabled .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n// Applies the background color for a ripple. If the value provided is not a Sass color,\n// we assume that we've been given a CSS variable. Since we can't perform alpha-blending\n// on a CSS variable, we instead add the opacity directly to the ripple element.\n@mixin _mat-button-ripple-background($palette, $hue, $opacity) {\n  $background-color: mat-color($palette, $hue, $opacity);\n  background-color: $background-color;\n  @if (type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _mat-button-ripple-color($theme, $hue, $opacity: $_mat-button-ripple-opacity) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    @include _mat-button-ripple-background($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    @include _mat-button-ripple-background($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    @include _mat-button-ripple-background($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an mat-button element for each of the supported palettes.\n@mixin _mat-button-theme-property($theme, $property, $hue) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: mat-color($primary, $hue);\n  }\n  &.mat-accent {\n    #{$property}: mat-color($accent, $hue);\n  }\n  &.mat-warn {\n    #{$property}: mat-color($warn, $hue);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &.mat-button-disabled {\n    &.mat-button-disabled {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: mat-color($palette, disabled-button);\n    }\n  }\n}\n\n@mixin mat-button-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-button, .mat-icon-button, .mat-stroked-button {\n    // Buttons without a background color should inherit the font color. This is necessary to\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\n    // that those buttons are always placed inside of containers with the default background\n    // color of the theme (e.g. themed toolbars).\n    color: inherit;\n    background: transparent;\n\n    @include _mat-button-theme-property($config, 'color', text);\n    @include _mat-button-focus-overlay-color($config);\n\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\n    // are matching with the current theme palette and are in contrast to the background color\n    // (e.g in themed toolbars).\n    .mat-ripple-element {\n      opacity: $_mat-button-ripple-opacity;\n      background-color: currentColor;\n    }\n  }\n\n  .mat-button-focus-overlay {\n    background: map-get($foreground, base);\n  }\n\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\n  // order of the theme styles and the button reset may end up resetting this as well.\n  .mat-stroked-button:not(.mat-button-disabled) {\n    border-color: mat-color($foreground, divider);\n  }\n\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default font and background color when not using any color palette.\n    color: mat-color($foreground, text);\n    background-color: mat-color($background, raised-button);\n\n    @include _mat-button-theme-property($config, 'color', default-contrast);\n    @include _mat-button-theme-property($config, 'background-color', default);\n    @include _mat-button-ripple-color($config, default-contrast);\n  }\n\n  .mat-stroked-button, .mat-flat-button {\n    @include mat-private-theme-overridable-elevation(0, $config);\n  }\n\n  .mat-raised-button {\n    @include mat-private-theme-overridable-elevation(2, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include mat-private-theme-overridable-elevation(8, $config);\n    }\n\n    &.mat-button-disabled {\n      @include mat-private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-fab, .mat-mini-fab {\n    @include mat-private-theme-overridable-elevation(6, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include mat-private-theme-overridable-elevation(12, $config);\n    }\n\n    &.mat-button-disabled {\n      @include mat-private-theme-overridable-elevation(0, $config);\n    }\n  }\n}\n\n@mixin mat-button-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n@mixin _mat-button-density($config-or-theme) {}\n\n@mixin mat-button-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-button') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-button-color($color);\n    }\n    @if $density != null {\n      @include _mat-button-density($density);\n    }\n    @if $typography != null {\n      @include mat-button-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n$mat-button-toggle-standard-height: 48px !default;\n// Minimum height for highest density can vary based on the content that developers\n// project into button-toggle's. We use a minimum of `24px` though because commonly\n// icons or text are displayed. Icons by default have a size of `24px`.\n$mat-button-toggle-standard-minimum-height: 24px !default;\n$mat-button-toggle-standard-maximum-height: $mat-button-toggle-standard-height !default;\n\n$mat-button-toggle-standard-density-config: (\n  height: (\n    default: $mat-button-toggle-standard-height,\n    maximum: $mat-button-toggle-standard-maximum-height,\n    minimum: $mat-button-toggle-standard-minimum-height,\n  )\n) !default;\n\n\n@mixin mat-button-toggle-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $divider-color: mat-color($foreground, divider);\n\n  .mat-button-toggle-standalone,\n  .mat-button-toggle-group {\n    @include mat-private-theme-elevation(2, $config);\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    box-shadow: none;\n  }\n\n  .mat-button-toggle {\n    color: mat-color($foreground, hint-text);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button);\n    }\n  }\n\n  .mat-button-toggle-appearance-standard {\n    color: mat-color($foreground, text);\n    background: mat-color($background, card);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button, 1);\n    }\n  }\n\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: solid 1px $divider-color;\n  }\n\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: none;\n    border-right: solid 1px $divider-color;\n  }\n\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\n    .mat-button-toggle + .mat-button-toggle {\n      border-left: none;\n      border-right: none;\n      border-top: solid 1px $divider-color;\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: mat-color($background, selected-button);\n    color: mat-color($foreground, secondary-text);\n\n    &.mat-button-toggle-appearance-standard {\n      color: mat-color($foreground, text);\n    }\n  }\n\n  .mat-button-toggle-disabled {\n    color: mat-color($foreground, disabled-button);\n    background-color: mat-color($background, disabled-button-toggle);\n\n    &.mat-button-toggle-appearance-standard {\n      background: mat-color($background, card);\n    }\n\n    &.mat-button-toggle-checked {\n      background-color: mat-color($background, selected-disabled-button);\n    }\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    border: solid 1px $divider-color;\n  }\n}\n\n@mixin mat-button-toggle-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-button-toggle {\n    font-family: mat-font-family($config);\n  }\n}\n\n@mixin mat-button-toggle-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $standard-height: mat-private-density-prop-value(\n      $mat-button-toggle-standard-density-config, $density-scale, height);\n\n  @include mat-private-density-legacy-compatibility() {\n    .mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n      line-height: $standard-height;\n    }\n  }\n}\n\n@mixin mat-button-toggle-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-button-toggle') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-button-toggle-color($color);\n    }\n    @if $density != null {\n      @include mat-button-toggle-density($density);\n    }\n    @if $typography != null {\n      @include mat-button-toggle-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-card-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-card {\n    @include mat-private-theme-overridable-elevation(1, $config);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Needs extra specificity to be able to override the elevation selectors.\n    &.mat-card-flat {\n      @include mat-private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-card-subtitle {\n    color: mat-color($foreground, secondary-text);\n  }\n}\n\n@mixin mat-card-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-card {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-card-title {\n    font: {\n      size: mat-font-size($config, headline);\n      weight: mat-font-weight($config, title);\n    }\n  }\n\n  .mat-card-header .mat-card-title {\n    font-size: mat-font-size($config, title);\n  }\n\n  .mat-card-subtitle,\n  .mat-card-content {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin _mat-card-density($config-or-theme) {}\n\n@mixin mat-card-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-card') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-card-color($color);\n    }\n    @if $density != null {\n      @include _mat-card-density($density);\n    }\n    @if $typography != null {\n      @include mat-card-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-checkbox-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: mat-color($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an\n    // attribute on the SVG in order for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: mat-color($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: mat-color($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: mat-color($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked,\n    &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n\n    .mat-checkbox-label {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  // Switch this to a solid color since we're using `opacity`\n  // to control how opaque the ripple should be.\n  .mat-checkbox .mat-ripple-element {\n    background-color: map-get(map-get($config, foreground), base);\n  }\n\n  .mat-checkbox-checked:not(.mat-checkbox-disabled),\n  .mat-checkbox:active:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-ripple-element {\n      background: mat-color($primary);\n    }\n\n    &.mat-accent .mat-ripple-element {\n      background: mat-color($accent);\n    }\n\n    &.mat-warn .mat-ripple-element {\n      background: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-checkbox-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-checkbox {\n    font-family: mat-font-family($config);\n  }\n\n  // TODO(kara): Remove this style when fixing vertical baseline\n  .mat-checkbox-layout .mat-checkbox-label {\n    line-height: mat-line-height($config, body-2);\n  }\n}\n\n@mixin _mat-checkbox-density($config-or-theme) {}\n\n@mixin mat-checkbox-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-checkbox') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-checkbox-color($color);\n    }\n    @if $density != null {\n      @include _mat-checkbox-density($density);\n    }\n    @if $typography != null {\n      @include mat-checkbox-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n$mat-chip-remove-font-size: 18px;\n\n@mixin _mat-chip-element-color($foreground, $background) {\n  background-color: $background;\n  color: $foreground;\n\n  .mat-chip-remove {\n    color: $foreground;\n    opacity: 0.4;\n  }\n}\n\n\n// Applies the background color for a ripple element.\n// If the color value provided is not a Sass color,\n// we assume that we've been given a CSS variable.\n// Since we can't perform alpha-blending on a CSS variable,\n// we instead add the opacity directly to the ripple element.\n@mixin _mat-chips-ripple-background($palette, $default-contrast, $opacity) {\n  $background-color: mat-color($palette, $default-contrast, $opacity);\n  background-color: $background-color;\n  @if (type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _mat-chip-theme-color($palette) {\n  @include _mat-chip-element-color(mat-color($palette, default-contrast), mat-color($palette));\n\n  .mat-ripple-element {\n    @include _mat-chips-ripple-background($palette, default-contrast, 0.1);\n  }\n}\n\n@mixin mat-chips-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  $unselected-background: mat-color($background, unselected-chip);\n  $unselected-foreground: mat-color($foreground, text);\n\n  .mat-chip.mat-standard-chip {\n    @include _mat-chip-element-color($unselected-foreground, $unselected-background);\n\n    &:not(.mat-chip-disabled) {\n      &:active {\n        @include mat-private-theme-elevation(3, $config);\n      }\n\n      .mat-chip-remove:hover {\n        opacity: 0.54;\n      }\n    }\n\n    &.mat-chip-disabled {\n      opacity: 0.4;\n    }\n\n    &::after {\n      background: map-get($foreground, base);\n    }\n  }\n\n  .mat-chip.mat-standard-chip.mat-chip-selected {\n    &.mat-primary {\n      @include _mat-chip-theme-color($primary);\n    }\n\n    &.mat-warn {\n      @include _mat-chip-theme-color($warn);\n    }\n\n    &.mat-accent {\n      @include _mat-chip-theme-color($accent);\n    }\n  }\n}\n\n@mixin mat-chips-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-chip {\n    font-size: mat-font-size($config, body-2);\n    font-weight: mat-font-weight($config, body-2);\n\n    .mat-chip-trailing-icon.mat-icon,\n    .mat-chip-remove.mat-icon {\n      font-size: $mat-chip-remove-font-size;\n    }\n  }\n}\n\n@mixin _mat-chips-density($config-or-theme) {}\n\n@mixin mat-chips-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-chips') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-chips-color($color);\n    }\n    @if $density != null {\n      @include _mat-chips-density($density);\n    }\n    @if $typography != null {\n      @include mat-chips-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-divider-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n\n  .mat-divider {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-divider-vertical {\n    border-right-color: mat-color($foreground, divider);\n  }\n}\n\n@mixin mat-divider-typography($config-or-theme) {}\n\n@mixin _mat-divider-density($config-or-theme) {}\n\n@mixin mat-divider-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-divider') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-divider-color($color);\n    }\n    @if $density != null {\n      @include _mat-divider-density($density);\n    }\n    @if $typography != null {\n      @include mat-divider-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-table-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-table {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\n  mat-header-row, mat-row, mat-footer-row,\n  [mat-header-row], [mat-row], [mat-footer-row],\n  .mat-table-sticky {\n    background: inherit;\n  }\n\n  mat-row, mat-header-row, mat-footer-row,\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n    border-bottom-color: mat-color($foreground, divider);\n  }\n\n  .mat-header-cell {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-table-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-table {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-header-cell {\n    font-size: mat-font-size($config, caption);\n    font-weight: mat-font-weight($config, body-2);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin _mat-table-density($config-or-theme) {}\n\n@mixin mat-table-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-table') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-table-color($color);\n    }\n    @if $density != null {\n      @include _mat-table-density($density);\n    }\n    @if $typography != null {\n      @include mat-table-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n$mat-datepicker-selected-today-box-shadow-width: 1px;\n$mat-datepicker-selected-fade-amount: 0.6;\n$mat-datepicker-range-fade-amount: 0.2;\n$mat-datepicker-today-fade-amount: 0.2;\n$mat-calendar-body-font-size: 13px !default;\n$mat-calendar-weekday-table-font-size: 11px !default;\n\n@mixin _mat-datepicker-color($palette) {\n  @include mat-date-range-colors(\n    mat-color($palette, default, $mat-datepicker-range-fade-amount));\n\n  .mat-calendar-body-selected {\n    background-color: mat-color($palette);\n    color: mat-color($palette, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    $background: mat-color($palette);\n\n    @if (type-of($background) == color) {\n      background-color: fade-out($background, $mat-datepicker-selected-fade-amount);\n    }\n    @else {\n      // If we couldn't resolve to background to a color (e.g. it's a CSS variable),\n      // fall back to fading the content out via `opacity`.\n      opacity: $mat-datepicker-today-fade-amount;\n    }\n  }\n\n  .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 $mat-datepicker-selected-today-box-shadow-width\n                mat-color($palette, default-contrast);\n  }\n\n  .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover,\n  .cdk-keyboard-focused .mat-calendar-body-active,\n  .cdk-program-focused .mat-calendar-body-active {\n    & > .mat-calendar-body-cell-content {\n      @include _mat-datepicker-unselected-cell {\n        background-color: mat-color($palette, 0.3);\n      }\n    }\n  }\n}\n\n// Utility mixin to target cells that aren't selected. Used to make selector easier to follow.\n@mixin _mat-datepicker-unselected-cell {\n  &:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    @content;\n  }\n}\n\n@mixin mat-datepicker-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $disabled-color: mat-color($foreground, disabled-text);\n\n  .mat-calendar-arrow {\n    border-top-color: mat-color($foreground, icon);\n  }\n\n  // The prev/next buttons need a bit more specificity to\n  // avoid being overwritten by the .mat-icon-button.\n  .mat-datepicker-toggle,\n  .mat-datepicker-content .mat-calendar-next-button,\n  .mat-datepicker-content .mat-calendar-previous-button {\n    color: mat-color($foreground, icon);\n  }\n\n  .mat-calendar-table-header {\n    color: mat-color($foreground, hint-text);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: mat-color($foreground, divider);\n  }\n\n  .mat-calendar-body-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content,\n  .mat-date-range-input-separator {\n    color: mat-color($foreground, text);\n    border-color: transparent;\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content {\n    @include _mat-datepicker-unselected-cell {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-form-field-disabled .mat-date-range-input-separator {\n    color: $disabled-color;\n  }\n\n  .mat-calendar-body-in-preview {\n    $divider-color: mat-color($foreground, divider);\n\n    @if type-of($divider-color) == color {\n      // The divider color is set under the assumption that it'll be used\n      // for a solid border, but because we're using a dashed border for the\n      // preview range, we need to bump its opacity to ensure that it's visible.\n      color: rgba($divider-color, min(opacity($divider-color) * 2, 1));\n    }\n    @else {\n      color: $divider-color;\n    }\n  }\n\n  .mat-calendar-body-today {\n    @include _mat-datepicker-unselected-cell {\n      // Note: though it's not text, the border is a hint about the fact that this is today's date,\n      // so we use the hint color.\n      border-color: mat-color($foreground, hint-text);\n    }\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today {\n    @include _mat-datepicker-unselected-cell {\n      $color: mat-color($foreground, hint-text);\n\n      @if (type-of($color) == color) {\n        border-color: fade-out($color, $mat-datepicker-today-fade-amount);\n      }\n      @else {\n        // If the color didn't resolve to a color value, but something like a CSS variable, we can't\n        // fade it out so we fall back to reducing the element opacity. Note that we don't use the\n        // $mat-datepicker-today-fade-amount, because hint text usually has some opacity applied\n        // to it already and we don't want them to stack on top of each other.\n        opacity: 0.5;\n      }\n    }\n  }\n\n  @include _mat-datepicker-color(map-get($config, primary));\n\n  .mat-datepicker-content {\n    @include mat-private-theme-elevation(4, $config);\n    background-color: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    &.mat-accent {\n      @include _mat-datepicker-color(map-get($config, accent));\n    }\n\n    &.mat-warn {\n      @include _mat-datepicker-color(map-get($config, warn));\n    }\n  }\n\n  .mat-datepicker-content-touch {\n    @include mat-private-theme-elevation(0, $config);\n  }\n\n  .mat-datepicker-toggle-active {\n    color: mat-color(map-get($config, primary), text);\n\n    &.mat-accent {\n      color: mat-color(map-get($config, accent), text);\n    }\n\n    &.mat-warn {\n      color: mat-color(map-get($config, warn), text);\n    }\n  }\n\n  .mat-date-range-input-inner[disabled] {\n    color: mat-color($foreground, disabled-text);\n  }\n}\n\n@mixin mat-datepicker-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-calendar {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $mat-calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $mat-calendar-weekday-table-font-size;\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin mat-date-range-colors(\n  $range-color,\n  $comparison-color: rgba(#f9ab00, $mat-datepicker-range-fade-amount),\n  $overlap-color: #a8dab5,\n  $overlap-selected-color: darken($overlap-color, 30%)) {\n\n  .mat-calendar-body-in-range::before {\n    background: $range-color;\n  }\n\n  .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range::before {\n    background: $comparison-color;\n  }\n\n  .mat-calendar-body-comparison-bridge-start::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-end::before {\n    background: linear-gradient(to right, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-comparison-bridge-end::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-start::before {\n    background: linear-gradient(to left, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n    background: $overlap-color;\n  }\n\n  .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n  .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n    background: $overlap-selected-color;\n  }\n}\n\n@mixin _mat-datepicker-density($config-or-theme) {}\n\n@mixin mat-datepicker-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-datepicker') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-datepicker-color($color);\n    }\n    @if $density != null {\n      @include _mat-datepicker-density($density);\n    }\n    @if $typography != null {\n      @include mat-datepicker-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-dialog-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-dialog-container {\n    @include mat-private-theme-elevation(24, $config);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-dialog-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-dialog-title {\n    @include mat-typography-level-to-styles($config, title);\n  }\n}\n\n@mixin _mat-dialog-density($config-or-theme) {}\n\n@mixin mat-dialog-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-dialog') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-dialog-color($color);\n    }\n    @if $density != null {\n      @include _mat-dialog-density($density);\n    }\n    @if $typography != null {\n      @include mat-dialog-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n// Default minimum and maximum height for collapsed panel headers.\n$mat-expansion-panel-header-collapsed-height: 48px !default;\n$mat-expansion-panel-header-collapsed-minimum-height: 36px !default;\n$mat-expansion-panel-header-collapsed-maximum-height:\n    $mat-expansion-panel-header-collapsed-height !default;\n\n// Default minimum and maximum height for expanded panel headers.\n$mat-expansion-panel-header-expanded-height: 64px !default;\n$mat-expansion-panel-header-expanded-minimum-height: 48px !default;\n$mat-expansion-panel-header-expanded-maximum-height:\n    $mat-expansion-panel-header-expanded-height !default;\n\n// Density configuration for the expansion panel. Captures the\n// height for both expanded and collapsed panel headers.\n$mat-expansion-panel-header-density-config: (\n  collapsed-height: (\n    default: $mat-expansion-panel-header-collapsed-height,\n    maximum: $mat-expansion-panel-header-collapsed-maximum-height,\n    minimum: $mat-expansion-panel-header-collapsed-minimum-height,\n  ),\n  expanded-height: (\n    default: $mat-expansion-panel-header-expanded-height,\n    maximum: $mat-expansion-panel-header-expanded-maximum-height,\n    minimum: $mat-expansion-panel-header-expanded-minimum-height,\n  )\n) !default;\n\n// Note: Keep this in sync with the animation timing for the toggle indicator\n// and body expansion. These are animated using Angular animations.\n$mat-expansion-panel-header-transition: 225ms cubic-bezier(0.4, 0, 0.2, 1);\n\n@mixin mat-private-expansion-focus {\n  .mat-expansion-panel {\n    & .mat-expansion-panel-header.cdk-keyboard-focused,\n    & .mat-expansion-panel-header.cdk-program-focused,\n    &:not(.mat-expanded) .mat-expansion-panel-header:hover {\n      &:not([aria-disabled='true']) {\n        @content;\n      }\n    }\n  }\n}\n\n\n@mixin mat-expansion-panel-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-expansion-panel {\n    @include mat-private-theme-overridable-elevation(2, $config);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n  }\n\n  .mat-action-row {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  @include mat-private-expansion-focus {\n    background: mat-color($background, hover);\n  }\n\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\n  // `@media (hover)` above, because the desktop support browser support isn't great.\n  @media (hover: none) {\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n      .mat-expansion-panel-header:hover {\n      background: mat-color($background, card);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description,\n  .mat-expansion-indicator::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-expansion-panel-header[aria-disabled='true'] {\n    color: mat-color($foreground, disabled-button);\n\n    .mat-expansion-panel-header-title,\n    .mat-expansion-panel-header-description {\n      color: inherit;\n    }\n  }\n}\n\n@mixin mat-expansion-panel-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-expansion-panel-header {\n    font: {\n      family: mat-font-family($config, subheading-1);\n      size: mat-font-size($config, subheading-1);\n      weight: mat-font-weight($config, subheading-1);\n    }\n  }\n\n  .mat-expansion-panel-content {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n@mixin mat-expansion-panel-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $expanded-height: mat-private-density-prop-value(\n        $mat-expansion-panel-header-density-config, $density-scale, expanded-height);\n  $collapsed-height: mat-private-density-prop-value(\n      $mat-expansion-panel-header-density-config, $density-scale, collapsed-height);\n\n  @include mat-private-density-legacy-compatibility() {\n    .mat-expansion-panel-header {\n      height: $collapsed-height;\n\n      &.mat-expanded {\n        height: $expanded-height;\n      }\n    }\n  }\n}\n\n@mixin mat-expansion-panel-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-expansion-panel') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-expansion-panel-color($color);\n    }\n    @if $density != null {\n      @include mat-expansion-panel-density($density);\n    }\n    @if $typography != null {\n      @include mat-expansion-panel-typography($typography);\n    }\n  }\n}\n\n\n\n\n// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin mat-truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin mat-line-base($secondary-font-size) {\n  .mat-line {\n    @include mat-truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin mat-normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin mat-line-wrapper-base() {\n  @include mat-normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  flex: auto;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-grid-list-color($config-or-theme) {}\n\n@mixin mat-grid-list-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include mat-line-base(mat-font-size($config, caption));\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin _mat-grid-list-density($config-or-theme) {}\n\n@mixin mat-grid-list-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-grid-list') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-grid-list-color($color);\n    }\n    @if $density != null {\n      @include _mat-grid-list-density($density);\n    }\n    @if $typography != null {\n      @include mat-grid-list-typography($typography);\n    }\n  }\n}\n\n\n\n@mixin mat-icon-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: mat-color($primary, text);\n    }\n\n    &.mat-accent {\n      color: mat-color($accent, text);\n    }\n\n    &.mat-warn {\n      color: mat-color($warn, text);\n    }\n  }\n}\n\n@mixin mat-icon-typography($config-or-theme) {}\n\n@mixin _mat-icon-density($config-or-theme) {}\n\n@mixin mat-icon-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-icon') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-icon-color($color);\n    }\n    @if $density != null {\n      @include _mat-icon-density($density);\n    }\n    @if $typography != null {\n      @include mat-icon-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n// Renders a gradient for showing the dashed line when the input is disabled.\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\n// to match the Material Design spec.\n@mixin mat-private-control-disabled-underline($color) {\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n// Figures out the color of the placeholder for a form control.\n// Used primarily to prevent the various form controls from\n// becoming out of sync since these colors aren't in a palette.\n@function mat-private-control-placeholder-color($config) {\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n  @return mat-color($foreground, secondary-text, if($is-dark-theme, 0.5, 0.42));\n}\n\n\n/* stylelint-disable material/no-prefixes */\n@mixin user-select($value) {\n  -webkit-user-select: $value;\n  -moz-user-select: $value;\n  -ms-user-select: $value;\n  user-select: $value;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin cursor-grab {\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n\n@mixin cursor-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n\n@mixin backface-visibility($value) {\n  -webkit-backface-visibility: $value;\n  backface-visibility: $value;\n}\n\n@mixin position-sticky($important: false) {\n  position: -webkit-sticky #{if($important, '!important', '')};\n  position: sticky #{if($important, '!important', '')};\n}\n/* stylelint-enable */\n\n\n\n@mixin mat-input-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $foreground: map-get($config, foreground);\n\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-input-element:disabled,\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-input-element {\n    caret-color: mat-color($primary, text);\n\n    @include input-placeholder {\n      color: mat-private-control-placeholder-color($config);\n    }\n\n    // On dark themes we set the native `select` color to some shade of white,\n    // however the color propagates to all of the `option` elements, which are\n    // always on a white background inside the dropdown, causing them to blend in.\n    // Since we can't change background of the dropdown, we need to explicitly\n    // reset the color of the options to something dark.\n    @if (map-get($config, is-dark)) {\n      option {\n        color: $dark-primary-text;\n      }\n\n      option:disabled {\n        color: $dark-disabled-text;\n      }\n    }\n  }\n\n  .mat-form-field.mat-accent .mat-input-element {\n    caret-color: mat-color($accent, text);\n  }\n\n  .mat-form-field.mat-warn .mat-input-element,\n  .mat-form-field-invalid .mat-input-element {\n    caret-color: mat-color($warn, text);\n  }\n\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n    color: mat-color($warn, text);\n  }\n}\n\n@mixin mat-input-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\n  input.mat-input-element {\n    margin-top: -$line-spacing * 1em;\n  }\n}\n\n@mixin _mat-input-density($config-or-theme) {}\n\n@mixin mat-input-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-input') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-input-color($color);\n    }\n    @if $density != null {\n      @include _mat-input-density($density);\n    }\n    @if $typography != null {\n      @include mat-input-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-list-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-list-base {\n    .mat-list-item {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-list-option {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-subheader {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  .mat-list-item-disabled {\n    background-color: mat-color($background, disabled-list-option);\n  }\n\n  .mat-list-option,\n  .mat-nav-list .mat-list-item,\n  .mat-action-list .mat-list-item {\n    &:hover, &:focus {\n      background: mat-color($background, 'hover');\n    }\n  }\n\n  .mat-list-single-selected-option {\n    &, &:hover, &:focus {\n      background: mat-color($background, hover, 0.12);\n    }\n  }\n}\n\n@mixin mat-list-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  $font-family: mat-font-family($config);\n\n  .mat-list-item {\n    font-family: $font-family;\n  }\n\n  .mat-list-option {\n    font-family: $font-family;\n  }\n\n  // Default list\n  .mat-list-base {\n    .mat-list-item {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-subheader {\n      font-family: mat-font-family($config, body-2);\n      font-size: mat-font-size($config, body-2);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n\n  // Dense list\n  .mat-list-base[dense] {\n    .mat-list-item {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-subheader {\n      font-family: $font-family;\n      font-size: mat-font-size($config, caption);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _mat-list-density($config-or-theme) {}\n\n@mixin mat-list-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-list') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-list-color($color);\n    }\n    @if $density != null {\n      @include _mat-list-density($density);\n    }\n    @if $typography != null {\n      @include mat-list-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-menu-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-menu-panel {\n    @include mat-private-theme-overridable-elevation(4, $config);\n    background: mat-color($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: mat-color($foreground, 'text');\n\n    &[disabled] {\n      &,\n      &::after,\n      .mat-icon-no-color {\n        color: mat-color($foreground, 'disabled');\n      }\n    }\n  }\n\n  .mat-menu-item .mat-icon-no-color,\n  .mat-menu-item-submenu-trigger::after {\n    color: mat-color($foreground, 'icon');\n  }\n\n  .mat-menu-item:hover,\n  .mat-menu-item.cdk-program-focused,\n  .mat-menu-item.cdk-keyboard-focused,\n  .mat-menu-item-highlighted {\n    &:not([disabled]) {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n\n@mixin mat-menu-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-menu-item {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin _mat-menu-density($config-or-theme) {}\n\n@mixin mat-menu-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-menu') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-menu-color($color);\n    }\n    @if $density != null {\n      @include _mat-menu-density($density);\n    }\n    @if $typography != null {\n      @include mat-menu-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n$mat-paginator-height: 56px !default;\n// Minimum height for paginator's in the highest density is determined based on how\n// much the paginator can shrink until the content exceeds (i.e. navigation buttons).\n$mat-paginator-minimum-height: 40px !default;\n$mat-paginator-maximum-height: $mat-paginator-height !default;\n\n$mat-paginator-density-config: (\n  height: (\n    default: $mat-paginator-height,\n    maximum: $mat-paginator-maximum-height,\n    minimum: $mat-paginator-minimum-height,\n  )\n) !default;\n\n\n@mixin mat-paginator-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n\n  .mat-paginator {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-paginator-decrement,\n  .mat-paginator-increment {\n    border-top: 2px solid mat-color($foreground, 'icon');\n    border-right: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-paginator-first,\n  .mat-paginator-last {\n    border-top: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-icon-button[disabled] {\n    .mat-paginator-decrement,\n    .mat-paginator-increment,\n    .mat-paginator-first,\n    .mat-paginator-last {\n      border-color: mat-color($foreground, 'disabled');\n    }\n  }\n}\n\n@mixin mat-paginator-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    font: {\n      family: mat-font-family($config, caption);\n      size: mat-font-size($config, caption);\n    }\n  }\n}\n\n@mixin mat-paginator-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height: mat-private-density-prop-value($mat-paginator-density-config, $density-scale, height);\n\n  @include mat-private-density-legacy-compatibility() {\n    .mat-paginator-container {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin mat-paginator-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-paginator') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-paginator-color($color);\n    }\n    @if $density != null {\n      @include mat-paginator-density($density);\n    }\n    @if $typography != null {\n      @include mat-paginator-typography($typography);\n    }\n  }\n}\n\n\n\n\n@mixin mat-progress-bar-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-progress-bar-background {\n    fill: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: mat-color($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      fill: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      fill: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-bar-typography($config-or-theme) {}\n\n@mixin _mat-progress-bar-density($config-or-theme) {}\n\n@mixin mat-progress-bar-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-progress-bar') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-progress-bar-color($color);\n    }\n    @if $density != null {\n      @include _mat-progress-bar-density($density);\n    }\n    @if $typography != null {\n      @include mat-progress-bar-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-progress-spinner-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    circle {\n      stroke: mat-color($primary);\n    }\n\n    &.mat-accent circle {\n      stroke: mat-color($accent);\n    }\n\n    &.mat-warn circle {\n      stroke: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-spinner-typography($config-or-theme) {}\n\n@mixin _mat-progress-spinner-density($config-or-theme) {}\n\n@mixin mat-progress-spinner-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-progress-spinner') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-progress-spinner-color($color);\n    }\n    @if $density != null {\n      @include _mat-progress-spinner-density($density);\n    }\n    @if $typography != null {\n      @include mat-progress-spinner-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin _mat-radio-color($palette) {\n  &.mat-radio-checked .mat-radio-outer-circle {\n    border-color: mat-color($palette);\n  }\n\n  .mat-radio-inner-circle,\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n  &.mat-radio-checked .mat-radio-persistent-ripple,\n  &:active .mat-radio-persistent-ripple {\n    background-color: mat-color($palette);\n  }\n}\n\n@mixin mat-radio-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-radio-button {\n    &.mat-primary {\n      @include _mat-radio-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-radio-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-radio-color($warn);\n    }\n\n    // This needs extra specificity, because the classes above are combined\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\n    &.mat-radio-disabled {\n      &.mat-radio-checked .mat-radio-outer-circle,\n      .mat-radio-outer-circle {\n        border-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-ripple .mat-ripple-element,\n      .mat-radio-inner-circle {\n        background-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-label-content {\n        color: mat-color($foreground, disabled);\n      }\n    }\n\n    // Switch this to a solid color since we're using `opacity`\n    // to control how opaque the ripple should be.\n    .mat-ripple-element {\n      background-color: map-get($foreground, base);\n    }\n  }\n}\n\n@mixin mat-radio-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-radio-button {\n    font-family: mat-font-family($config);\n  }\n}\n\n@mixin _mat-radio-density($config-or-theme) {}\n\n@mixin mat-radio-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-radio') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-radio-color($color);\n    }\n    @if $density != null {\n      @include _mat-radio-density($density);\n    }\n    @if $typography != null {\n      @include mat-radio-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-select-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-select-value {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-select-placeholder {\n    color: mat-private-control-placeholder-color($config);\n  }\n\n  .mat-select-disabled .mat-select-value {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-select-arrow {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-select-panel {\n    background: mat-color($background, card);\n    @include mat-private-theme-overridable-elevation(4, $config);\n\n    .mat-option.mat-selected:not(.mat-option-multiple) {\n      background: mat-color($background, hover, 0.12);\n    }\n  }\n\n  .mat-form-field {\n    &.mat-focused {\n      &.mat-primary .mat-select-arrow {\n        color: mat-color($primary, text);\n      }\n\n      &.mat-accent .mat-select-arrow {\n        color: mat-color($accent, text);\n      }\n\n      &.mat-warn .mat-select-arrow {\n        color: mat-color($warn, text);\n      }\n    }\n\n    .mat-select.mat-select-invalid .mat-select-arrow {\n      color: mat-color($warn, text);\n    }\n\n    .mat-select.mat-select-disabled .mat-select-arrow {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin mat-select-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  .mat-select {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-select-trigger {\n    height: $line-height * 1em;\n  }\n}\n\n@mixin _mat-select-density($config-or-theme) {}\n\n@mixin mat-select-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-select') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-select-color($color);\n    }\n    @if $density != null {\n      @include _mat-select-density($density);\n    }\n    @if $typography != null {\n      @include mat-select-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-sidenav-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  $drawer-background-color: mat-color($background, dialog);\n  $drawer-container-background-color:  mat-color($background, background);\n  $drawer-push-background-color: mat-color($background, dialog);\n  $drawer-side-border: solid 1px mat-color($foreground, divider);\n\n  .mat-drawer-container {\n    background-color: $drawer-container-background-color;\n    color: mat-color($foreground, text);\n  }\n\n  .mat-drawer {\n    background-color: $drawer-background-color;\n    color: mat-color($foreground, text);\n\n    &.mat-drawer-push {\n      background-color: $drawer-push-background-color;\n    }\n\n    &:not(.mat-drawer-side) {\n      // The elevation of z-16 is noted in the design specifications.\n      // See https://material.io/design/components/navigation-drawer.html\n      @include mat-private-theme-elevation(16, $config);\n    }\n  }\n\n  .mat-drawer-side {\n    border-right: $drawer-side-border;\n\n    &.mat-drawer-end {\n      border-left: $drawer-side-border;\n      border-right: none;\n    }\n  }\n\n  [dir='rtl'] .mat-drawer-side {\n    border-left: $drawer-side-border;\n    border-right: none;\n\n    &.mat-drawer-end {\n      border-left: none;\n      border-right: $drawer-side-border;\n    }\n  }\n\n  .mat-drawer-backdrop.mat-drawer-shown {\n    $opacity: 0.6;\n    $backdrop-color: mat-color($background, card, $opacity);\n\n    @if (type-of($backdrop-color) == color) {\n      // We use invert() here to have the darken the background color expected to be used. If the\n      // background is light, we use a dark backdrop. If the background is dark,\n      // we use a light backdrop.\n      background-color: invert($backdrop-color);\n    }\n    @else {\n      // If we couldn't resolve the backdrop color to a color value, fall back to using\n      // `opacity` to make it opaque since its end value could be a solid color.\n      background-color: $backdrop-color;\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin mat-sidenav-typography($config-or-theme) {}\n\n@mixin _mat-sidenav-density($config-or-theme) {}\n\n@mixin mat-sidenav-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-sidenav') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-sidenav-color($color);\n    }\n    @if $density != null {\n      @include _mat-sidenav-density($density);\n    }\n    @if $typography != null {\n      @include mat-sidenav-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin _mat-slide-toggle-checked($palette, $thumb-checked-hue) {\n  &.mat-checked {\n    .mat-slide-toggle-thumb {\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      // Opacity is determined from the specs for the selection controls.\n      // See: https://material.io/design/components/selection-controls.html#specs\n      background-color: mat-color($palette, $thumb-checked-hue, 0.54);\n    }\n\n    .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n  }\n}\n\n@mixin mat-slide-toggle-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\n  // information for dark themed switches, we partially keep the old behavior that is based on\n  // the previous specifications. For the checked color we always use the `default` hue because\n  // that follows MDC and also makes it easier for people to create a custom theme without needing\n  // to specify each hue individually.\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: default;\n\n  $bar-unchecked-color: mat-color($foreground, disabled);\n  $ripple-unchecked-color: mat-color($foreground, base);\n\n  .mat-slide-toggle {\n    @include _mat-slide-toggle-checked($accent, $thumb-checked-hue);\n\n    &.mat-primary {\n      @include _mat-slide-toggle-checked($primary, $thumb-checked-hue);\n    }\n\n    &.mat-warn {\n      @include _mat-slide-toggle-checked($warn, $thumb-checked-hue);\n    }\n\n    &:not(.mat-checked) .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: $ripple-unchecked-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    @include mat-private-theme-elevation(1, $config);\n    background-color: mat-color($mat-grey, $thumb-unchecked-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-unchecked-color;\n  }\n}\n\n@mixin mat-slide-toggle-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-slide-toggle-content {\n    font-family: mat-font-family($config);\n  }\n}\n\n@mixin _mat-slide-toggle-density($config-or-theme) {}\n\n@mixin mat-slide-toggle-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-slide-toggle') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-slide-toggle-color($color);\n    }\n    @if $density != null {\n      @include _mat-slide-toggle-density($density);\n    }\n    @if $typography != null {\n      @include mat-slide-toggle-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin _mat-slider-inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: mat-color($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: mat-color($palette, default-contrast);\n  }\n\n  .mat-slider-focus-ring {\n    $opacity: 0.2;\n    $color: mat-color($palette, default, $opacity);\n    background-color: $color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($color) != color) {\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin mat-slider-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  $mat-slider-off-color: mat-color($foreground, slider-off);\n  $mat-slider-off-focused-color: mat-color($foreground, slider-off-active);\n  $mat-slider-disabled-color: mat-color($foreground, slider-off);\n  $mat-slider-labeled-min-value-thumb-color: mat-color($foreground, slider-min);\n  $mat-slider-labeled-min-value-thumb-label-color: mat-color($foreground, slider-off);\n  $mat-slider-tick-opacity: 0.7;\n  $mat-slider-tick-color: mat-color($foreground, base, $mat-slider-tick-opacity);\n  $mat-slider-tick-size: 2px;\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-primary {\n    @include _mat-slider-inner-content-theme($primary);\n  }\n\n  .mat-accent {\n    @include _mat-slider-inner-content-theme($accent);\n  }\n\n  .mat-warn {\n    @include _mat-slider-inner-content-theme($warn);\n  }\n\n  .mat-slider:hover,\n  .cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider-min-value {\n    .mat-slider-focus-ring {\n      $opacity: 0.12;\n      $color: mat-color($foreground, base, $opacity);\n      background-color: $color;\n\n      // `mat-color` uses `rgba` for the opacity which won't work with\n      // CSS variables so we need to use `opacity` as a fallback.\n      @if (type-of($color) != color) {\n        opacity: $opacity;\n      }\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\n    border-color: $mat-slider-tick-color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-horizontal .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n    // Firefox doesn't draw the gradient correctly with 'to right'\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-vertical .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n}\n\n@mixin mat-slider-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-slider-thumb-label-text {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, caption);\n      weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _mat-slider-density($config-or-theme) {}\n\n@mixin mat-slider-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-slider') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-slider-color($color);\n    }\n    @if $density != null {\n      @include _mat-slider-density($density);\n    }\n    @if $typography != null {\n      @include mat-slider-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n$mat-stepper-header-height: 72px !default;\n// Minimum height for highest density stepper's is determined based on how much\n// stepper headers can shrink until the step icon or step label exceed. We can't use\n// a value below `42px` because the optional label for steps would otherwise exceed.\n$mat-stepper-header-minimum-height: 42px !default;\n$mat-stepper-header-maximum-height: $mat-stepper-header-height !default;\n\n$mat-stepper-density-config: (\n  height: (\n    default: $mat-stepper-header-height,\n    maximum: $mat-stepper-header-maximum-height,\n    minimum: $mat-stepper-header-minimum-height,\n  )\n) !default;\n\n// Note: These variables are not denoted with `!default` because they are used in the non-theme\n// component styles. Modifying these variables does not have the desired effect for consumers.\n$mat-stepper-label-header-height: 24px;\n$mat-stepper-label-position-bottom-top-gap: 16px;\n$mat-stepper-label-min-width: 50px;\n\n$mat-vertical-stepper-content-margin: 36px;\n\n$mat-stepper-side-gap: 24px;\n$mat-stepper-line-width: 1px;\n$mat-stepper-line-gap: 8px;\n\n$mat-step-sub-label-font-size: 12px;\n$mat-step-header-icon-size: 16px;\n\n\n@mixin mat-stepper-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-step-header {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused,\n    &:hover {\n      background-color: mat-color($background, hover);\n    }\n\n    // On touch devices the :hover state will linger on the element after a tap.\n    // Reset it via `@media` after the declaration, because the media query isn't\n    // supported by all browsers yet.\n    @media (hover: none) {\n      &:hover {\n        background: none;\n      }\n    }\n\n    .mat-step-label,\n    .mat-step-optional {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      color: mat-color($foreground, secondary-text);\n    }\n\n    .mat-step-icon {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      background-color: mat-color($foreground, secondary-text);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-step-icon-selected,\n    .mat-step-icon-state-done,\n    .mat-step-icon-state-edit {\n      background-color: mat-color($primary);\n      color: mat-color($primary, default-contrast);\n    }\n\n    &.mat-accent {\n      .mat-step-icon {\n        color: mat-color($accent, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: mat-color($accent);\n        color: mat-color($accent, default-contrast);\n      }\n    }\n\n    &.mat-warn {\n      .mat-step-icon {\n        color: mat-color($warn, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: mat-color($warn);\n        color: mat-color($warn, default-contrast);\n      }\n    }\n\n    .mat-step-icon-state-error {\n      background-color: transparent;\n      color: mat-color($warn, text);\n    }\n\n    .mat-step-label.mat-step-label-active {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-step-label.mat-step-label-error {\n      color: mat-color($warn, text);\n    }\n  }\n\n  .mat-stepper-horizontal, .mat-stepper-vertical {\n    background-color: mat-color($background, card);\n  }\n\n  .mat-stepper-vertical-line::before {\n    border-left-color: mat-color($foreground, divider);\n  }\n\n  .mat-horizontal-stepper-header::before,\n  .mat-horizontal-stepper-header::after,\n  .mat-stepper-horizontal-line {\n    border-top-color: mat-color($foreground, divider);\n  }\n}\n\n@mixin mat-stepper-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-stepper-vertical, .mat-stepper-horizontal {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-step-label {\n    font: {\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    };\n  }\n\n  .mat-step-sub-label-error {\n    font-weight: normal;\n  }\n\n  .mat-step-label-error {\n    font-size: mat-font-size($config, body-2);\n  }\n\n  .mat-step-label-selected {\n    font: {\n      size: mat-font-size($config, body-2);\n      weight: mat-font-weight($config, body-2);\n    };\n  }\n}\n\n@mixin mat-stepper-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height: mat-private-density-prop-value($mat-stepper-density-config, $density-scale, height);\n  $vertical-padding: ($height - $mat-stepper-label-header-height) / 2;\n\n  @include mat-private-density-legacy-compatibility() {\n    .mat-horizontal-stepper-header {\n      height: $height;\n    }\n\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n    .mat-vertical-stepper-header {\n      padding: $vertical-padding $mat-stepper-side-gap;\n    }\n\n    // Ensures that the vertical lines for the step content exceed into the step\n    // headers with a given distance (`$mat-stepper-line-gap`) to the step icon.\n    .mat-stepper-vertical-line::before {\n      top: $mat-stepper-line-gap - $vertical-padding;\n      bottom: $mat-stepper-line-gap - $vertical-padding;\n    }\n\n    // Ensures that the horizontal lines for the step header are centered vertically.\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header {\n      &::after, &::before {\n        top: $vertical-padding + $mat-stepper-label-header-height / 2;\n      }\n    }\n\n    // Ensures that the horizontal line for the step content is aligned centered vertically.\n    .mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n      top: $vertical-padding + $mat-stepper-label-header-height / 2;\n    }\n  }\n}\n\n@mixin mat-stepper-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-stepper') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-stepper-color($color);\n    }\n    @if $density != null {\n      @include mat-stepper-density($density);\n    }\n    @if $typography != null {\n      @include mat-stepper-typography($typography);\n    }\n  }\n}\n\n\n\n@mixin mat-sort-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: mat-color($background, 'card');\n    $text-color: mat-color($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-transparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (type-of($table-background) == color and type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin mat-sort-typography($config-or-theme) {}\n\n@mixin _mat-sort-density($config-or-theme) {}\n\n@mixin mat-sort-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-sort') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-sort-color($color);\n    }\n    @if $density != null {\n      @include _mat-sort-density($density);\n    }\n    @if $typography != null {\n      @include mat-sort-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-tabs-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n  $header-border: 1px solid mat-color($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($foreground, text);\n\n    &.mat-tab-disabled {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, text);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, disabled-text);\n  }\n\n  // Remove header border when there is a background color\n  .mat-tab-group[class*='mat-background-'] .mat-tab-header,\n  .mat-tab-nav-bar[class*='mat-background-'] {\n    border-bottom: none;\n    border-top: none;\n  }\n\n  .mat-tab-group, .mat-tab-nav-bar {\n    $theme-colors: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn\n    );\n\n    @each $name, $color in $theme-colors {\n      // Set the foreground color of the tabs\n      &.mat-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-ink-bar($color);\n\n        // Override ink bar when background color is the same\n        &.mat-background-#{$name} {\n          > .mat-tab-header, > .mat-tab-link-container {\n            @include _mat-ink-bar($color, default-contrast);\n          }\n        }\n      }\n    }\n\n    @each $name, $color in $theme-colors {\n      // Set background color of the tabs and override focus color\n      &.mat-background-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-tabs-background($color);\n      }\n    }\n  }\n}\n\n@mixin _mat-ink-bar($color, $hue: default) {\n  .mat-ink-bar {\n    background-color: mat-color($color, $hue);\n  }\n}\n\n@mixin _mat-tab-label-focus($tab-focus-color) {\n  .mat-tab-label,\n  .mat-tab-link {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n      &:not(.mat-tab-disabled) {\n        background-color: mat-color($tab-focus-color, lighter, 0.3);\n      }\n    }\n  }\n}\n\n@mixin _mat-tabs-background($background-color) {\n  // Note that these selectors target direct descendants so\n  // that the styles don't apply to any nested tab groups.\n\n  // Set background color for the tab group\n  > .mat-tab-header, > .mat-tab-link-container, > .mat-tab-header-pagination {\n    background-color: mat-color($background-color);\n  }\n\n  // Set labels to contrast against background\n  > .mat-tab-header .mat-tab-label, > .mat-tab-link-container .mat-tab-link {\n    color: mat-color($background-color, default-contrast);\n\n    &.mat-tab-disabled {\n      color: mat-color($background-color, default-contrast, 0.4);\n    }\n  }\n\n  // Set pagination chevrons to contrast background\n  > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n  > .mat-tab-links .mat-focus-indicator::before,\n  > .mat-tab-header .mat-focus-indicator::before {\n    border-color: mat-color($background-color, default-contrast);\n  }\n\n  > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast, 0.4);\n  }\n\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\n  // color will be based on the app background color.\n  > .mat-tab-header .mat-ripple-element,\n  > .mat-tab-link-container .mat-ripple-element {\n    background-color: mat-color($background-color, default-contrast, 0.12);\n  }\n}\n\n@mixin mat-tabs-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-tab-group {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n@mixin _mat-tabs-density($config-or-theme) {}\n\n@mixin mat-tabs-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-tabs') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-tabs-color($color);\n    }\n    @if $density != null {\n      @include _mat-tabs-density($density);\n    }\n    @if $typography != null {\n      @include mat-tabs-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n// Minimum height for toolbar's in the highest density is difficult to determine because\n// developers can project arbitrary content. We use a minimum value that ensures that most\n// common content (e.g. icon buttons) does not exceed the row boundaries in highest density.\n$mat-toolbar-minimum-height: 44px !default;\n\n$mat-toolbar-height-desktop: 64px !default;\n$mat-toolbar-maximum-height-desktop: $mat-toolbar-height-desktop !default;\n$mat-toolbar-minimum-height-desktop: $mat-toolbar-minimum-height !default;\n\n$mat-toolbar-height-mobile: 56px !default;\n$mat-toolbar-maximum-height-mobile: $mat-toolbar-height-mobile !default;\n$mat-toolbar-minimum-height-mobile: $mat-toolbar-minimum-height !default;\n\n$mat-toolbar-desktop-density-config: (\n  height: (\n    default: $mat-toolbar-height-desktop,\n    maximum: $mat-toolbar-maximum-height-desktop,\n    minimum: $mat-toolbar-minimum-height-desktop,\n  )\n) !default;\n\n$mat-toolbar-mobile-density-config: (\n  height: (\n    default: $mat-toolbar-height-mobile,\n    maximum: $mat-toolbar-maximum-height-mobile,\n    minimum: $mat-toolbar-minimum-height-mobile,\n  )\n) !default;\n\n\n@mixin _mat-toolbar-height($height) {\n  .mat-toolbar-multiple-rows {\n    min-height: $height;\n  }\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: $height;\n  }\n}\n\n@mixin _mat-toolbar-color($palette) {\n  background: mat-color($palette);\n  color: mat-color($palette, default-contrast);\n}\n\n@mixin _mat-toolbar-form-field-overrides {\n  .mat-form-field-underline,\n  .mat-form-field-ripple,\n  .mat-focused .mat-form-field-ripple {\n    background-color: currentColor;\n  }\n\n  .mat-form-field-label,\n  .mat-focused .mat-form-field-label,\n  .mat-select-value,\n  .mat-select-arrow,\n  .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit;\n  }\n\n  .mat-input-element {\n    caret-color: currentColor;\n  }\n}\n\n@mixin mat-toolbar-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-toolbar {\n    background: mat-color($background, app-bar);\n    color: mat-color($foreground, text);\n\n    &.mat-primary {\n      @include _mat-toolbar-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-toolbar-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-toolbar-color($warn);\n    }\n\n    @include _mat-toolbar-form-field-overrides;\n  }\n}\n\n@mixin mat-toolbar-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0;\n  }\n}\n\n@mixin mat-toolbar-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height-desktop: mat-private-density-prop-value(\n      $mat-toolbar-desktop-density-config, $density-scale, height);\n  $height-mobile: mat-private-density-prop-value(\n      $mat-toolbar-mobile-density-config, $density-scale, height);\n\n  @include mat-private-density-legacy-compatibility() {\n    // Set the default height for the toolbar.\n    @include _mat-toolbar-height($height-desktop);\n\n    // As per specs, toolbars should have a different height in mobile devices. This has been\n    // specified in the old guidelines and is still observable in the new specifications by\n    // looking at the spec images. See: https://material.io/design/components/app-bars-top.html#anatomy\n    @media ($mat-xsmall) {\n      @include _mat-toolbar-height($height-mobile);\n    }\n  }\n}\n\n@mixin mat-toolbar-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-toolbar') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-toolbar-color($color);\n    }\n    @if $density != null {\n      @include mat-toolbar-density($density);\n    }\n    @if $typography != null {\n      @include mat-toolbar-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n$mat-tooltip-target-height: 22px;\n$mat-tooltip-font-size: 10px;\n$mat-tooltip-vertical-padding: ($mat-tooltip-target-height - $mat-tooltip-font-size) / 2;\n\n$mat-tooltip-handset-target-height: 30px;\n$mat-tooltip-handset-font-size: 14px;\n$mat-tooltip-handset-vertical-padding:\n    ($mat-tooltip-handset-target-height - $mat-tooltip-handset-font-size) / 2;\n\n@mixin mat-tooltip-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n\n  .mat-tooltip {\n    background: mat-color($background, tooltip, 0.9);\n  }\n}\n\n@mixin mat-tooltip-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-tooltip {\n    font-family: mat-font-family($config);\n    font-size: $mat-tooltip-font-size;\n    padding-top: $mat-tooltip-vertical-padding;\n    padding-bottom: $mat-tooltip-vertical-padding;\n  }\n\n  .mat-tooltip-handset {\n    font-size: $mat-tooltip-handset-font-size;\n    padding-top: $mat-tooltip-handset-vertical-padding;\n    padding-bottom: $mat-tooltip-handset-vertical-padding;\n  }\n}\n\n@mixin _mat-tooltip-density($config-or-theme) {}\n\n@mixin mat-tooltip-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-tooltip') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-tooltip-color($color);\n    }\n    @if $density != null {\n      @include _mat-tooltip-density($density);\n    }\n    @if $typography != null {\n      @include mat-tooltip-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-snack-bar-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $accent: map-get($config, accent);\n\n  .mat-snack-bar-container {\n    // Use the primary text on the dark theme, even though the lighter one uses\n    // a secondary, because the contrast on the light primary text is poor.\n    color: if($is-dark-theme, $dark-primary-text, $light-secondary-text);\n    background: if($is-dark-theme, map-get($mat-grey, 50), #323232);\n\n    @include mat-private-theme-elevation(6, $config);\n  }\n\n  .mat-simple-snackbar-action {\n    color: if($is-dark-theme, inherit, mat-color($accent, text));\n  }\n}\n\n@mixin mat-snack-bar-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-simple-snackbar {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n    }\n  }\n\n  .mat-simple-snackbar-action {\n    line-height: 1;\n    font: {\n      family: inherit;\n      size: inherit;\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n@mixin _mat-snack-bar-density($config-or-theme) {}\n\n@mixin mat-snack-bar-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-snack-bar') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-snack-bar-color($color);\n    }\n    @if $density != null {\n      @include _mat-snack-bar-density($density);\n    }\n    @if $typography != null {\n      @include mat-snack-bar-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the fill appearance of the form-field.\n\n@mixin mat-form-field-fill-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $fill-background: mat-color($foreground, base, if($is-dark-theme, 0.1, 0.04));\n  $fill-disabled-background: mat-color($foreground, base, if($is-dark-theme, 0.05, 0.02));\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.5, 0.42));\n  $label-disabled-color: mat-color($foreground, disabled-text);\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-flex {\n      background-color: $fill-background;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-flex {\n      background-color: $fill-disabled-background;\n    }\n\n    .mat-form-field-underline::before {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-underline::before {\n        background-color: transparent;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-fill-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-fill-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-fill-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-fill-dedupe;\n\n  $mat-form-field-fill-dedupe: $mat-form-field-fill-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-fill-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding on top of the infix.\n  $infix-padding-top: 0.25em;\n  // The padding below the infix.\n  $infix-padding-bottom: 0.75em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The amount we offset the label from the input text in the fill appearance.\n  $fill-appearance-label-offset: -0.5em;\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-infix {\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding-top;\n      margin-top: $fill-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n@mixin mat-private-form-field-fill-density($config-or-theme) {}\n\n@mixin mat-form-field-fill-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-form-field-fill') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-fill-color($color);\n    }\n    @if $density != null {\n      @include mat-private-form-field-fill-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-fill-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the legacy appearance of the form-field.\n\n@mixin mat-form-field-legacy-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $label-color: mat-color($foreground, secondary-text);\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-label {\n      color: $label-color;\n    }\n\n    .mat-hint {\n      color: $label-color;\n    }\n\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-private-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-legacy-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-legacy-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  // We use perspective to fix the text blurriness as described here:\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\n  translateZ(0.001px + $mat-form-field-legacy-dedupe);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  -ms-transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n\n  width: 100% / $font-scale + $mat-form-field-legacy-dedupe;\n\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n// Same as mixin above, but omits the translateZ for printing purposes.\n@mixin _mat-form-field-legacy-label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-legacy-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\n  $infix-padding: 0.5em - $line-spacing;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\n  // text, not the  edge of the line.\n  $subscript-margin-top: 0.5em / $subscript-font-scale - ($line-spacing * 2);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-wrapper {\n      padding-bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-infix {\n      padding: $infix-padding 0;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n    }\n\n    .mat-form-field-underline {\n      // We want the underline to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount.\n      bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-subscript-wrapper {\n      margin-top: $subscript-margin-top;\n\n      // We want the subscript to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount (adjusted for the smaller font size);\n      top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n    }\n  }\n\n  // translateZ causes the label to not appear while printing, so we override it to not\n  // apply translateZ while printing\n  @media print {\n    .mat-form-field-appearance-legacy {\n      &.mat-form-field-can-float {\n        &.mat-form-field-should-float .mat-form-field-label,\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // Server-side rendered matInput with a label attribute but label not shown\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\n        .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n      }\n    }\n  }\n}\n\n@mixin mat-private-form-field-legacy-density($config-or-theme) {}\n\n@mixin mat-form-field-legacy-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-form-field-legacy') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-legacy-color($color);\n    }\n    @if $density != null {\n      @include mat-private-form-field-legacy-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-legacy-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the outline appearance of the form-field.\n\n@mixin mat-form-field-outline-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $label-disabled-color: mat-color($foreground, disabled-text);\n  $outline-color: mat-color($foreground, divider, if($is-dark-theme, 0.3, 0.12));\n  $outline-color-hover: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $outline-color-primary: mat-color($primary);\n  $outline-color-accent: mat-color($accent);\n  $outline-color-warn: mat-color($warn);\n  $outline-color-disabled: mat-color($foreground, divider, if($is-dark-theme, 0.15, 0.06));\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-outline {\n      color: $outline-color;\n    }\n\n    .mat-form-field-outline-thick {\n      color: $outline-color-hover;\n    }\n\n    &.mat-focused {\n      .mat-form-field-outline-thick {\n        color: $outline-color-primary;\n      }\n\n      &.mat-accent .mat-form-field-outline-thick {\n        color: $outline-color-accent;\n      }\n\n      &.mat-warn .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    // Class repeated so that rule is specific enough to override focused accent color case.\n    &.mat-form-field-invalid.mat-form-field-invalid {\n      .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-outline {\n        color: $outline-color-disabled;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-outline-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-outline-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-outline-dedupe)\n  scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-outline-dedupe;\n\n  $mat-form-field-outline-dedupe: $mat-form-field-outline-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-outline-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding above and below the infix.\n  $infix-padding: 1em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n  // The amount we offset the label from the input text in the outline appearance.\n  $outline-appearance-label-offset: -0.25em;\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-infix {\n      padding: $infix-padding 0 $infix-padding 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n      margin-top: $outline-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n@mixin mat-private-form-field-outline-density($config-or-theme) {}\n\n@mixin mat-form-field-outline-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-form-field-outline') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-outline-color($color);\n    }\n    @if $density != null {\n      @include mat-private-form-field-outline-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-outline-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the standard appearance of the form-field.\n\n@mixin mat-form-field-standard-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-standard {\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-private-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n@mixin mat-form-field-standard-typography($config-or-theme) {}\n\n@mixin mat-private-form-field-standard-density($config-or-theme) {}\n\n@mixin mat-form-field-standard-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-form-field-standard') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-standard-color($color);\n    }\n    @if $density != null {\n      @include mat-private-form-field-standard-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-standard-typography($typography);\n    }\n  }\n}\n\n\n// Color styles that apply to all appearances of the form-field.\n@mixin mat-form-field-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  // Label colors. Required is used for the `*` star shown in the label.\n  $label-color: mat-color($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\n  $focused-label-color: mat-color($primary, text);\n  $required-label-color: mat-color($accent, text);\n\n  // Underline colors.\n  $underline-color-base: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $underline-color-accent: mat-color($accent, text);\n  $underline-color-warn: mat-color($warn, text);\n  $underline-focused-color: mat-color($primary, text);\n\n  .mat-form-field-label {\n    color: $label-color;\n  }\n\n  .mat-hint {\n    color: $label-color;\n  }\n\n  .mat-form-field.mat-focused .mat-form-field-label {\n    color: $focused-label-color;\n\n    &.mat-accent {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $underline-color-warn;\n    }\n  }\n\n  .mat-focused .mat-form-field-required-marker {\n    color: $required-label-color;\n  }\n\n  .mat-form-field-ripple {\n    background-color: $underline-color-base;\n  }\n\n  .mat-form-field.mat-focused {\n    .mat-form-field-ripple {\n      background-color: $underline-focused-color;\n\n      &.mat-accent {\n        background-color: $underline-color-accent;\n      }\n\n      &.mat-warn {\n        background-color: $underline-color-warn;\n      }\n    }\n  }\n\n  .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) {\n    .mat-form-field-infix::after {\n      color: $underline-focused-color;\n    }\n\n    &.mat-accent .mat-form-field-infix::after {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn .mat-form-field-infix::after {\n      color: $underline-color-warn;\n    }\n  }\n\n  // Styling for the error state of the form field. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-form-field.mat-form-field-invalid {\n    .mat-form-field-label {\n      color: $underline-color-warn;\n\n      &.mat-accent,\n      .mat-form-field-required-marker {\n        color: $underline-color-warn;\n      }\n    }\n\n    .mat-form-field-ripple,\n    .mat-form-field-ripple.mat-accent {\n      background-color: $underline-color-warn;\n    }\n  }\n\n  .mat-error {\n    color: $underline-color-warn;\n  }\n\n  @include mat-form-field-legacy-color($config);\n  @include mat-form-field-standard-color($config);\n  @include mat-form-field-fill-color($config);\n  @include mat-form-field-outline-color($config);\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-dedupe;\n\n  $mat-form-field-dedupe: $mat-form-field-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount to scale the font for the prefix and suffix icons.\n  $prefix-suffix-icon-font-scale: 1.5;\n\n  // The padding on the infix. Mocks show half of the text size.\n  $infix-padding: 0.5em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // Font size to use for the label and subscript text.\n  $subscript-font-size: $subscript-font-scale * 100%;\n  // Font size to use for the for the prefix and suffix icons.\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field {\n    @include mat-typography-level-to-styles($config, input);\n  }\n\n  .mat-form-field-wrapper {\n    padding-bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    // Allow icons in a prefix or suffix to adapt to the correct size.\n    .mat-icon {\n      font-size: $prefix-suffix-icon-font-size;\n      line-height: $line-height;\n    }\n\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\n    .mat-icon-button {\n      height: $prefix-suffix-icon-font-scale * 1em;\n      width: $prefix-suffix-icon-font-scale * 1em;\n\n      .mat-icon {\n        height: $line-height * 1em;\n        line-height: $line-height;\n      }\n    }\n  }\n\n  .mat-form-field-infix {\n    padding: $infix-padding 0;\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\n    border-top: $infix-margin-top solid transparent;\n  }\n\n  .mat-form-field-can-float {\n    &.mat-form-field-should-float .mat-form-field-label,\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n\n    // Server-side rendered matInput with a label attribute but label not shown\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\n    .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-form-field-label-wrapper {\n    top: -$infix-margin-top;\n    padding-top: $infix-margin-top;\n  }\n\n  .mat-form-field-label {\n    top: $infix-margin-top + $infix-padding;\n  }\n\n  .mat-form-field-underline {\n    // We want the underline to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount.\n    bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-subscript-wrapper {\n    font-size: $subscript-font-size;\n    margin-top: $subscript-margin-top;\n\n    // We want the subscript to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount (adjusted for the smaller font size);\n    top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n  }\n\n  @include mat-form-field-legacy-typography($config);\n  @include mat-form-field-standard-typography($config);\n  @include mat-form-field-fill-typography($config);\n  @include mat-form-field-outline-typography($config);\n}\n\n@mixin mat-form-field-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  @include mat-private-form-field-legacy-density($density-scale);\n  @include mat-private-form-field-standard-density($density-scale);\n  @include mat-private-form-field-fill-density($density-scale);\n  @include mat-private-form-field-outline-density($density-scale);\n}\n\n@mixin mat-form-field-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-form-field') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-color($color);\n    }\n    @if $density != null {\n      @include mat-form-field-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n$mat-tree-node-height: 48px !default;\n// Minimum height for tree nodes in highest density is difficult to determine as\n// developers can display arbitrary content. We use a minimum height which ensures\n// that common content placed in tree nodes does not exceed (e.g. icons, checkboxes).\n$mat-tree-node-minimum-height: 24px !default;\n$mat-tree-node-maximum-height: $mat-tree-node-height !default;\n\n$mat-tree-density-config: (\n  height: (\n    default: $mat-tree-node-height,\n    maximum: $mat-tree-node-maximum-height,\n    minimum: $mat-tree-node-minimum-height,\n  )\n) !default;\n\n\n@mixin mat-tree-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-tree {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-tree-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-tree {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: mat-font-weight($config, body-1);\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin mat-tree-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height: mat-private-density-prop-value($mat-tree-density-config, $density-scale, height);\n\n  @include mat-private-density-legacy-compatibility() {\n    .mat-tree-node {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin mat-tree-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-tree') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-tree-color($color);\n    }\n    @if $density != null {\n      @include mat-tree-density($density);\n    }\n    @if $typography != null {\n      @include mat-tree-typography($typography);\n    }\n  }\n}\n\n\n\n\n// Includes all of the typographic styles.\n@mixin angular-material-typography($config-or-theme: null) {\n  $config: if(mat-private-is-theme-object($config-or-theme),\n      mat-get-typography-config($config-or-theme), $config-or-theme);\n\n  // If no actual color configuration has been specified, create a default one.\n  @if not $config {\n    $config: mat-typography-config();\n  }\n\n  // TODO: COMP-309: Do not use individual mixins. Instead, use the all-theme mixin and only\n  // specify a `typography` config while setting `color` and `density` to `null`. This is currently\n  // not possible as it would introduce a circular dependency for typography because the `mat-core`\n  // mixin that is transitively loaded by the `all-theme` file, imports `all-typography` which\n  // would then load `all-theme` again. This ultimately results a circular dependency.\n\n  @include mat-badge-typography($config);\n  @include mat-base-typography($config);\n  @include mat-autocomplete-typography($config);\n  @include mat-bottom-sheet-typography($config);\n  @include mat-button-typography($config);\n  @include mat-button-toggle-typography($config);\n  @include mat-card-typography($config);\n  @include mat-checkbox-typography($config);\n  @include mat-chips-typography($config);\n  @include mat-divider-typography($config);\n  @include mat-table-typography($config);\n  @include mat-datepicker-typography($config);\n  @include mat-dialog-typography($config);\n  @include mat-expansion-panel-typography($config);\n  @include mat-form-field-typography($config);\n  @include mat-grid-list-typography($config);\n  @include mat-icon-typography($config);\n  @include mat-input-typography($config);\n  @include mat-menu-typography($config);\n  @include mat-paginator-typography($config);\n  @include mat-progress-bar-typography($config);\n  @include mat-progress-spinner-typography($config);\n  @include mat-radio-typography($config);\n  @include mat-select-typography($config);\n  @include mat-sidenav-typography($config);\n  @include mat-slide-toggle-typography($config);\n  @include mat-slider-typography($config);\n  @include mat-stepper-typography($config);\n  @include mat-sort-typography($config);\n  @include mat-tabs-typography($config);\n  @include mat-toolbar-typography($config);\n  @include mat-tooltip-typography($config);\n  @include mat-list-typography($config);\n  @include mat-option-typography($config);\n  @include mat-optgroup-typography($config);\n  @include mat-snack-bar-typography($config);\n  @include mat-tree-typography($config);\n}\n\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin mat-core($typography-config: null) {\n  @include angular-material-typography($typography-config);\n  @include mat-ripple();\n  @include cdk-a11y();\n  @include cdk-overlay();\n  @include cdk-text-field();\n\n  @include mat-private-strong-focus-indicators-positioning();\n  @include _mat-mdc-core();\n}\n\n@mixin mat-core-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map-get($config, background);\n    $foreground: map-get($config, foreground);\n\n    background-color: mat-color($background, background);\n    color: mat-color($foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .#{$mat-elevation-prefix}#{$zValue} {\n      @include mat-private-theme-elevation($zValue, $config);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin mat-core-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-core') {\n    @include mat-ripple-theme($theme);\n    @include mat-option-theme($theme);\n    @include mat-optgroup-theme($theme);\n    @include mat-pseudo-checkbox-theme($theme);\n\n    $color: mat-get-color-config($theme);\n    @if $color != null {\n      @include mat-core-color($color);\n    }\n  }\n}\n\n// Mixin that renders all of the core MDC styles. Private mixin included with `mat-core`.\n@mixin _mat-mdc-core() {\n  @include _mat-mdc-strong-focus-indicators-positioning();\n}\n\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\n// pseudo element within is positioned relative to the host. Private mixin included within\n// `_mat-mdc-core`.\n@mixin _mat-mdc-strong-focus-indicators-positioning() {\n  .mat-mdc-focus-indicator {\n    position: relative;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Create a theme.\n@mixin angular-material-theme($theme-or-color-config) {\n  $dedupe-key: 'angular-material-theme';\n  @include mat-private-check-duplicate-theme-styles($theme-or-color-config, $dedupe-key) {\n    @include mat-core-theme($theme-or-color-config);\n    @include mat-autocomplete-theme($theme-or-color-config);\n    @include mat-badge-theme($theme-or-color-config);\n    @include mat-bottom-sheet-theme($theme-or-color-config);\n    @include mat-button-theme($theme-or-color-config);\n    @include mat-button-toggle-theme($theme-or-color-config);\n    @include mat-card-theme($theme-or-color-config);\n    @include mat-checkbox-theme($theme-or-color-config);\n    @include mat-chips-theme($theme-or-color-config);\n    @include mat-table-theme($theme-or-color-config);\n    @include mat-datepicker-theme($theme-or-color-config);\n    @include mat-dialog-theme($theme-or-color-config);\n    @include mat-divider-theme($theme-or-color-config);\n    @include mat-expansion-panel-theme($theme-or-color-config);\n    @include mat-form-field-theme($theme-or-color-config);\n    @include mat-grid-list-theme($theme-or-color-config);\n    @include mat-icon-theme($theme-or-color-config);\n    @include mat-input-theme($theme-or-color-config);\n    @include mat-list-theme($theme-or-color-config);\n    @include mat-menu-theme($theme-or-color-config);\n    @include mat-paginator-theme($theme-or-color-config);\n    @include mat-progress-bar-theme($theme-or-color-config);\n    @include mat-progress-spinner-theme($theme-or-color-config);\n    @include mat-radio-theme($theme-or-color-config);\n    @include mat-select-theme($theme-or-color-config);\n    @include mat-sidenav-theme($theme-or-color-config);\n    @include mat-slide-toggle-theme($theme-or-color-config);\n    @include mat-slider-theme($theme-or-color-config);\n    @include mat-stepper-theme($theme-or-color-config);\n    @include mat-sort-theme($theme-or-color-config);\n    @include mat-tabs-theme($theme-or-color-config);\n    @include mat-toolbar-theme($theme-or-color-config);\n    @include mat-tooltip-theme($theme-or-color-config);\n    @include mat-tree-theme($theme-or-color-config);\n    @include mat-snack-bar-theme($theme-or-color-config);\n  }\n}\n\n\n\n// Includes all of the color styles.\n@mixin angular-material-color($config-or-theme) {\n  // In case a theme object has been passed instead of a configuration for\n  // the color system, extract the color config from the theme object.\n  $config: if(mat-private-is-theme-object($config-or-theme),\n      mat-get-color-config($config-or-theme), $config-or-theme);\n\n  @if $config == null {\n    @error 'No color configuration specified.';\n  }\n\n  @include angular-material-theme((\n    color: $config,\n    typography: null,\n    density: null,\n  ));\n}\n\n\n\n\n\n\n\n\n\n\n// Includes all of the density styles.\n@mixin angular-material-density($config-or-theme) {\n  // In case a theme object has been passed instead of a configuration for\n  // the density system, extract the density config from the theme object.\n  $config: if(mat-private-is-theme-object($config-or-theme),\n      mat-get-density-config($config-or-theme), $config-or-theme);\n\n  @if $config == null {\n    @error 'No density configuration specified.';\n  }\n\n  // TODO: COMP-309: Do not use individual mixins. Instead, use the all-theme mixin and only\n  // specify a `density` config while setting `color` and `typography` to `null`. This is currently\n  // not possible as it would introduce a circular dependency for density because the `mat-core`\n  // mixin that is transitively loaded by the `all-theme` file, imports `all-density` which\n  // would then load `all-theme` again. This ultimately results a circular dependency.\n\n  @include mat-expansion-panel-density($config);\n  @include mat-stepper-density($config);\n  @include mat-toolbar-density($config);\n  @include mat-tree-density($config);\n  @include mat-paginator-density($config);\n  @include mat-form-field-density($config);\n  @include mat-button-toggle-density($config);\n}\n\n\n\n","// Angular material overwriting\n@import '~@angular/material/theming';\n\n// TYPOGRAPHY\n\n@font-face {\n  font-display: swap;\n  font-family: 'cirkaregular';\n  src: url('https://sadesignw2m.blob.core.windows.net/ubico/fonts/cirka-regular.woff2') format('woff2'),\n       url('https://sadesignw2m.blob.core.windows.net/ubico/fonts/cirka-regular.woff') format('woff');\n}\n\n@font-face {\n  font-display: swap;\n  font-family: 'cirkabold';\n  src: url('https://sadesignw2m.blob.core.windows.net/ubico/fonts/cirka-bold.woff2') format('woff2'),\n       url('https://sadesignw2m.blob.core.windows.net/ubico/fonts/cirka-bold.woff') format('woff');\n}\n\n$ubi-typography: mat-typography-config(\n  $font-family: 'Open Sans, sans-serif',\n  $headline: mat-typography-level(3.75rem, 4.6rem, 700, 'cirkabold'),\n  $title: mat-typography-level(3.125rem, 3.1rem, 700, 'cirkabold'),\n  $subheading-2: mat-typography-level(1.25rem, 2rem, 300, 'Open Sans, sans-serif'),\n  $subheading-1: mat-typography-level(1rem, 1.4rem, 400, 'Open Sans, sans-serif'),\n  $body-1: mat-typography-level(1rem, 1.4rem, 400, 'Open Sans, sans-serif'),\n  $body-2: mat-typography-level(1rem, 1.4rem, 600, 'Open Sans, sans-serif'),\n  $caption: mat-typography-level(0.75rem, 1.1rem, 400, 'Open Sans, sans-serif'),\n  $button: mat-typography-level(1rem, 1.4rem, 600, 'Open Sans, sans-serif'),\n  $display-1: mat-typography-level(6.5rem, 6rem, 700, 'cirkabold'),\n  $display-2: mat-typography-level(5.625rem, 5rem, 700, 'cirkabold'),\n);\n\n@include mat-core($ubi-typography);\n\n// COLORS\n$ubi-darkblue: (\n    50 : #E0E8EE,\n    100 : #B3C5D5,\n    200 : #809FB9,\n    300 : #4D789C,\n    400 : #265B87,\n    500 : #003E72,\n    600 : #00386A,\n    700 : #00305F,\n    800 : #002855,\n    900 : #001B42,\n    A100 : #77A0FF,\n    A200 : #447CFF,\n    A400 : #1158FF,\n    A700 : #004AF6,\n    contrast: (\n        50 : #000000,\n        100 : #000000,\n        200 : #000000,\n        300 : #FFFFFF,\n        400 : #FFFFFF,\n        500 : #FFFFFF,\n        600 : #FFFFFF,\n        700 : #FFFFFF,\n        800 : #FFFFFF,\n        900 : #FFFFFF,\n        A100 : #000000,\n        A200 : #FFFFFF,\n        A400 : #FFFFFF,\n        A700 : #FFFFFF,\n    )\n);\n\n$ubi-green: (\n    50 : #EEF7E9,\n    100 : #D5ECC7,\n    200 : #B9DFA2,\n    300 : #9CD27C,\n    400 : #87C960,\n    500 : #72BF44,\n    600 : #6AB93E,\n    700 : #5FB135,\n    800 : #55A92D,\n    900 : #429B1F,\n    A100 : #E0FFD5,\n    A200 : #BAFFA2,\n    A400 : #94FF6F,\n    A700 : #81FF56,\n    contrast: (\n        50 : #FFFFFF,\n        100 : #FFFFFF,\n        200 : #FFFFFF,\n        300 : #FFFFFF,\n        400 : #FFFFFF,\n        500 : #FFFFFF,\n        600 : #FFFFFF,\n        700 : #FFFFFF,\n        800 : #FFFFFF,\n        900 : #FFFFFF,\n        A100 : #000000,\n        A200 : #000000,\n        A400 : #000000,\n        A700 : #000000,\n    )\n);\n$ubi-softblue: (\n    50 : #E0F4FB,\n    100 : #B3E5F6,\n    200 : #80D3F0,\n    300 : #4DC1EA,\n    400 : #26B4E6,\n    500 : #00A7E1,\n    600 : #009FDD,\n    700 : #0096D9,\n    800 : #008CD5,\n    900 : #007CCD,\n    A100 : #F5FAFF,\n    A200 : #C2E3FF,\n    A400 : #8FCDFF,\n    A700 : #75C1FF,\n    contrast: (\n        50 : #000000,\n        100 : #000000,\n        200 : #000000,\n        300 : #000000,\n        400 : #000000,\n        500 : #FFFFFF,\n        600 : #FFFFFF,\n        700 : #FFFFFF,\n        800 : #FFFFFF,\n        900 : #FFFFFF,\n        A100 : #000000,\n        A200 : #000000,\n        A400 : #000000,\n        A700 : #000000,\n    )\n);\n$ubi-turquoise: (\n    50 : #E4F9FA,\n    100 : #BCEFF2,\n    200 : #8FE5E9,\n    300 : #62DAE0,\n    400 : #40D2DA,\n    500 : #1ECAD3,\n    600 : #1AC5CE,\n    700 : #16BDC8,\n    800 : #12B7C2,\n    900 : #0AABB7,\n    A100 : #E3FDFF,\n    A200 : #B0F9FF,\n    A400 : #7DF4FF,\n    A700 : #63F2FF,\n    contrast: (\n        50 : #000000,\n        100 : #000000,\n        200 : #000000,\n        300 : #000000,\n        400 : #000000,\n        500 : #000000,\n        600 : #000000,\n        700 : #000000,\n        800 : #000000,\n        900 : #FFFFFF,\n        A100 : #000000,\n        A200 : #000000,\n        A400 : #000000,\n        A700 : #000000,\n    )\n);\n$ubi-pink: (\n    50 : #FBE3F0,\n    100 : #F5B9DA,\n    200 : #EF8BC1,\n    300 : #E95CA8,\n    400 : #E43996,\n    500 : #DF1683,\n    600 : #DB137B,\n    700 : #D71070,\n    800 : #D20C66,\n    900 : #CA0653,\n    A100 : #FFF3F7,\n    A200 : #FFC0D6,\n    A400 : #FF8DB4,\n    A700 : #FF74A3,\n    contrast: (\n        50 : #000000,\n        100 : #000000,\n        200 : #000000,\n        300 : #000000,\n        400 : #FFFFFF,\n        500 : #FFFFFF,\n        600 : #FFFFFF,\n        700 : #FFFFFF,\n        800 : #FFFFFF,\n        900 : #FFFFFF,\n        A100 : #000000,\n        A200 : #000000,\n        A400 : #000000,\n        A700 : #000000,\n    )\n);\n$ubi-purple: (\n    50 : #ECE5F3,\n    100 : #CFBEE2,\n    200 : #B093CF,\n    300 : #9067BB,\n    400 : #7847AD,\n    500 : #60269E,\n    600 : #582296,\n    700 : #4E1C8C,\n    800 : #441782,\n    900 : #330D70,\n    A100 : #C2A3FF,\n    A200 : #A070FF,\n    A400 : #7F3DFF,\n    A700 : #6E24FF,\n    contrast: (\n        50 : #000000,\n        100 : #000000,\n        200 : #000000,\n        300 : #FFFFFF,\n        400 : #FFFFFF,\n        500 : #FFFFFF,\n        600 : #FFFFFF,\n        700 : #FFFFFF,\n        800 : #FFFFFF,\n        900 : #FFFFFF,\n        A100 : #000000,\n        A200 : #000000,\n        A400 : #FFFFFF,\n        A700 : #FFFFFF,\n    )\n);\n\n$ubi-gray: (\n    50 : #ECECEC,\n    100 : #D0D0D0,\n    200 : #B0B0B0,\n    300 : #909090,\n    400 : #797979,\n    500 : #616161,\n    600 : #595959,\n    700 : #4F4F4F,\n    800 : #454545,\n    900 : #333333,\n    A100 : #F39595,\n    A200 : #EE6868,\n    A400 : #FF2424,\n    A700 : #FF0A0A,\n    contrast: (\n        50 : #000000,\n        100 : #000000,\n        200 : #000000,\n        300 : #000000,\n        400 : #FFFFFF,\n        500 : #FFFFFF,\n        600 : #FFFFFF,\n        700 : #FFFFFF,\n        800 : #FFFFFF,\n        900 : #FFFFFF,\n        A100 : #000000,\n        A200 : #000000,\n        A400 : #FFFFFF,\n        A700 : #FFFFFF,\n    )\n);\n\n$ubi-red: (\n    50 : #FFE2E2,\n    100 : #FFB6B6,\n    200 : #FF8585,\n    300 : #FF5454,\n    400 : #FF2F2F,\n    500 : #FF0A0A,\n    600 : #FF0909,\n    700 : #FF0707,\n    800 : #FF0505,\n    900 : #FF0303,\n    A100 : #FFFFFF,\n    A200 : #FFF2F2,\n    A400 : #FFBFBF,\n    A700 : #FFA6A6,\n    contrast: (\n        50 : #000000,\n        100 : #000000,\n        200 : #000000,\n        300 : #000000,\n        400 : #FFFFFF,\n        500 : #FFFFFF,\n        600 : #FFFFFF,\n        700 : #FFFFFF,\n        800 : #FFFFFF,\n        900 : #FFFFFF,\n        A100 : #000000,\n        A200 : #000000,\n        A400 : #000000,\n        A700 : #000000,\n    )\n);\n\n$ubi-orange: (\n    50 : #FDF1E0,\n    100 : #FADDB3,\n    200 : #F7C680,\n    300 : #F4AF4D,\n    400 : #F19D26,\n    500 : #EF8C00,\n    600 : #ED8400,\n    700 : #EB7900,\n    800 : #E86F00,\n    900 : #E45C00,\n    A100 : #FFFFFF,\n    A200 : #FFE5D8,\n    A400 : #FFC3A5,\n    A700 : #FFB38B,\n    contrast: (\n        50 : #000000,\n        100 : #000000,\n        200 : #000000,\n        300 : #000000,\n        400 : #000000,\n        500 : #000000,\n        600 : #000000,\n        700 : #000000,\n        800 : #000000,\n        900 : #FFFFFF,\n        A100 : #000000,\n        A200 : #000000,\n        A400 : #000000,\n        A700 : #000000,\n    )\n);\n\n$app-primary: mat-palette($ubi-darkblue);\n$app-accent:  mat-palette($ubi-green);\n$app-warn:  mat-palette($ubi-orange);\n\n$ubi-app-theme: mat-light-theme(\n  (\n    color: (\n      primary: $app-primary,\n      accent: $app-accent,\n      warn: $app-warn\n    )\n  )\n);\n\n@include angular-material-theme($ubi-app-theme);\n","@import \"./variables\";\n@import \"./mixins\";\n\n//Typography\nh1,\nh2,\n.mat-display-1,\n.mat-display-2\n {\n  color: $primary;\n}\n\nh3,\nh4,\nh5,\nh6,\nstrong {\n  color: $gray;\n}\n\nh3 {\n  color: $darkgray-900;\n  font-weight: 600;\n  &::after {\n    background-color: $green;\n    content: ' ';\n    display: block;\n    height: 0.3125rem;\n    margin-top: 0.375rem;\n    width: 3.75rem;\n  }\n}\n\na {\n  color: $green;\n  text-decoration: underline;\n  transition: 0.2s;\n\n  &:hover {\n    color: $darkblue;\n    transition: 0.2s;\n  }\n}\n\n// section by colors\n.brand-color {\n  &.iberostar {\n    .app-box-image-text__info-container-big-line {\n      .app-box-image-text__info-container-big-line--left,\n      .app-box-image-text__info-container-big-line--right {\n        background-color: $iberostar-color;\n      }\n    }\n\n    .app-box-image-text__img-float-text h2:after {\n      background: $iberostar-color;\n    }\n  }\n\n  &.w2m {\n    .app-box-image-text__info-container-big-line  {\n      .app-box-image-text__info-container-big-line--left,\n      .app-box-image-text__info-container-big-line--right  {\n        background-color: $w2m-color;\n      }\n    }\n\n    .app-box-image-text__img-float-text h2:after {\n      background: $w2m-color;\n    }\n\n    .banner-data__stat-number::after {\n      background-color:  $w2m-color;\n    }\n  }\n}\n\n// Displa-1 Responsive\n.mat-display-1, .mat-typography .mat-display-1{\n  font-size: 3.2rem;\n  line-height: 3.2rem;\n  margin: 0 0 1.75rem;\n\n  @media (min-width: $media-fullhd) {\n    font-size: 6.5rem;\n    line-height: 6rem;\n  }\n}\n\n// Row Reverse\n.row-reverse {\n  @media (min-width: $media-desktop) {\n    .app-box-image-text{\n      flex-direction: $reverse-box;\n    }\n\n    .section-container-image--container {\n      left:auto !important;\n      right: 0 !important;\n    }\n  }\n}\n// Porque aqui en el base ?? \n\n\n.box-image-text-full {\n  .app-box-image-text__img-float-text {\n    align-items: center;\n    display: flex;\n    height: 100%;\n    margin: 0;\n    min-width: 100%;\n    padding: 0;\n  \n    h2 {\n      color: $white;\n      font-size: 2rem;\n      line-height: 2.5rem;\n      margin: 0;\n      padding: 3.75rem !important;\n      position: relative;\n      text-transform: uppercase;\n      z-index: 2;\n\n      @media (min-width: $media-desktop) {\n        font-size: 3.75rem;\n        line-height: 4rem;\n        padding: 7.5rem;\n      }\n\n      &:after {\n        height: 1.5rem;\n        width: 1.5rem;\n\n        @media (min-width: $media-desktop) {\n          height: 1.875rem;\n          width: 1.875rem;\n        }\n      }\n    }\n  }\n}\n\n// Padding section\n.ubi-padding-section {\npadding-bottom: 3.75rem;\npadding-top: 3.75rem;\n\n  @media (min-width: $media-desktop) {\n    @include ubi-padding-section;\n  }\n}\n\n// Ubico Button \n\nbutton {\n  border: none;\n  border-radius: 0;\n  padding: 0.75rem 1.5rem;\n  background: $primary;\n  color: $white;\n  transition: 0.2s;\n  box-shadow: 0 0;\n  cursor: pointer;\n  font-weight: 600;\n  font-size: 1rem;\n  \n  em,\n  i {\n    margin-right: 0.4375rem;\n  }\n}\n\n.btn-secondary {\n button {\n  background: $secondary;\n\n  &:hover {\n    box-shadow: 0.4375rem 0.4375rem $primary;\n    transition: 0.2s;\n  }\n }\n}\n\nbutton:hover {\n  transition: 0.2s;\n  box-shadow: 0.4375rem 0.4375rem $secondary;\n\n  &.btn-secondary-outline {\n    box-shadow: 0.4375rem 0.4375rem $primary;\n  }\n}\n","// Overriding global variables\n\n// COLORS\n\n$darkblue: #003E72;\n\n$green: #72BF44;\n\n$softblue: #00A7E1;\n$softblue-100: #B3E5F6;\n\n$turquoise: #1ECAD3;\n\n$pink: #DF1683;\n\n$purple: #60269E;\n\n$red: #FF0A0A;\n\n$orange: #F4B63E;\n\n$gray: #616161;\n$softgray-100: #D0D0D0;\n$softgray-300: #909090;\n$darkgray-900: #333333;\n\n$white: #FFFFFF;\n\n$iberostar-color: #67BAAF;\n$w2m-color: #C4D600;\n\n$titles-color: $darkblue;\n$body-color: $gray;\n$soft-text: $softgray-300;\n\n$primary: $darkblue;\n$secondary: $green;\n$tertiary: $softblue;\n$quaternary: $turquoise;\n$quinary: $pink;\n$sextary: $purple;\n\n$info: $softblue-100;\n$success: $green;\n$warning: $orange;\n$danger: $red;\n\n$headings-color: $primary;\n\n// BOX COMPONENTS\n$reverse-box: row-reverse;\n\n//Breakpoints\n$media-tablet: 48.0625rem;\n$media-desktop: 64rem;\n$media-widescreen: 76rem;\n$media-fullhd: 88rem;\n\n// Sections\n$section-padding: 7.5rem;\n","@mixin ubi-padding-section {\n  padding-bottom: $section-padding;\n  padding-top: $section-padding;\n}\n"],"sourceRoot":"webpack:///"}